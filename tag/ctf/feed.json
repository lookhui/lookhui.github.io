{
    "version": "https://jsonfeed.org/version/1",
    "title": "ililiiY • All posts by \"ctf\" tag",
    "description": "承蒙的是希望 做出你想做的",
    "home_page_url": "https://lookhui.github.io",
    "items": [
        {
            "id": "https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/",
            "url": "https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/",
            "title": "第七届强网杯wp",
            "date_published": "2023-12-17T08:08:10.000Z",
            "content_html": "<h1 id=\"第七届强网杯全国网络安全挑战赛\"><a class=\"anchor\" href=\"#第七届强网杯全国网络安全挑战赛\">#</a> 第七届 &quot;强网杯&quot; 全国网络安全挑战赛</h1>\n<h2 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h2>\n<h3 id=\"easyfuzz\"><a class=\"anchor\" href=\"#easyfuzz\">#</a> easyfuzz</h3>\n<p>通过 nc 连接的</p>\n<p>满足为全部都是 1 后就能得到 flag</p>\n<p>首先一个一个试拿 0 试然后到 Z 可以试出必须为 9 位并且前面两位是什么都行</p>\n<p>exp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"></span><br><span class=\"line\">p=remote(&quot;101.200.122.251&quot;,12199)</span><br><span class=\"line\">bb=9</span><br><span class=\"line\">cc=&quot;&quot;</span><br><span class=\"line\">vv=111111001</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">for j in range(32,128):</span><br><span class=\"line\">                print(&quot;\\n&quot;)</span><br><span class=\"line\">                p.recvuntil(&quot;bytes):&quot;)</span><br><span class=\"line\">                b=chr(j)+chr(j)+&#x27;qwbG&#x27;+chr(j)+chr(j)+&#x27;d&#x27;</span><br><span class=\"line\">                print(b)</span><br><span class=\"line\">                p.sendline(b)</span><br><span class=\"line\">                c=p.recvuntil(&quot;\\n&quot;)[-10:]</span><br><span class=\"line\">                print(c)</span><br><span class=\"line\">                print(type(c))</span><br><span class=\"line\">                if vv != int(c):</span><br><span class=\"line\">                        print(f&quot;得到&#123;b&#125;\\n&#123;c&#125;&quot;)</span><br><span class=\"line\">                        break</span><br><span class=\"line\">                    # bb -= 1</span><br><span class=\"line\">                    # cc += str(chr(j))</span><br><span class=\"line\">                    # with open(&#x27;a.txt&#x27;, &#x27;a&#x27;) as f:</span><br><span class=\"line\">                    #     f.write(vv + &#x27;\\n&#x27;)  # 将vv写入文件</span><br><span class=\"line\">                    #     vv = &#x27;11&#x27; + &#x27;0&#x27; * (bb - 2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pyjail-its-myfilter\"><a class=\"anchor\" href=\"#pyjail-its-myfilter\">#</a> Pyjail ! It's myFILTER !!!</h3>\n<p>打开后 nc 连接使用</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag藏在变量文件里面 直接open打开就能查看到</span><br><span class=\"line\">&#123;print(open(&quot;/proc/1/environ&quot;).read())&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> WEB</h2>\n<h3 id=\"happygame没有出\"><a class=\"anchor\" href=\"#happygame没有出\">#</a> happygame（没有出）</h3>\n<p>web 题我看了很久，硬是搞不懂他这个怎么 happygame 了</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">���11</span><br><span class=\"line\">\\���HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 31310a</span><br></pre></td></tr></table></figure></p>\n<p>怎么看也不像 http 呀我还用 nmap 的 - sV 扫了一下</p>\n<p>还是不行</p>\n<p>可以得到的点就是这个输入什么能输出 hex 编码后的结果并且后面还有一个 0a</p>\n<p>输出超过 24 就不会显示 0a 了</p>\n<p>并且前面的输出位数也能得到信息不同位数会发生变化得到的信息是</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z\\^`bdfhjlnprtvxz|~80 82 84 86</span><br></pre></td></tr></table></figure></p>\n<p>到了 86 后就不会在增加了</p>\n<p>转为 hex 可以知道</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5a 5c 5e 60 62 64 66 68 6a 6c 6e 70 72 74 76 78 7a 7c 7e</span><br></pre></td></tr></table></figure></p>\n<p>每经过一位相当于增加了 2</p>\n<p>还用 ciphey 跑出来了这个</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KEYS[] mgauoicwqkey</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"guess-game\"><a class=\"anchor\" href=\"#guess-game\">#</a> guess game</h3>\n<p>这种游戏题最好玩了直接通过随机多次能够出 flag</p>\n<p>exp</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import bytes_to_long, long_to_bytes</span><br><span class=\"line\">from os import urandom</span><br><span class=\"line\">from binascii import unhexlify</span><br><span class=\"line\">from pwn import *</span><br><span class=\"line\">context.log_level=&#x27;debug&#x27;</span><br><span class=\"line\">class cipher:</span><br><span class=\"line\">    def __init__(self, key, rounds=4):</span><br><span class=\"line\">        self.key = key</span><br><span class=\"line\">        self.rounds = rounds</span><br><span class=\"line\">        self.sbox = [0xc, 0x5, 0x6, 0xb, 0x9, 0x0, 0xa, 0xd, 0x3, 0xe, 0xf, 0x8, 0x4, 0x7, 0x1, 0x2]</span><br><span class=\"line\">        self.pbox = [0, 16, 32, 48, 1, 17, 33, 49, 2, 18, 34, 50, 3, 19, 35, 51, 4, 20, 36, 52, 5, 21, 37, 53, 6, 22, 38, 54, 7, 23, 39, 55, 8, 24, 40, 56, 9, 25, 41, 57, 10, 26, 42, 58, 11, 27, 43, 59, 12, 28, 44, 60, 13, 29, 45, 61, 14, 30, 46, 62, 15, 31, 47, 63]</span><br><span class=\"line\">        self.rk = self.genrk(self.key)</span><br><span class=\"line\">    </span><br><span class=\"line\">    def substitution(self, state):</span><br><span class=\"line\">        output = 0</span><br><span class=\"line\">        for i in range(16):</span><br><span class=\"line\">            output += self.sbox[state &gt;&gt; (i*4) &amp; 0xF] &lt;&lt; (i*4)</span><br><span class=\"line\">        return output</span><br><span class=\"line\">    </span><br><span class=\"line\">    def permutation(self, state):</span><br><span class=\"line\">        output = 0</span><br><span class=\"line\">        for i in range(64):</span><br><span class=\"line\">            output += ((state &gt;&gt; i) &amp; 0x1) &lt;&lt; self.pbox[i]</span><br><span class=\"line\">        return output</span><br><span class=\"line\">    </span><br><span class=\"line\">    def genrk(self, key):</span><br><span class=\"line\">        rk = []</span><br><span class=\"line\">        for i in range(1, self.rounds+1):</span><br><span class=\"line\">            rk.append(key &gt;&gt; 16)</span><br><span class=\"line\">            key = ((key &amp; (2**19-1)) &lt;&lt; 61) + (key &gt;&gt; 19)</span><br><span class=\"line\">            key = (self.sbox[key &gt;&gt; 76] &lt;&lt; 76)+(key &amp; (2**76-1))</span><br><span class=\"line\">            key ^= i &lt;&lt; 15</span><br><span class=\"line\">        return rk</span><br><span class=\"line\">    </span><br><span class=\"line\">    def addrk(self, state, rk):</span><br><span class=\"line\">        return state ^ rk</span><br><span class=\"line\">    </span><br><span class=\"line\">    def encrypt(self, pt):</span><br><span class=\"line\">        ct = b&quot;&quot;</span><br><span class=\"line\">        state = pt</span><br><span class=\"line\">        for i in range(self.rounds-1):</span><br><span class=\"line\">            state = self.addrk(state, self.rk[i])</span><br><span class=\"line\">            state = self.substitution(state)</span><br><span class=\"line\">            state = self.permutation(state)</span><br><span class=\"line\">        state = self.addrk(state, self.rk[-1])</span><br><span class=\"line\">        ct += long_to_bytes(state)</span><br><span class=\"line\">        return ct</span><br><span class=\"line\"></span><br><span class=\"line\">    def hint(self, pt):</span><br><span class=\"line\">        return self.encrypt(pt)</span><br><span class=\"line\"></span><br><span class=\"line\">count = 0</span><br><span class=\"line\">success = 0</span><br><span class=\"line\">key = int.from_bytes(urandom(10), &quot;big&quot;) </span><br><span class=\"line\">guess = list(map(int, list(bin(key)[2:].zfill(80))))</span><br><span class=\"line\">game = cipher(key)</span><br><span class=\"line\">ll=0</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    p=remote(&quot;47.97.69.130&quot;,22333)</span><br><span class=\"line\">    f=open(&quot;曲线25.txt&quot;,&quot;a&quot;)</span><br><span class=\"line\">    cc=0</span><br><span class=\"line\">    dd=0</span><br><span class=\"line\">    ll+=1</span><br><span class=\"line\">    p.recvuntil(b&quot;oken:&quot;)</span><br><span class=\"line\">    p.sendline(b&quot;icqc0ccfef5755b58ad320ede21cfa79&quot;)</span><br><span class=\"line\">    p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">    p.sendline(b&quot;2&quot;)</span><br><span class=\"line\">    for i in range(len(guess)):</span><br><span class=\"line\">        p.recvuntil(b&quot;&gt;&quot;)</span><br><span class=\"line\">        p.sendline(str(guess[i]))</span><br><span class=\"line\">        gg=p.recvline()\t</span><br><span class=\"line\">        if &quot;Right!&quot; in str(gg): </span><br><span class=\"line\">            cc+=1</span><br><span class=\"line\">        if &quot;Wrong&quot; in str(gg):</span><br><span class=\"line\">             dd+=1</span><br><span class=\"line\">    if cc&gt;57:</span><br><span class=\"line\">            print(gg)</span><br><span class=\"line\">            print(f&quot;成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">    print(gg)</span><br><span class=\"line\">    print(f&quot;成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">    print(f&quot;错误了&#123;dd&#125;次&quot;)</span><br><span class=\"line\">    f.write(f&quot;第&#123;ll&#125;把，成功了&#123;cc&#125;次&quot;)</span><br><span class=\"line\">    f.write(f&quot;失败了&#123;dd&#125;次\\n&quot;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"强网先锋\"><a class=\"anchor\" href=\"#强网先锋\">#</a> 强网先锋</h2>\n<h3 id=\"speedup\"><a class=\"anchor\" href=\"#speedup\">#</a> SpeedUp</h3>\n<p>通过计算跑出</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeedUp</span><br><span class=\"line\"></span><br><span class=\"line\">找到2的27次方</span><br><span class=\"line\">4495662081 去md5加密成sha256 flag&#123;加密后的&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF"
            ]
        }
    ]
}