<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lookhui.github.io</id>
    <title>ililiiY • Posts by &#34;ctf&#34; tag</title>
    <link href="https://lookhui.github.io" />
    <updated>2023-12-17T08:08:10.000Z</updated>
    <category term="渗透" />
    <category term="PWN" />
    <category term="WEB" />
    <category term="HTB" />
    <category term="mobile" />
    <category term="比赛" />
    <category term="reverse" />
    <category term="CTF" />
    <category term="记录贴" />
    <entry>
        <id>https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/</id>
        <title>第七届强网杯wp</title>
        <link rel="alternate" href="https://lookhui.github.io/%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AFwp/"/>
        <content type="html">&lt;h1 id=&#34;第七届强网杯全国网络安全挑战赛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第七届强网杯全国网络安全挑战赛&#34;&gt;#&lt;/a&gt; 第七届 &amp;quot;强网杯&amp;quot; 全国网络安全挑战赛&lt;/h1&gt;
&lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; misc&lt;/h2&gt;
&lt;h3 id=&#34;easyfuzz&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#easyfuzz&#34;&gt;#&lt;/a&gt; easyfuzz&lt;/h3&gt;
&lt;p&gt;通过 nc 连接的&lt;/p&gt;
&lt;p&gt;满足为全部都是 1 后就能得到 flag&lt;/p&gt;
&lt;p&gt;首先一个一个试拿 0 试然后到 Z 可以试出必须为 9 位并且前面两位是什么都行&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&amp;quot;101.200.122.251&amp;quot;,12199)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bb=9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cc=&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vv=111111001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for j in range(32,128):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                print(&amp;quot;\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.recvuntil(&amp;quot;bytes):&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                b=chr(j)+chr(j)+&amp;#x27;qwbG&amp;#x27;+chr(j)+chr(j)+&amp;#x27;d&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                print(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.sendline(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                c=p.recvuntil(&amp;quot;\n&amp;quot;)[-10:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                print(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                print(type(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if vv != int(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        print(f&amp;quot;得到&amp;#123;b&amp;#125;\n&amp;#123;c&amp;#125;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    # bb -= 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    # cc += str(chr(j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    # with open(&amp;#x27;a.txt&amp;#x27;, &amp;#x27;a&amp;#x27;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    #     f.write(vv + &amp;#x27;\n&amp;#x27;)  # 将vv写入文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    #     vv = &amp;#x27;11&amp;#x27; + &amp;#x27;0&amp;#x27; * (bb - 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;pyjail-its-myfilter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pyjail-its-myfilter&#34;&gt;#&lt;/a&gt; Pyjail ! It&#39;s myFILTER !!!&lt;/h3&gt;
&lt;p&gt;打开后 nc 连接使用&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag藏在变量文件里面 直接open打开就能查看到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;print(open(&amp;quot;/proc/1/environ&amp;quot;).read())&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web&#34;&gt;#&lt;/a&gt; WEB&lt;/h2&gt;
&lt;h3 id=&#34;happygame没有出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#happygame没有出&#34;&gt;#&lt;/a&gt; happygame（没有出）&lt;/h3&gt;
&lt;p&gt;web 题我看了很久，硬是搞不懂他这个怎么 happygame 了&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;���11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\���HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 31310a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;怎么看也不像 http 呀我还用 nmap 的 - sV 扫了一下&lt;/p&gt;
&lt;p&gt;还是不行&lt;/p&gt;
&lt;p&gt;可以得到的点就是这个输入什么能输出 hex 编码后的结果并且后面还有一个 0a&lt;/p&gt;
&lt;p&gt;输出超过 24 就不会显示 0a 了&lt;/p&gt;
&lt;p&gt;并且前面的输出位数也能得到信息不同位数会发生变化得到的信息是&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Z\^`bdfhjlnprtvxz|~80 82 84 86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到了 86 后就不会在增加了&lt;/p&gt;
&lt;p&gt;转为 hex 可以知道&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;5a 5c 5e 60 62 64 66 68 6a 6c 6e 70 72 74 76 78 7a 7c 7e&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每经过一位相当于增加了 2&lt;/p&gt;
&lt;p&gt;还用 ciphey 跑出来了这个&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;KEYS[] mgauoicwqkey&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;crypto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto&#34;&gt;#&lt;/a&gt; Crypto&lt;/h2&gt;
&lt;h3 id=&#34;guess-game&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#guess-game&#34;&gt;#&lt;/a&gt; guess game&lt;/h3&gt;
&lt;p&gt;这种游戏题最好玩了直接通过随机多次能够出 flag&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import bytes_to_long, long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from os import urandom&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from binascii import unhexlify&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class cipher:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def __init__(self, key, rounds=4):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.key = key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.rounds = rounds&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.sbox = [0xc, 0x5, 0x6, 0xb, 0x9, 0x0, 0xa, 0xd, 0x3, 0xe, 0xf, 0x8, 0x4, 0x7, 0x1, 0x2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.pbox = [0, 16, 32, 48, 1, 17, 33, 49, 2, 18, 34, 50, 3, 19, 35, 51, 4, 20, 36, 52, 5, 21, 37, 53, 6, 22, 38, 54, 7, 23, 39, 55, 8, 24, 40, 56, 9, 25, 41, 57, 10, 26, 42, 58, 11, 27, 43, 59, 12, 28, 44, 60, 13, 29, 45, 61, 14, 30, 46, 62, 15, 31, 47, 63]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.rk = self.genrk(self.key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def substitution(self, state):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        output = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for i in range(16):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            output += self.sbox[state &amp;gt;&amp;gt; (i*4) &amp;amp; 0xF] &amp;lt;&amp;lt; (i*4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def permutation(self, state):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        output = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for i in range(64):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            output += ((state &amp;gt;&amp;gt; i) &amp;amp; 0x1) &amp;lt;&amp;lt; self.pbox[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def genrk(self, key):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rk = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for i in range(1, self.rounds+1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            rk.append(key &amp;gt;&amp;gt; 16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            key = ((key &amp;amp; (2**19-1)) &amp;lt;&amp;lt; 61) + (key &amp;gt;&amp;gt; 19)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            key = (self.sbox[key &amp;gt;&amp;gt; 76] &amp;lt;&amp;lt; 76)+(key &amp;amp; (2**76-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            key ^= i &amp;lt;&amp;lt; 15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return rk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def addrk(self, state, rk):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return state ^ rk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def encrypt(self, pt):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ct = b&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        state = pt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for i in range(self.rounds-1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            state = self.addrk(state, self.rk[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            state = self.substitution(state)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            state = self.permutation(state)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        state = self.addrk(state, self.rk[-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ct += long_to_bytes(state)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return ct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def hint(self, pt):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return self.encrypt(pt)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;success = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = int.from_bytes(urandom(10), &amp;quot;big&amp;quot;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;guess = list(map(int, list(bin(key)[2:].zfill(80))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;game = cipher(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ll=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p=remote(&amp;quot;47.97.69.130&amp;quot;,22333)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f=open(&amp;quot;曲线25.txt&amp;quot;,&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cc=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dd=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ll+=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;quot;oken:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(b&amp;quot;icqc0ccfef5755b58ad320ede21cfa79&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(b&amp;quot;&amp;gt;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(b&amp;quot;2&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(len(guess)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.recvuntil(b&amp;quot;&amp;gt;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.sendline(str(guess[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gg=p.recvline()	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if &amp;quot;Right!&amp;quot; in str(gg): &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cc+=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if &amp;quot;Wrong&amp;quot; in str(gg):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             dd+=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if cc&amp;gt;57:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            print(gg)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            print(f&amp;quot;成功了&amp;#123;cc&amp;#125;次&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(gg)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;quot;成功了&amp;#123;cc&amp;#125;次&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(f&amp;quot;错误了&amp;#123;dd&amp;#125;次&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(f&amp;quot;第&amp;#123;ll&amp;#125;把，成功了&amp;#123;cc&amp;#125;次&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f.write(f&amp;quot;失败了&amp;#123;dd&amp;#125;次\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;强网先锋&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#强网先锋&#34;&gt;#&lt;/a&gt; 强网先锋&lt;/h2&gt;
&lt;h3 id=&#34;speedup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#speedup&#34;&gt;#&lt;/a&gt; SpeedUp&lt;/h3&gt;
&lt;p&gt;通过计算跑出&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SpeedUp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;找到2的27次方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4495662081 去md5加密成sha256 flag&amp;#123;加密后的&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <category term="CTF" />
        <updated>2023-12-17T08:08:10.000Z</updated>
    </entry>
</feed>
