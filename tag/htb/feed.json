{
    "version": "https://jsonfeed.org/version/1",
    "title": "ililiiY • All posts by \"htb\" tag",
    "description": "承蒙的是希望 做出你想做的",
    "home_page_url": "https://lookhui.github.io",
    "items": [
        {
            "id": "https://lookhui.github.io/HTB-reverse/",
            "url": "https://lookhui.github.io/HTB-reverse/",
            "title": "HTB-reverse",
            "date_published": "2023-12-20T07:56:46.000Z",
            "content_html": "<h3 id=\"behind-the-scenes\"><a class=\"anchor\" href=\"#behind-the-scenes\">#</a> Behind the Scenes</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ida打开后能看到HTB&#123;%S%S&#125;标识，直接找到带入即可</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"simple-encryptor\"><a class=\"anchor\" href=\"#simple-encryptor\">#</a> Simple Encryptor</h3>\n<p>这个的话主要看前面那个代码然后本地分析，需要注意的是这个要在 linux 运行才能对</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">int read_file(char *name, char **buff)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    FILE *file;</span><br><span class=\"line\">    int sz;</span><br><span class=\"line\"></span><br><span class=\"line\">    file = fopen(name, &quot;rb&quot;);</span><br><span class=\"line\">    fseek(file, 0, SEEK_END);</span><br><span class=\"line\">    sz = ftell(file);</span><br><span class=\"line\">    rewind(file);</span><br><span class=\"line\">    *buff = (char *)calloc(sz + 1, 1);</span><br><span class=\"line\">    fread(*buff, 1, sz, file);</span><br><span class=\"line\">    fclose(file);</span><br><span class=\"line\"></span><br><span class=\"line\">    return sz;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    char *buff;</span><br><span class=\"line\">    int i, r1, r2, size;</span><br><span class=\"line\"></span><br><span class=\"line\">    size = read_file(&quot;flag.enc&quot;, &amp;buff);</span><br><span class=\"line\"></span><br><span class=\"line\">    r1 = *(int *)buff;</span><br><span class=\"line\">    srand(r1);</span><br><span class=\"line\">    printf(&quot;%d\\n&quot;, r1);</span><br><span class=\"line\">    for (i = 4; i &lt; size; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        r1 = rand();</span><br><span class=\"line\">        r2 = rand() &amp; 7;</span><br><span class=\"line\">        buff[i] = (buff[i] &lt;&lt; (8 - r2)) | ((unsigned char)buff[i] &gt;&gt; r2);</span><br><span class=\"line\">        buff[i] ^= r1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    printf(&quot;%s\\n&quot;, &amp;buff[4]);</span><br><span class=\"line\"></span><br><span class=\"line\">    free(buff);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "HTB"
            ]
        }
    ]
}